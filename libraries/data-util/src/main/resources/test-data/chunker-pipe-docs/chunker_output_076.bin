
tika-input-doc-084"PMultiLoRA: Multi-Directional Low-Rank Adaptation for Multi-Domain Recommendation*—MultiLoRA: Multi-Directional Low-Rank Adaptation for Multi-Domain Recommendation Zijian Song School of CS, Peking University Beijing, China 2201111590@stu.pku.edu.cn Wenhan Zhang School of CS, Peking University Beijing, China pku_zwh@pku.edu.cn Lifang Deng Lazada Group Beijing, China wanmei.dlf@alibaba-inc.com Jiandong Zhang Lazada Group Beijing, China chensong.zjd@alibaba-inc.com Kaigui Bian School of CS, Peking University Beijing, China bkg@pku.edu.cn Bin Cui School of CS, Peking University Beijing, China bin.cui@pku.edu.cn Abstract To address the business needs of industrial recommendation sys- tems, an increasing number of Multi-Domain Recommendation (MDR) methods are designed to improve recommendation perfor- mance on multiple domains simultaneously. Most MDR methods follow a multi-task learning paradigm, suffering from poor deploy- ability and negative transfer. Due to the great success of large pre-trained models, the pre-train & fine-tune paradigm is attract- ing increasing attention. The latest methods introduce parameter- efficient fine-tuning techniques like prompt-tuning, showcasing high efficiency and effectiveness. However, these methods neglect the fundamental differences between recommendation and NLP tasks. The inadequate capacity of recommendation models restricts the effectiveness of prompts and adapters. Worse still, traditional natural domain division may group non-identically distributed sam- ples into the same domain, violating the assumption of independent and identically distributed (i.i.d.) data. In this paper, we propose MultiLoRA, aMulti-directional Low Rank Adaptation paradigm for multi-domain recommendation. First we pre-train a universal model using all data samples. Then we conduct multiple domain divisions on the sample space. Under each division, we fine-tune the pre-trained model to obtain a set of domain-specific LoRAs. Fi- nally, we learn a LoRA fusion module to integrate domain-specific preference patterns across multiple divisions. Experimental results on real-world datasets demonstrate notable advantages of Multi- LoRA: (1) achieving SOTA performance, (2) showcasing remarkable compatibility, and (3) proving highly efficient, featuring only 2% trainable parameters compared to the backbone. Zijian Song, Wenhan Zhang, Kaigui Bian, and Bin Cui are affiliated with School of CS, AI Innovation Center, National Engineering Laboratory for Big Data Analysis and Applications, Peking University. Lifang Deng, Jiandong Zhang are affiliated with Lazada Group. Kaigui Bian is also affiliated with State Key Laboratory of Multimedia Information Processing, Peking University. Permission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or commercial advantage and that copies bear this notice and the full citation on the first page. Copyrights for components of this work owned by others than the author(s) must be honored. Abstracting with credit is permitted. To copy otherwise, or republish, to post on servers or to redistribute to lists, requires prior specific permission and/or a fee. Request permissions from permissions@acm.org. CIKM ‚Äô24, October 21‚Äì25, 2024, Boise, ID, USA ¬© 2024 Copyright held by the owner/author(s). Publication rights licensed to ACM. ACM ISBN 979-8-4007-0436-9/24/10 https://doi.org/10.1145/3627673.3679549 CCS Concepts ‚Ä¢ Information systems ‚Üí Recommender systems; ‚Ä¢ Comput- ing methodologies ‚Üí Transfer learning. Keywords Multi-Domain Recommendation, Click-Through Rate Prediction, Parameter-Efficient Fine-Tuning, Low-Rank Adaptation ACM Reference Format: Zijian Song, Wenhan Zhang, Lifang Deng, Jiandong Zhang, Kaigui Bian, and Bin Cui. 2024. MultiLoRA: Multi-Directional Low-Rank Adaptation for Multi-Domain Recommendation. In Proceedings of the 33rd ACM Interna- tional Conference on Information and Knowledge Management (CIKM ‚Äô24), October 21‚Äì25, 2024, Boise, ID, USA. ACM, New York, NY, USA, 10 pages. https://doi.org/10.1145/3627673.3679549 1 Introduction base model ùõ© stylized model ùõ©1 stylized model ùõ©2 multi-style model ùõ©{1,2} LoRA Œîùõ©1 (animal) LoRA Œîùõ©2 (impressionism) Text-to-Image Prompt: village, portrait, cat girl (a) Multiple LoRAs for Image Generation (b) Multiple LoRAs for Recommendation (Ours) universal model ùõ∑ model for task 1 model for task 2 model for composite task LoRA Œîùõ∑2 (clothing items) LoRA Œîùõ∑1 (female users) Figure 1: Comparison of using multiple LoRAs for image generation and recommendation. For recommendation, We design LoRA fusion module to calculate the combination weights instead of using manually assigned ‚Äú1‚Äù. Click-Through Rate (CTR) prediction is an important problem in recommendation with widespread applications [2, 13, 25, 30, 31]. To meet the needs of modern recommendation platforms with mul- tiple domains, Multi-Domain Recommendation (MDR) has gained popularity in recent years to capture domain commonalities and 2148 https://orcid.org/0009-0005-7725-2497 https://orcid.org/0009-0007-3015-8596 https://orcid.org/0009-0003-6940-8303 https://orcid.org/0000-0003-3404-1559 https://orcid.org/0000-0003-0136-6082 https://orcid.org/0000-0003-1681-4677 https://doi.org/10.1145/3627673.3679549 https://doi.org/10.1145/3627673.3679549 http://crossmark.crossref.org/dialog/?doi=10.1145%2F3627673.3679549&domain=pdf&date_stamp=2024-10-21 CIKM ‚Äô24, October 21‚Äì25, 2024, Boise, ID, USA Zijian Song et al. diversities concurrently. However, most existing MDR methods are based on the multi-task learning (MTL) paradigm, where a uni- fied model is trained to serve all domains [35]. These methods are usually tailored for specific business scenarios, resulting in poor compatibility and limited deployability [29]. For example, the star topology based on fully connected networks in STAR [27] may hinder its integration with additional modules like factorization machines. Additionally, MTL-based models receive supervision sig- nals from numerous domains, which inevitably leads to conflicts and negative transfer [37]. Worse still, most of them heavily rely on overlapping users or items [35], which is often unavailable in real-world applications. On the other hand, the pre-train & fine-tune paradigm is at- tracting increasing attention, inspired by the great success of large pre-trained models in natural language processing (NLP) and com- puter vision (CV) areas. Specifically, a universal model is pre-trained using data from all domains, then fine-tuned on the target domain. This paradigm is compatible with almost any modules or structures, and the model receives signals only from the target domain while fine-tuning, mitigating conflicts and overlapping reliance. How- ever, full fine-tuning constructs an entire domain-specific model for each domain, leading to high computation and storage costs. Fine-tuning on a small task may also cause catastrophic forget- ting, making the model forget common knowledge learned during pre-training [5, 21]. In contrast, Parameter-Efficient Fine-Tuning (PEFT) methods are more efficient and effective, fine-tuning only a small proportion of parameters. The latest MDR methods introduce prompt-tuning [14, 17] or adapters [10] to adapt the pre-trained model to the target domain. Specifically, PLATE [29] adds prompts before the input to help themodel better understand and accomplish domain-specific recommendation, while HAMUR [16] generates a trainable layer (i.e., an adapter) to process hidden states. They sub- tly prevent catastrophic forgetting and achieve better performance than full fine-tuning. However, these methods overlook the fundamental differences between recommendation and NLP tasks. Recommendation mod- els heavily rely on ID-based embeddings, which seriously hinders the development of general-purpose large-scale recommendation models [33]. Prompt-tuning only modifies the input, and adapters add just a single layer of domain-specific parameters, making them inadequate for learning new tasks when the pre-trained model‚Äôs capabilities are insufficient. In contrast, the Low-Rank Adaptation (LoRA) module [11], which updates all parameters, offers greater expressiveness in such cases. This is why LoRA is more commonly used in image generation than prompt-tuning. For example, as shown in Figure 1a, the diffusion model cannot achieve satisfactory output (anthropomorphic animals) through prompt adjustments without the help of LoRA, which is similar in the MDR context. Furthermore, there is another neglect in previous works that can be addressed by LoRA. The partitioning of domains is customarily based on a natural feature [15], such as the item category [20], or the recommendation scenario [27]. We refer to this partitioning as a Natural Domain Division, which may render samples with dif- ferent distributions in the same domain, violating the independent and identically distributed (i.i.d.) data assumption. For example, in Figure 2, if we use User Gender as the criterion, samples ùëü1 and ùëü2 would be assigned to different domains. This intuitively makes Sample ùíìùüè user clicked item in the Front Page gender: age: ‚Ä¶‚Ä¶ female young ‚Ä¶‚Ä¶ User Profile name: category: ‚Ä¶‚Ä¶ dress clothes ‚Ä¶‚Ä¶ Item Profile Sample ùíìùüê user clicked item in the Front Page gender: age: ‚Ä¶‚Ä¶ male old ‚Ä¶‚Ä¶ User Profile name: category: ‚Ä¶‚Ä¶ jeans clothes ‚Ä¶‚Ä¶ Item Profile Sample Space Division 1 criterion: user gender F M Division 2 item category Clothes Food Eletronics ùíìùüè ùíìùüê Figure 2: Depending on the criterion of domain division, non- identically distributed samples may be assigned to the same domain. sense, as male and female users indeed exhibit distinct preferences. However, if we use Item Category, they would coexist in the same domain, which violates the i.i.d. data assumption and compromises the performance. To alleviate this issue, we can use two criteria simultaneously, dividing the sample space into 2 √ó 3 = 6 domains. However, this leads to a dramatic increase in domain amount, and exacerbates the already existing data sparsity issue. Fortunately, prior studies show that integrating multiple LoRAs can help diffusion models generate images with multiple styles [24, 36], as shown in Figure 1a. This is a capability that prompts and adapters do not possess, enabling us to learn composite recommen- dation tasks. Specifically, we introduce several Auxiliary Domain Divisions based on manually chosen criteria (for simplicity, we introduce only one in this paper). We then learn LoRAs in different directions respectively, and combine them to indirectly achieve a finer-grained domain division, as illustrated in Figure 1b. To address the challenges mentioned above, this paper proposes MultiLoRA, aMulti-directional Low Rank Adaptation paradigm for multi-domain recommendation. MultiLoRA is a pre-train and fine-tune paradigm compatible with most existing CTR methods, making it easy to deploy. It has three stages. First, we pre-train a unified recommendation model using all data to capture universal preference patterns. Second, we learn a set of domain-specific Lo- RAs under each domain division. Finally, we train a LoRA fusion module to combine multi-directional LoRAs, obtaining preference patterns on a finer-grained domain. The contribution of this study is summarized as follows. ‚Ä¢ We propose MultiLoRA, a plug-and-play training paradigm com- patible with most CTR prediction models, transforming them into powerful multi-domain recommendation models. ‚Ä¢ To the best of our knowledge, we are the first to introduce LoRA into recommendation systems. We design a novel LoRA module tailored for domain adaptation in MDR. It is computationally efficient, requiring learning only 2% of the parameters compared to the pre-trained model. This module addresses catastrophic forgetting, leading to enhanced recommendation performance. ‚Ä¢ To the best of our knowledge, we are the first to study the data distribution inconsistency issue in MDR. We devise a LoRA fu- sion module to combine domain-specific LoRAs trained under different domain divisions, obtaining preference patterns from various perspectives. ‚Ä¢ Through extensive experiments conducted on three real-world datasets, we demonstrate that MultiLoRA outperforms state-of- the-art methods in both efficiency and effectiveness. 2149 MultiLoRA: Multi-Directional Low-Rank Adaptation for Multi-Domain Recommendation CIKM ‚Äô24, October 21‚Äì25, 2024, Boise, ID, USA 2 Preliminary 2.1 Low-Rank Adaptation Low-Rank Adaptation (LoRA) is a technique that originally ap- peared in the natural language processing field, used to adapt large language models to downstream tasks. Hu et al. [11] claim that the change of model weights during the fine-tuning has a low intrinsic rank. Thus, it is possible to use low-rank matrix decomposition to approximate this change. Specifically, for a pre-trained weight ma- trixùëæ0 ‚àà Rùëë√óùëò , its change during fine-tuning can be represented in a low-rank form: ùëæ0 + Œîùëæ =ùëæ0 + ùëºùë´, (1) where ùë´ ‚àà Rùëü√óùëò is the downsampling matrix, and ùëº ‚àà Rùëë√óùëü is the upsampling matrix, and ùëü ‚â™ min(ùëë, ùëò). Linear algebra teaches us that the rank of ùëºùë´ is at most ùëü . While fine-tuning, we learn matrices ùëº and ùë´ to approximate Œîùëä . Later, LoRA was widely adopted in the field of image generation. By training on only a few images, LoRA can control the output style of diffusion models or help them generate images beyond their original capabilities. For instance, as shown in Figure 1, the base model cannot generate an anthropomorphic animal on its own, regardless of the text-to-image prompt used. However, with the help of a LoRA module trained on a few images, the model gains the ability to draw something it has never seen before. Our reasons for choosing LoRA are twofold: (1) While employing only low-rank matrices, LoRA is involved in the updates of a large number of parameters. In contrast, adapters and prompt-tuning only affect a small proportion of parameters, and their effectiveness heavily relies on the capabilities of the pre-trained model; (2) In image generation, multiple LoRAs can be combined to generate images that carry multiple styles, providing rich customizability [24, 36]. Hence, we can conduct multiple domain divisions, and two domain-specific LoRAs under different domain divisions can be easily combined to achieve finer-grained domain division. 2.2 Multi-Domain CTR Prediction A traditional CTR prediction model is trained on a single domain, with various features such as user profiles, item attributes, context information, and historical interactions as input ùíô . These raw fea- tures are then mapped into low-dimensional embedding ùíÜ, fed into the subsequent prediction model to calculate the predicted CTR ùë¶. The ground truth label ùë¶ is then used to calculate the value of the loss function. The multi-domain CTR model takes an additional input, the domain indicator ùëë . The objective is to find a function F that can predict CTR ùë¶ for every domain: minùúΩ 1 ùê∑ ùê∑‚àëÔ∏Å ùëë=1 1 |Dùëë | |Dùëë |‚àëÔ∏Å ùëñ=1 Lùê∂ùëáùëÖ (F (ùíôùëëùëñ , ùëë ;ùúΩ ), ùë¶ùëëùëñ ) (2) where ùúΩ denotes the parameters of the model, ùê∑ is the number of domains, Dùëë is the sample space of the ùëë-th domain. 2.3 Typical Architecture of CTR Backbones A typical CTR prediction backbone consists of three components: embedding layer, feature interaction layer, and output layer [29, 34]. ‚Ä¶ user feature item feature context feature combination feature Input Embedding Layer Feature Interaction Logistic Regression ‡∑úùë¶ Figure 3: Typical Click-Through Rate prediction backbone architecture. We only fine-tune the feature interaction layer to capture domain-specific preference patterns. 2.3.1 Embedding Layer. The raw features in the dataset can be cat- egorized into two types: sparse features, which include categorical information represented by one/multi-hot vectors; and dense fea- tures, which contain numerical information represented by scalars. Assuming the dataset contains ùëõ sparse features ùíõùëñ andùëö dense features ùëé ùëó , the input is represented as: ùíô = {ùíõ1, ¬∑ ¬∑ ¬∑ , ùíõùëõ ;ùëé1, ¬∑ ¬∑ ¬∑ , ùëéùëö}. (3) Sparse features are often mapped into a low-dimensional embed- ding by a look-up table: ùíÜùëñ = ùë¨ùëñùíõùëñ , where ùë¨ùëñ ‚àà Rùë¢ùëñ√óùëò is the mapping matrix of the ùëñ-th feature field, and ùë¢ùëñ represents the number of categories in the ùëñ-th sparse feature, and ùëò is the dimensionality of embeddings. As for multi-hot sparse features, we conduct mean- pooling on embeddings of all non-zero feature values. For dense features, we apply normalization to ensure the consistency of the data distribution. The output of the embedding layer is the concate- nation of all feature fields‚Äô embeddings: ùëí = [ùëí1, ¬∑ ¬∑ ¬∑ , ùëíùëõ+ùëö] . (4) 2.3.2 Feature Interaction. This part captures the impact of interac- tions between various feature fields on the click-through rate. Its structure often reflects the fundamental differences among various CTR methods. Depending on the choice of the backbone network, the feature interaction layer can capture interactions between fea- ture fields that are explicit or implicit, low-dimensional or high- dimensional. For instance, Wide&Deep [3] is a widely used model that simultaneously captures linear feature combination and im- plicit high-dimensional feature interactions; DeepFM [6] captures both explicit second-order feature interactions and implicit high- dimensional interactions; DCN [28] captures both explicit and im- plicit high-dimensional interactions. Our fine-tuning is conducted on this layer to capture domain preference patterns. It is notewor- thy that some backbones contain normalization layers, which are unsatisfactory when dealing with multi-domain data with differ- ent distributions. Hence, during the fine-tuning stage, we instead employ the domain normalization layer like STAR [27]. Finally, we denote the output of the feature interaction layer as ùíâ(ùêø) , where ùêø is the depth of the feature interaction network. 2.3.3 Output Layer. This layer takes ùíâ(ùêø) as input and perform logistic regression to predict CTR: ùë¶ = ùúé (ùëæùëúùíâ (ùêø) + ùëèùëú ), (5) whereùëæùëú , ùëèùëú are trainable parameters, ùúé is sigmoid activation. 2150 CIKM ‚Äô24, October 21‚Äì25, 2024, Boise, ID, USA Zijian Song et al. scaling & offset LoRA Backbone Embedding Layer Backbone Embedding Layer ùê∑ ‚àº ùí©(0, ùúé2) ùëü ùëà = 0 Backbone LoRA LoRA Fusion Embedding Layer Stage 1: Pretrain updated frozen Stage 2: Multi-Directional Low-Rank Adaptation Stage 3: LoRA Fusion ‚àà ùìì ùíèùíÇùíïùíñùíìùíÇùíç (or ùìì ùíÇùíñùíôùíäùíçùíäùíÇùíìùíö ) ‚àà ùìì ùíèùíÇùíïùíñùíìùíÇùíç ‚à© ùìì ùíÇùíñùíôùíäùíçùíäùíÇùíìùíö Figure 4: Overall architecture of MultiLoRA paradigm. In the pre-train stage, we train the backbone with data from all domains. In the multi-directional low-rank adaptation stage, we fine-tune the model to obtain domain-specific LoRAs under both natural and auxiliary domain divisions. In the fusion stage, we train a LoRA fusion module to integrate multi-directional parameter updates, and obtain the model for the composite task. At last, we employ Binary Cross Entropy (BCE) as the loss function to train the backbone, with the optimization objective expressed as follows: minùúΩL = ‚àí 1 |T | | T |‚àëÔ∏Å ùëñ=1 ùë¶ùëñ log(ùë¶ùëñ ) + (1 ‚àí ùë¶ùëñ ) log(1 ‚àí ùë¶ùëñ ), (6) where ùë¶ùëñ is the ground truth label, and ùë¶ùëñ is the predicted CTR of the ùëñ-th sample, respectively, and T is the training sample space. 3 Method 3.1 Overview To address the limitation of existing multi-domain recommendation methods, we propose MultiLoRA paradigm, as shown in Figure 4. MultiLoRA is a plug-and-play training paradigm that can be applied tomost backbone networks that follow the framework in Section 2.3. It consists of following three stages. ‚Ä¢ Pretrain: We pre-train the backbone network with all samples in the dataset, capturing common preference patterns shared across domains. ‚Ä¢ Multi-Directional Low-Rank Adaptation: We freeze the em- bedding layer and the output layer, and fine-tune the feature interaction layer. Specifically, we employ parameter-efficient fine-tuning (PEFT) technique to low-rank adapt the pre-trained model to the target domain. Since naturally divided domains may contain non-identically distributed samples, we introduce an additional auxiliary domain division and train another set of LoRAs. The selection of the auxiliary domain division is further discussed in Section 4.5. ‚Ä¢ LoRA Fusion: Inspired by the stackability of LoRA observed in the image generation field, we aim to simultaneously utilize two sets of LoRAs for joint prediction. For this purpose, we train a LoRA fusion module. After the three stages of training, we can use both sets of LoRAs and the LoRA fusion module for joint prediction, or we can use only one set of LoRAs for prediction.We refer to the latter as SingleLoRA. 3.2 Multi-Directional Low-Rank Adaptation To retain the common knowledge learned during pre-training as much as possible, we freeze the embedding layer and the output layers during fine-tuning. We fine-tune only the feature interaction layer because it learns to identify crucial feature interactions, which reflect the preference patterns in that domain. Previous studies indicate that during continuous learning via fine-tuning, a model may forget knowledge acquired in previous tasks, a phenomenon known as catastrophic forgetting [5, 21]. For MDR, this means the model could forget previously acquired domain-shared patterns, thereby impairing its performance in the target domain. To avoid catastrophic forgetting, we introduce Low-Rank Adap- tation (LoRA). Hu et al. [11] claim that the change in weights during fine-tuning has a low intrinsic rank, making it possible to use low- rank matrix decomposition to approximate this change. Building upon their work, we enhanced the form of the low-rank matrix de- composition by adding scaling and offset terms, further boosting the expressiveness of the LoRA module. Specifically, for a pre-trained weight matrixùëæ0 ‚àà Rùëë√óùëò , we assume that its update during fine- tuning can be represented in a simple low-rank form: ùëæ0 + Œîùëæ =ùëæ0 + (ùíî ‚äó ùëºùë´) , (7) where ùëº ‚àà Rùëë√óùëü , ùë´ ‚àà Rùëü√óùëò , ùíî ‚àà Rùëë , and ùëü ‚â™ min(ùëë, ùëò). ‚äó repre- sents the Hadamard product between ùëºùë´ and broadcasted coeffi- cient vector ùíî, such that the ùëñ-th row of ùëºùë´ gets multiplied with ùëñ-th element of ùíî. Similarly, for a pre-trained bias ùíÉ0 ‚àà Rùëë , we learn its update ùíÉ . For the forward passing ùíâ =ùëæ0ùíô + ùíÉ0 in the pre-trained model, our modified version is: ùíâ‚Ä≤ = (ùëæ0 + Œîùëæ ) ùíô + (ùíÉ0 + ùíÉ) = (ùëæ0ùíô + ùíÉ0) + (ùíî ‚äó ùëºùë´) ùíô + ùíÉ . (8) 2151 MultiLoRA: Multi-Directional Low-Rank Adaptation for Multi-Domain Recommendation CIKM ‚Äô24, October 21‚Äì25, 2024, Boise, ID, USA During fine-tuning,ùëæ0, ùíÉ0 are frozen, while ùëº ,ùë´, ùíî, ùíÉ are trainable parameters of the LoRA module. We use random Gaussian initial- ization for ùë´, ùíî, and zero for ùëº , ùíÉ . In this way, the update value (ùíî ‚äó ùëºùë´) ùíô + ùíÉ is zero at the beginning of fine-tuning. It is noteworthy that, due to the distribution shifts across do- mains, traditional normalization is insufficient, and we maintain domain-specific batch normalization layers for each domain (like STAR [27]). Assuming the sample comes from domain ùê¥, we have ùíâ(ùëô ) = DomNorm ( ùíâ(ùëô )0 + ùíâ(ùëô ) ùê¥ ;ùê¥, ùëô ) , DomNorm (‚Ñé;ùê¥, ùëô) = ùõæ (ùëô ) ùê¥ ‚äó ‚Ñé ‚àí ùúáùê¥‚àöÔ∏É ùúé2 ùê¥ + ùúñ + ùõΩ (ùëô ) ùê¥ , (9) where ùíâ(ùëô )0 ,ùíâ(ùëô ) ùê¥ are the ùëô-th hidden layer outputs of the pre-trained model and the LoRA, and ùõæ (ùëô ) ùê¥ , ùõΩ (ùëô ) ùê¥ are learnable parameters. Since natural domain division may assign non-identically dis- tributed samples to the same domain, and naive finer-grained do- main division exacerbates data sparsity, we manually choose a criterion and conduct an auxiliary domain division on the sample space. Under natural and auxiliary domain divisions, we train two sets of LoRAs pointing in different directions. 3.3 LoRA Fusion LoRA, along with diffusion models [9, 22], find extensive applica- tions in the image generation field 1. One of the most interesting applications of LoRA is that multiple LoRAs can be weightedly integrated to generate images that carry multiple styles, greatly improving customizability [24, 36]. Inspired by this, we aim to combine the domain-specific LoRAs obtained under multiple domain divisions to collectively contribute to more accurate recommendation. For image generation, the com- bination weights are usually manually determined [23]. We instead design a LoRA fusion module to calculate the weights. We suppose a sample ùëü belongs to domain ùê¥ under the natural domain division and domain ùêµ under the auxiliary domain division. Let the LoRA modules corresponding to domain ùê¥ and ùêµ be ùêøùëúùëÖùê¥ùê¥ and ùêøùëúùëÖùê¥ùêµ , containing domain-specific preference patterns from two different perspectives. We design a novel attention module to dynamically generate weights and blend these LoRA modules. As shown in Figure 5, we learn a LoRA fusion module at each layer of the backbone. The pre-trained model‚Äôs output serves as the query vector, and the two LoRAs‚Äô outputs serve as the key and value vectors. The output of the ùëô-th layer‚Äôs LoRA fusion is: ùíâ(ùëô ) ùêøùëúùëÖùê¥ = softmax ( ùíí (ùëô ) ùëá ùë≤ (ùëô ) ùëü ) ùëΩ (ùëô ) , ùíí (ùëô ) =ùëæ (ùëô ) ùëÑ ùíâ(ùëô )0 , ùë≤ (ùëô ) =ùëæ (ùëô ) ùêæ [ ‚Ñé (ùëô ) ùê¥ , ‚Ñé (ùëô ) ùêµ ] , ùëΩ (ùëô ) = [ ‚Ñé (ùëô ) ùê¥ , ‚Ñé (ùëô ) ùêµ ] , (10) where ùëæùëÑ ,ùëæùêæ ‚àà Rùëü√óùëò are trainable parameters; ùíâ0,ùíâùê¥,ùíâùêµ are outputs of the pre-trained model, ùêøùëúùëÖùê¥ùê¥ , and ùêøùëúùëÖùê¥ùêµ , respectively. It is noteworthy that, to maintain the parameter-efficiency of our 1https://civitai.com/ Pretrained value softmax LoRA Fusion Add & Domain Norm LoRA LoRA query key Figure 5: Architecture of the LoRA fusion module. The out- puts of multiple LoRAs are aggregated through attention mechanism. For parameter-efficiency, we perform down- sampling on ùíí and ùíå, while identity transformation on ùíó. method,ùëæùëÑ ,ùëæùêæ are down-samplings that ùëü ‚â™ ùëò , and we apply identity transformation on the value vector. At last, we sum the results of the pre-trained model and the LoRA fusion module, passing it through a domain batch normalization layer used only by samples ‚àà ùê¥ ‚à© ùêµ: ùíâ(ùëô ) = DomNorm ( ùíâ(ùëô )0 + ùíâ(ùëô ) ùêøùëúùëÖùê¥ ;ùê¥ ‚à© ùêµ, ùëô ) . (11) By introducing the LoRA fusion module, we are able to integrate multi-directional domain-specific patterns, indirectly performing finer-grained domain division while avoiding proliferation of do- mains. This provides the prediction model with more information and alleviates the issue of non-identically distributed samples. 4 Experiments In this section, we conduct experiments on public real-world datasets to demonstrate the effectiveness of our proposed MultiLoRA and answer the following questions. ‚Ä¢ RQ1: How does MultiLoRA perform compared with other state- of-the-art baselines, especially PEFT-based methods? ‚Ä¢ RQ2: How do the modules of MultiLoRA affect its performance? ‚Ä¢ RQ3: Is MultiLoRA paradigm compatible with different recom- mendation backbones? Does the model performance decline when integrated with MultiLoRA? ‚Ä¢ RQ4: How to select a best auxiliary domain division? ‚Ä¢ RQ5: Does the MultiLoRA paradigm possess high computation and storage efficiency? 4.1 Experimental Settings 4.1.1 Datasets. Our experiments are conducted on three real-world datasets, namely MovieLens [7], Amazon [20], and Ali-CCP [19]. Amazon 5-core is already segmented based on item category. Ali- CCP is divided by recommendation scenarios. Since MovieLens has 2152 CIKM ‚Äô24, October 21‚Äì25, 2024, Boise, ID, USA Zijian Song et al. Table 1: Statistics of datasets. Dataset MovieLens Amazon 5-core Ali-CCP Train Ali-CCP Test Domain #1 #2 #3 Clothing Beauty Health #1 #2 #3 #1 #2 #3 # Users 1325 2096 2619 39387 22363 38609 80704 1986 136406 47400 1156 73924 # Items 3429 3508 3595 23033 12101 18534 297046 109259 297733 291213 103080 295281 # Interaction 210747 395556 393906 278677 198502 346355 15885371 318873 26095661 16351580 321024 26344010 no explicit domain division, we follow the setting of HAMUR [16] to divide it into three domains based on user age. The statistics of sampled datasets are given in Table 1. ‚Ä¢ MovieLens2 is collected from the well-known online movie recommendation platform, MovieLens, encompassing 7 user fea- tures and 2 item features. We randomly divided it into training, validation, and test sets with a ratio of 8:1:1. ‚Ä¢ Amazon 5-core3 is a dense subset from the Amazon 2014 dataset, ensuring each user and item have a minimum of 5 associated records. We choose three related natural domains. The time range of validation set is between March 1, 2014, and April 30, 2014, while the records before 1st March 2014 and after 30th April 2014 are counted as training and test data. Only user ID, item ID, domain indicator, and ratings are used. Records with rating higher than 3 are considered as positive samples. ‚Ä¢ Ali-CCP4 is gathered from real-world traffic logs of the recom- mendation system in Taobao, comprising 13 user features, 5 item features, 4 combination features, 1 context feature, and 2 label features (click and purchase). We employ ‚Äúclick‚Äù as the target label. The context feature ‚Äú301‚Äù, indicating the recommendation scenario, naturally divides the dataset into three domains. Ad- ditionally, we randomly split the original test dataset in half to create the validation and test sets. The principle of auxiliary domain division is to exhibit maximum domain divergence. In the case of MovieLens and Ali-CCP, we utilize user gender as the criterion for auxiliary domain division. For Amazon 5-core, we choose user activeness, namely whether they have posted more than ten reviews. Further discussion about auxiliary domain division is given in Section 4.5. 4.1.2 Baseline Methods. To showcase the superiority of our pro- posed MultiLoRA, we compare it with following baseline methods: ‚Ä¢ Single is trained only on the target domain. ‚Ä¢ Mix is trained on data from all domains, with all parameters shared across these domains. ‚Ä¢ Fine-tune is initially trained on data from all domains and sub- sequently fully fine-tuned on the target domain. ‚Ä¢ Shared Bottom [1] is a multi-task model with shared bottom layers. In our implementation, the embedding layer is shared. ‚Ä¢ MMoE [18] is a multi-task model built upon the Shared Bottom architecture. It features a set of bottom networks known as ex- perts and trains a gating network to dynamically select experts for each domain. 2https://grouplens.org/datasets/movielens/ 3http://jmcauley.ucsd.edu/data/amazon/ 4https://tianchi.aliyun.com/dataset/408 ‚Ä¢ STAR [27] is a multi-domain model employing a fully-connected network with a star topology. It consists of shared centralized parameters to capture general patterns and domain-specific pa- rameters to capture domain-specific patterns. ‚Ä¢ HAMUR [16] is a PEFT-based multi-domain sota method. It designs a pluggable module that can be seamlessly integrated into various existing multi-domain backbone models. It learns a domain-shared hyper-network to dynamically generate the adapter parameters for each domain. ‚Ä¢ PLATE [29] is another PEFT-based multi-domain SOTA method. It conducts prompt tuning with two prompt modules, namely domain prompt and user prompt, to capture domain distinctions and conduct more accurate personalized recommendation. 4.1.3 Evaluation Metrics. We employ two commonly used evalu- ation metrics, namely Area Under the ROC (AUC) and LogLoss, to assess CTR prediction model performance in our experiments. In general, a higher AUC value or a lower LogLoss at 0.001 level indicates significant better recommendation performance [6, 29]. 4.1.4 Implementation Details. All hyper-parameters were tuned on the validation sets. Learning rate is chosen from {1e-3, 5e-4, 1e-4}. Weight decay is chosen from {1e-4, 1e-5, 0}. Batch size is chosen from {512, 2048, 4096}. We use Adam optimizer with default settings, early stopping when AUC on validation set no longer increases for 5 epochs. The network structure hyper-parameters of all kinds of backbones are consistent, as outlined in Table 2. Table 2: The network structure hyper-parameters. Dataset MovieLens Amazon 5-core Ali-CCP Embedding Size 16 16 16 Hidden Layer [256,128] [1024,512,256,64] [1024,512,512,256,256,64,64] LoRA ùëü [8,8] [16,16,8,8] [32,32,32,16,16,8,8] LoRA fusion ùëü [8,8] [16,16,8,8] [32,32,32,16,16,8,8] In the overall performance comparison, for simplicity, we choose MLP as the backbone network for Single, Mix, Fine-tune, HAMUR, PLATE, SingleLoRA, and MultiLoRA. The compatibility experi- ment of MultiLoRA with more backbone networks are given in Section 4.4. 4.2 Performance Comparison (RQ1) To showcase the effectiveness of our proposed paradigm, we com- pare MultiLoRA, SingleLoRA and baseline methods on three real- world datasets, where SingleLoRA is the ablation version of Multi- LoRAwithout auxiliary domain division or LoRA fusion.We choose MLP as the backbone for simplicity. The overall performance is given in Table 3. We summarize the following observations: 2153 MultiLoRA: Multi-Directional Low-Rank Adaptation for Multi-Domain Recommendation CIKM ‚Äô24, October 21‚Äì25, 2024, Boise, ID, USA Table 3: Overall performance of our proposed method and baselines on three real-world datasets. Boldface denotes the best result and underline indicates the best result among baselines. ‚òÖ represents significance level ùëù-value< 0.05 of comparing MultiLoRA over the best baselines. Model/AUC MovieLens Amazon 5-core Ali-CCP #1 #2 #3 Total Clothing Beauty Health Total #1 #2 #3 Total Single 0.7980 0.7963 0.7965 0.7969 0.6022 0.5682 0.5964 0.5901 0.5843 0.5363 0.5842 0.5694 Mix 0.8187 0.8117 0.8015 0.8105 0.6158 0.6197 0.6325 0.6243 0.6176 0.5908 0.6136 0.6153 Fine-tune 0.8147 0.8135 0.7979 0.8077 0.6195 0.5946 0.6244 0.6150 0.6208 0.5901 0.6194 0.6178 Shared Bottom 0.8077 0.8182 0.8025 0.8102 0.6059 0.5891 0.6078 0.6025 0.6202 0.5870 0.6174 0.6170 MMoE 0.8088 0.8120 0.8045 0.8097 0.6080 0.5867 0.6213 0.6089 0.6255 0.5822 0.6203 0.6173 STAR 0.8065 0.8064 0.8021 0.8055 0.6117 0.5853 0.6234 0.6108 0.6253 0.5887 0.6208 0.6198 HAMUR 0.8130 0.8159 0.8067 0.8121 0.6120 0.5861 0.6311 0.6148 0.6210 0.6062 0.6216 0.6210 PLATE 0.8134 0.8178 0.8063 0.8124 0.6182 0.6223 0.6426 0.6296 0.6229 0.6055 0.6234 0.6220 SingleLoRA 0.8212 0.8189 0.8061 0.8160 0.6134 0.6134 0.6290 0.6198 0.6225 0.6065 0.6224 0.6212 MultiLoRA 0.8223‚òÖ 0.8192‚òÖ 0.8097‚òÖ 0.8170‚òÖ 0.6297‚òÖ 0.6408‚òÖ 0.6542‚òÖ 0.6429‚òÖ 0.6324‚òÖ 0.6065 0.6245‚òÖ 0.6231‚òÖ Model/LogLoss MovieLens Amazon 5-core Ali-CCP #1 #2 #3 Total Clothing Beauty Health Total #1 #2 #3 Total Single 0.5387 0.5408 0.5326 0.6377 0.5442 0.5946 0.4581 0.5303 0.1711 0.2599 0.1630 0.1928 Mix 0.5188 0.5215 0.5215 0.5207 0.5202‚òÖ 0.4832 0.4383 0.4772 0.1662 0.1806 0.1601 0.1626 Fine-tune 0.5198 0.5179 0.5296 0.5229 0.5320 0.5132 0.4403 0.4912 0.1660 0.1837 0.1597 0.1629 Shared Bottom 0.5294 0.5139 0.5237 0.5210 0.5563 0.5310 0.4615 0.5114 0.1677 0.1833 0.1595 0.1628 MMoE 0.5244 0.5148 0.5209 0.5207 0.5498 0.5351 0.4583 0.5105 0.1671 0.1856 0.1592 0.1632 STAR 0.5257 0.5196 0.5218 0.5224 0.5523 0.5367 0.4567 0.5114 0.1673 0.1837 0.1589 0.1628 HAMUR 0.5281 0.5188 0.5199 0.5212 0.5507 0.5227 0.4481 0.5019 0.1653 0.1779 0.1653 0.1617 PLATE 0.5201 0.5155 0.5223 0.5198 0.5338 0.4833 0.4391 0.4806 0.1661 0.1786 0.1579 0.1615 SingleLoRA 0.5246 0.5167 0.5210 0.5201 0.5475 0.5105 0.4444 0.4948 0.1665 0.1781 0.1568‚òÖ 0.1601 MultiLoRA 0.5109‚òÖ 0.5114‚òÖ 0.5187‚òÖ 0.5147‚òÖ 0.5357 0.4817‚òÖ 0.4336‚òÖ 0.4771 0.1631‚òÖ 0.1754‚òÖ 0.1575 0.1587‚òÖ ‚Ä¢ Fine-tune shows significant performance decline in most cases compared to Mix, showing obvious catastrophic forgetting. This is particularly evident in the Ali-CCP dataset: Fine-tune signif- icantly outperforms Mix in domains #1 and #3, but its perfor- mance regresses on the much smaller domain #2, indicating a potential overfitting and forgetting of the common knowledge acquired during pre-training. ‚Ä¢ There are two baselines that employ PEFT techniques: PLATE based on prompt tuning and HAMUR based on adapter. Both methods exhibit inferior performance on the MovieLens dataset compared to the larger-scale Amazon and Ali-CCP datasets. This discrepancy arises because HAMUR‚Äôs dynamically generated adapter only engages with one layer of the model, limiting the knowledge expression of the hyper-network. Meanwhile, PLATE only fine-tunes the prefix of the input and the linear interaction layer, resulting in limited expressive capacity. Both methods heav- ily rely on the pre-trained model‚Äôs knowledge. In contrast, LoRA can be involved in the update of all parameters, making it less dependent on the original model. ‚Ä¢ Our proposedMultiLoRA outperforms all baselines across al- most all domains. This is because we not only use LoRA for fine-tuning, but also introduce auxiliary domain division. By combining the predictions of two sets of LoRAs, we indirectly yet effectively achieve finer-grained domain division, mitigating the adverse effects of non-identically distributed samples. 4.3 Ablation Study (RQ2) Table 3 have already included several ablation experiments. By comparingMix, Fine-tune and SingleLoRA, we demonstrate that full fine-tuning leads to catastrophic forgetting in some domains, and employing LoRA alleviates this issue. The fact thatMultiLoRA significantly outperforms SingleLoRA in most cases indicates that usingmultiple domain divisionsmitigates data distribution inconsis- tencies. Here, we conduct additional experiments. Let MultiLoRA- avg represent the variant of MultiLoRA where two LoRAs are averaged, andMultiLoRA-add represent the variant where two LoRAs are simply added. We compare their performance withMul- tiLoRA to illustrate the effectiveness of the LoRA fusion module. The results are shown in Table 4. 4.4 Compatibility with Backbone Models (RQ3) The MultiLoRA paradigm we propose is a training framework that, theoretically, can be combined with most CTR backbones to derive corresponding multi-domain models. We select three widely used methods, namely Wide&Deep [3], DCN [28], and DeepFM [6]. We integrate MultiLoRA with them and observe the impact on model performance. For each backbone, we compare three methods: Fine- tune, SingleLoRA, and MultiLoRA. The experimental results are shown in Table 5. We notice that, with our proposed MultiLoRA, the performance of all CTR back- bones is significantly improved compared to full fine-tuning. This 2154 CIKM ‚Äô24, October 21‚Äì25, 2024, Boise, ID, USA Zijian Song et al. Table 4: Ablation study of the LoRA fusion module. Model/AUC MovieLens Amazon 5-core Ali-CCP #1 #2 #3 Total Clothing Beauty Health Total #1 #2 #3 Total MultiLoRA-add 0.7972 0.7992 0.7890 0.7958 0.5987 0.5678 0.5924 0.5870 0.5844 0.5467 0.5795 0.5713 MultiLoRA-avg 0.8156 0.8134 0.8019 0.8105 0.6113 0.6068 0.6271 0.6150 0.6235 0.6012 0.6178 0.6134 MultiLoRA 0.8223‚òÖ 0.8192‚òÖ 0.8097‚òÖ 0.8170‚òÖ 0.6297‚òÖ 0.6408‚òÖ 0.6542‚òÖ 0.6429‚òÖ 0.6324‚òÖ 0.6065‚òÖ 0.6245‚òÖ 0.6231‚òÖ Model/LogLoss MovieLens Amazon 5-core Ali-CCP #1 #2 #3 Total Clothing Beauty Health Total #1 #2 #3 Total MultiLoRA-add 0.5408 0.5477 0.5308 0.5697 0.5470 0.5947 0.4596 0.5339 0.1709 0.2606 0.1620 0.1938 MultiLoRA-avg 0.5265 0.5217 0.5230 0.5238 0.5466 0.5104 0.4470 0.5007 0.1688 0.1810 0.1593 0.1677 MultiLoRA 0.5109‚òÖ 0.5114‚òÖ 0.5206‚òÖ 0.5153‚òÖ 0.5357‚òÖ 0.4817‚òÖ 0.4336‚òÖ 0.4771‚òÖ 0.1631‚òÖ 0.1754‚òÖ 0.1575‚òÖ 0.1587‚òÖ Table 5: The results (AUC) of compatibility experiments on different recommendation backbones. Backbone Paradigm MovieLens Amazon 5-core Ali-CCP #1 #2 #3 Total Clothing Beauty Health Total #1 #2 #3 Total Wide&Deep Fine-tune 0.8197 0.8181 0.7972 0.8107 0.6199 0.5971 0.6268 0.6163 0.6238 0.5761 0.6246 0.6165 SingleLoRA 0.8245 0.8227 0.8057 0.8182 0.6149 0.6160 0.6268 0.6204 0.6248 0.6010 0.6212 0.6194 MultiLoRA 0.8267‚òÖ 0.8240‚òÖ 0.8092‚òÖ 0.8200‚òÖ 0.6305‚òÖ 0.6401‚òÖ 0.6497‚òÖ 0.6373‚òÖ 0.6356‚òÖ 0.6026‚òÖ 0.6265‚òÖ 0.6241‚òÖ DCN Fine-tune 0.8189 0.8147 0.7985 0.8095 0.6209 0.5981 0.6267 0.6173 0.6228 0.5947 0.6213 0.6203 SingleLoRA 0.8247 0.8188 0.8069 0.8169 0.6146 0.6147 0.6293 0.6211 0.6234 0.6075 0.6227 0.6222 MultiLoRA 0.8233‚òÖ 0.8201‚òÖ 0.8090‚òÖ 0.8182‚òÖ 0.6293‚òÖ 0.6402‚òÖ 0.6548‚òÖ 0.6399‚òÖ 0.6337‚òÖ 0.6085‚òÖ 0.6223 0.6236‚òÖ DeepFM Fine-tune 0.8258 0.8201 0.8008 0.8146 0.6223 0.5864 0.6255 0.6127 0.6223 0.5878 0.6134 0.6151 SingleLoRA 0.8307 0.8245‚òÖ 0.8067 0.8214 0.6176 0.6104 0.6280 0.6199 0.6242 0.6021 0.6238 0.6196 MultiLoRA 0.8333‚òÖ 0.8245‚òÖ 0.8110‚òÖ 0.8229‚òÖ 0.6277‚òÖ 0.6302‚òÖ 0.6382‚òÖ 0.6302‚òÖ 0.6378‚òÖ 0.6022 0.6316‚òÖ 0.6257‚òÖ Table 6: The performance change (in terms of AUC) of Multi- LoRA when selecting different auxiliary domain divisions. Overall, greater divergence in preference patterns among auxiliary domains, given the natural domain division, leads to better model performance. Criterion # domain Ali-CCP #1 #2 #3 Total User Gender 3 val 0.6336 0.6069 0.6243 0.6235 test 0.6324 0.6065 0.6245 0.6231 None (SingleLoRA) N/A val ‚àí0.0091 ‚àí0.0011 ‚àí0.0029 ‚àí0.0017 test ‚àí0.0099 0 ‚àí0.0021 ‚àí0.0019 User Occupation 3 val +0.0007 ‚àí0.0015 ‚àí0.0011 ‚àí0.0001 test +0.0013 ‚àí0.0009 ‚àí0.0005 ‚àí0.0004 User Age 4 val ‚àí0.0045 ‚àí0.0027 ‚àí0.0013 ‚àí0.0029 test ‚àí0.0036 ‚àí0.0023 +0.0008 ‚àí0.0017 User Geography 5 val ‚àí0.0054 ‚àí0.0045 ‚àí0.0033 ‚àí0.0041 test ‚àí0.0067 ‚àí0.0033 ‚àí0.0028 ‚àí0.0035 demonstrates MultiLoRA‚Äôs outstanding ability to adapt to the target domain, preserving common knowledge acquired in pre-training and preventing catastrophic forgetting. Additionally, MultiLoRA exhibits compatibility with various backbones, making it easier to apply and deploy in various application scenarios. 4.5 Choice of Auxiliary Domain Division (RQ4) One crucial step for MultiLoRA is introducing auxiliary domain division. In this subsection, we examined how different auxiliary domain division criteria affect model performance on the Ali-CCP dataset. The Detailed results are presented in Table 6. We conduct evaluation on both the validation and test sets. It is noteworthy that, the results on these two sets are highly consistent. This consistency allows us to confidently select the best auxiliary domain division based on offline tests, which is very beneficial for industrial applications. We also notice that the same auxiliary domain division has dis- tinct effects for different natural domains. For example, when we use User Occupation as the auxiliary division criterion, the perfor- mance improves on domain #1, while decreasing for domain #2 and #3. This is possibly due to their different sensitivities to this auxiliary division criterion. As for the overall performance across the entire sample space, we have observed that an auxiliary domain division that exhibits larger domain divergence given the natural division is better. For instance, while users from different geographical regions show minor preference differences, significant differences exist between employed and unemployed users, given the natural domain division. Thus, the User Occupation criterion is better than User Geography in performance. This is because selecting such a criterion better alleviates the non-identically distributed data issue in naturally divided domains. 2155 MultiLoRA: Multi-Directional Low-Rank Adaptation for Multi-Domain Recommendation CIKM ‚Äô24, October 21‚Äì25, 2024, Boise, ID, USA 4.6 Efficiency Analysis (RQ5) MultiLoRA demonstrates outstanding parameter efficiency. For in- stance, when using MLP as the backbone, training a LoRA or the LoRA fusion module requires learning significantly fewer param- eters compared to full fine-tuning. The details can be found in Table 7, where the numbers in parentheses show the percentage of trainable parameters relative to the whole backbone and the feature interaction layer. Table 7: Statistics of trainable parameters. Module # Trainable Parameter MovieLens Amazon 5-core Ali-CCP Fully Fine-tune 275k 2.9M 26.4M Feature Interaction 63k 710k 1.4M LoRA 6k(2.19%,9.56%) 54k(1.84%,7.58%) 152k(0.57%,10.62%) LoRA Fusion 6k(2.15%,9.37%) 46k(1.57%,6.48%) 154k(0.58%,10.78%) We observe that the majority of parameters reside in the embed- ding layer. However, even when compared to the feature interaction layer, our approach only learns and stores one-tenth of the param- eters. Furthermore, by introducing auxiliary domain division and learning two sets of LoRAs and the LoRA fusion modules, we in- directly obtain domain-specific models for ùëõùëö domains, where ùëõ andùëö are the numbers of domains under the two domain divisions. This not only surpasses methods like STAR and fully fine-tuning that require 100% more trainable parameters for each domain, but also outperforms typical PEFT methods. 5 Related Work 5.1 Multi-Domain Recommendation Multi-domain recommendation is a type of cross-domain recom- mendation problem where the number of domains is greater than two. The MDR problem discussed in this paper is also known as multi-target cross-domain recommendation, which aims to improve recommendation performance on multiple domains simultaneously. Li et al. [15] summarized three different types of domains: sys- tem domain, data domain, and temporal domain. Specifically, for different system domains, there are different types of items or gen- res. For the data domain, they referred to user preferences for items stored in various forms of data, such as explicit ratings and implicit binary feedback. For the temporal domain, interaction records are divided into multiple periods based on timestamps, with each pe- riod constituting a domain. This domain division theory has been widely cited in subsequent researches [35]. There are various existing MDR methods proposed in recent years. For instance, MMoE [18] utilizes a set of bottom networks called experts, alongside a gating network to dynamically select ex- perts for each domain. STAR [27] adopts a fully-connected network with a star topology, while SAR-Net [26] employs two attention layers to capture user cross-domain interests. However, these ap- proaches adopt a multi-task training paradigm, often featuring complex structures, hindering integration with traditional back- bones and impeding deployment in real-world industrial settings. 5.2 Parameter-Efficient Fine-Tuning The concept of Parameter-Efficient Fine-Tuning (PEFT) was ini- tially proposed in natural language processing area [10]. With the significant increase in the scale of pre-trained language models in recent years, full fine-tuning has become cost-prohibitive. PEFT methods attract growing attention as they only require fine-tuning a small portion of parameters. Existing PEFT methods can be pri- marily categorized into three paradigms: adapter, prompt-tuning, and low-rank adaptation (LoRA) [8]. Adapter-based methods insert small neural modules called adapters into the pre-trained network, and only these adapters are trained during fine-tuning [10, 32]. Prompt tuning [14] and prefix tuning [17], inspired by the success of prompting methods, adds additional ùëô tunable prefix tokens to the input or hidden layers, and only these soft prompts are trained. In the case of LoRA-based methods, Hu et al. [11] argue that the learned parameters in fine-tuning reside in a low intrinsic dimen- sion. Therefore, they learn low-rank matrices to appropriately up- date parameters [4, 12]. Some works apply PEFT techniques to recommendation sys- tems, but most aim to leverage large pre-trained models to obtain higher-quality feature vectors, exhibiting fundamental differences from our approach. Recently, HAMUR [16] learns a domain-shared hyper-network to dynamically generate the adapter parameters for each domain. However, it has to learn a backbone network for each domain, resulting in a high computational and storage cost. PLATE [29] employs prompt-tuning with two prompt mod- ules, namely domain prompt and user prompt, to capture domain distinctions and offer more accurate personalized recommenda- tions. However, the prompt tuning technique heavily relies on the generalization capability of the pre-trained model. 6 Conclusions In this paper, we identify the shortcomings of existingmulti-domain recommendation methods: MTL-based methods suffer from poor deployability and negative transfer, while PEFT-based methods overlook the fundamental differences between recommendation and NLP tasks, restricting the effectiveness of prompts and adapters. Additionally, we argue that the traditional natural domain division is insufficient, as it violates the independent and identically dis- tributed (i.i.d.) data assumption, leading to suboptimal performance. In response, we propose MultiLoRA, a multi-directional low-rank adaptation paradigm for multi-domain recommendation. We intro- duce LoRA, which is better suited for MDR tasks, offering efficiency (training only 2% of the parameters) and effectiveness (avoiding cat- astrophic forgetting). By leveraging the composable nature of LoRA, we combine preference patterns learned under different domain divisions by combining weight updates in different directions, indi- rectly achieving finer-grained domain division. Through extensive experiments, we demonstrate the superior performance of Multi- LoRA, surpassing state-of-the-art baselines on various backbones while showcasing its versatility and compatibility. 7 Acknowledgement This work is partially sponsored by National Key R&D Program of China under Grant 2022YFB3104200, NSFC (62032003), and research grant No. SH-2024JK29. 2156 CIKM ‚Äô24, October 21‚Äì25, 2024, Boise, ID, USA Zijian Song et al. References [1] Rich Caruana. 1993. Multitask learning: A knowledge-based source of inductive bias1. In Proceedings of the Tenth International Conference on Machine Learning. 41‚Äì48. [2] Xusong Chen, Dong Liu, Zheng-Jun Zha, Wengang Zhou, Zhiwei Xiong, and Yan Li. 2018. Temporal hierarchical attention at category-and item-level for micro- video click-through prediction. In Proceedings of the 26th ACM international conference on Multimedia. 1146‚Äì1153. [3] Heng-Tze Cheng, Levent Koc, Jeremiah Harmsen, Tal Shaked, Tushar Chandra, Hrishi Aradhye, Glen Anderson, Greg Corrado, Wei Chai, Mustafa Ispir, et al. 2016. Wide & deep learning for recommender systems. In Proceedings of the 1st workshop on deep learning for recommender systems. 7‚Äì10. [4] Ali Edalati, Marzieh Tahaei, Ivan Kobyzev, Vahid Partovi Nia, James J Clark, and Mehdi Rezagholizadeh. 2022. Krona: Parameter efficient tuning with kronecker adapter. arXiv preprint arXiv:2212.10650 (2022). [5] Robert M French. 1999. Catastrophic forgetting in connectionist networks. Trends in cognitive sciences 3, 4 (1999), 128‚Äì135. [6] Huifeng Guo, Ruiming Tang, Yunming Ye, Zhenguo Li, and Xiuqiang He. 2017. DeepFM: a factorization-machine based neural network for CTR prediction. arXiv preprint arXiv:1703.04247 (2017). [7] F Maxwell Harper and Joseph A Konstan. 2015. The movielens datasets: History and context. Acm transactions on interactive intelligent systems (tiis) 5, 4 (2015), 1‚Äì19. [8] Junxian He, Chunting Zhou, Xuezhe Ma, Taylor Berg-Kirkpatrick, and Graham Neubig. 2021. Towards a unified view of parameter-efficient transfer learning. arXiv preprint arXiv:2110.04366 (2021). [9] Jonathan Ho, Ajay Jain, and Pieter Abbeel. 2020. Denoising diffusion probabilistic models. Advances in neural information processing systems 33 (2020), 6840‚Äì6851. [10] Neil Houlsby, Andrei Giurgiu, Stanislaw Jastrzebski, Bruna Morrone, Quentin De Laroussilhe, Andrea Gesmundo, Mona Attariyan, and Sylvain Gelly. 2019. Parameter-efficient transfer learning for NLP. In International Conference on Machine Learning. PMLR, 2790‚Äì2799. [11] Edward J Hu, Yelong Shen, Phillip Wallis, Zeyuan Allen-Zhu, Yuanzhi Li, Shean Wang, Lu Wang, and Weizhu Chen. 2021. Lora: Low-rank adaptation of large language models. arXiv preprint arXiv:2106.09685 (2021). [12] Nam Hyeon-Woo, Moon Ye-Bin, and Tae-Hyun Oh. 2021. Fedpara: Low-rank hadamard product for communication-efficient federated learning. arXiv preprint arXiv:2108.06098 (2021). [13] Mostafa Kamal, Tarek Aziz Bablu, et al. 2022. Machine Learning Models for Pre- dicting Click-through Rates on social media: Factors and Performance Analysis. International Journal of Applied Machine Learning and Computational Intelligence 12, 4 (2022), 1‚Äì14. [14] Brian Lester, Rami Al-Rfou, and Noah Constant. 2021. The power of scale for parameter-efficient prompt tuning. arXiv preprint arXiv:2104.08691 (2021). [15] Bin Li. 2011. Cross-domain collaborative filtering: A brief survey. In 2011 IEEE 23rd International Conference on Tools with Artificial Intelligence. IEEE, 1085‚Äì1086. [16] Xiaopeng Li, Fan Yan, Xiangyu Zhao, Yichao Wang, Bo Chen, Huifeng Guo, and Ruiming Tang. 2023. HAMUR: Hyper Adapter for Multi-Domain Recommenda- tion. In Proceedings of the 32nd ACM International Conference on Information and Knowledge Management. 1268‚Äì1277. [17] Xiang Lisa Li and Percy Liang. 2021. Prefix-tuning: Optimizing continuous prompts for generation. arXiv preprint arXiv:2101.00190 (2021). [18] Jiaqi Ma, Zhe Zhao, Xinyang Yi, Jilin Chen, Lichan Hong, and Ed H Chi. 2018. Modeling task relationships in multi-task learning with multi-gate mixture-of- experts. In Proceedings of the 24th ACM SIGKDD international conference on knowledge discovery & data mining. 1930‚Äì1939. [19] Xiao Ma, Liqin Zhao, Guan Huang, Zhi Wang, Zelin Hu, Xiaoqiang Zhu, and Kun Gai. 2018. Entire space multi-task model: An effective approach for estimating post-click conversion rate. In The 41st International ACM SIGIR Conference on Research & Development in Information Retrieval. 1137‚Äì1140. [20] Julian McAuley, Christopher Targett, Qinfeng Shi, and Anton Van Den Hengel. 2015. Image-based recommendations on styles and substitutes. In Proceedings of the 38th international ACM SIGIR conference on research and development in information retrieval. 43‚Äì52. [21] Michael McCloskey and Neal J Cohen. 1989. Catastrophic interference in con- nectionist networks: The sequential learning problem. In Psychology of learning and motivation. Vol. 24. Elsevier, 109‚Äì165. [22] Robin Rombach, Andreas Blattmann, Dominik Lorenz, Patrick Esser, and Bj√∂rn Ommer. 2022. High-resolution image synthesis with latent diffusion models. In Proceedings of the IEEE/CVF conference on computer vision and pattern recognition. 10684‚Äì10695. [23] S. Ryu. 2024. Low-rank Adaptation for Fast Text-to-Image Diffusion Fine-tuning. https://github.com/cloneofsimo/lora Accessed: 2024-05-19. [24] Viraj Shah, Nataniel Ruiz, Forrester Cole, Erika Lu, Svetlana Lazebnik, Yuanzhen Li, and Varun Jampani. 2023. ZipLoRA: Any Subject in Any Style by Effectively Merging LoRAs. arXiv:2311.13600 [cs.CV] [25] Pengyang Shao, Le Wu, Lei Chen, Kun Zhang, and Meng Wang. 2022. FairCF: Fairness-aware collaborative filtering. Science China Information Sciences 65, 12 (2022), 222102. [26] Qijie Shen, Wanjie Tao, Jing Zhang, Hong Wen, Zulong Chen, and Quan Lu. 2021. Sar-net: a scenario-aware ranking network for personalized fair recommendation in hundreds of travel scenarios. In Proceedings of the 30th ACM International Conference on Information & Knowledge Management. 4094‚Äì4103. [27] Xiang-Rong Sheng, Liqin Zhao, Guorui Zhou, Xinyao Ding, Binding Dai, Qiang Luo, Siran Yang, Jingshan Lv, Chi Zhang, Hongbo Deng, et al. 2021. One model to serve all: Star topology adaptive recommender for multi-domain ctr prediction. In Proceedings of the 30th ACM International Conference on Information & Knowledge Management. 4104‚Äì4113. [28] Ruoxi Wang, Bin Fu, Gang Fu, and Mingliang Wang. 2017. Deep & cross network for ad click predictions. In Proceedings of the ADKDD‚Äô17. 1‚Äì7. [29] Yuhao Wang, Xiangyu Zhao, Bo Chen, Qidong Liu, Huifeng Guo, Huanshuo Liu, Yichao Wang, Rui Zhang, and Ruiming Tang. 2023. PLATE: A Prompt- Enhanced Paradigm for Multi-Scenario Recommendations. In Proceedings of the 46th International ACM SIGIR Conference on Research and Development in Information Retrieval. 1498‚Äì1507. [30] Shitao Xiao, Yingxia Shao, Yawen Li, Hongzhi Yin, Yanyan Shen, and Bin Cui. 2022. LECF: recommendation via learnable edge collaborative filtering. Science China Information Sciences 65, 1 (2022), 112101. [31] Shuo Xiao, Dongqing Zhu, Chaogang Tang, and Zhenzhen Huang. 2023. Com- bining graph contrastive embedding and multi-head cross-attention transfer for cross-domain recommendation. Data Science and Engineering 8, 3 (2023), 247‚Äì262. [32] Taojiannan Yang, Yi Zhu, Yusheng Xie, Aston Zhang, Chen Chen, and Mu Li. 2023. Aim: Adapting image models for efficient video action recognition. arXiv preprint arXiv:2302.03024 (2023). [33] Zheng Yuan, Fajie Yuan, Yu Song, Youhua Li, Junchen Fu, Fei Yang, Yunzhu Pan, and Yongxin Ni. 2023. Where to go next for recommender systems? id- vs. modality-based recommender models revisited. In Proceedings of the 46th International ACM SIGIR Conference on Research and Development in Information Retrieval. 2639‚Äì2649. [34] Zhiyang Yuan, Wenguang Zheng, Peilin Yang, Qingbo Hao, and Yingyuan Xiao. 2023. Evolving interest with feature co-action network for CTR prediction. Data Science and Engineering 8, 4 (2023), 344‚Äì356. [35] Tianzi Zang, Yanmin Zhu, Haobing Liu, Ruohan Zhang, and Jiadi Yu. 2022. A survey on cross-domain recommendation: taxonomies, methods, and future directions. ACM Transactions on Information Systems 41, 2 (2022), 1‚Äì39. [36] Ming Zhong, Yelong Shen, Shuohang Wang, Yadong Lu, Yizhu Jiao, Siru Ouyang, Donghan Yu, Jiawei Han, and Weizhu Chen. 2024. Multi-LoRA Composition for Image Generation. arXiv:2402.16843 [cs.CV] [37] Feng Zhu, Yan Wang, Chaochao Chen, Jun Zhou, Longfei Li, and Guanfeng Liu. 2021. Cross-domain recommendation: challenges, progress, and prospects. arXiv preprint arXiv:2103.01696 (2021). 2157 https://github.com/cloneofsimo/lora https://arxiv.org/abs/2311.13600 https://arxiv.org/abs/2402.16843 Abstract 1 Introduction 2 Preliminary 2.1 Low-Rank Adaptation 2.2 Multi-Domain CTR Prediction 2.3 Typical Architecture of CTR Backbones 3 Method 3.1 Overview 3.2 Multi-Directional Low-Rank Adaptation 3.3 LoRA Fusion 4 Experiments 4.1 Experimental Settings 4.2 Performance Comparison (RQ1) 4.3 Ablation Study (RQ2) 4.4 Compatibility with Backbone Models (RQ3) 4.5 Choice of Auxiliary Domain Division (RQ4) 4.6 Efficiency Analysis (RQ5) 5 Related Work 5.1 Multi-Domain Recommendation 5.2 Parameter-Efficient Fine-Tuning 6 Conclusions 7 Acknowledgement Referencesb”
i
x_tika_parsed_by_full_setLJorg.apache.tika.parser.DefaultParser; org.apache.tika.parser.pdf.PDFParser
.
pdf_docinfo_modified2025-05-23T22:45:48Z
Ê

dc_subject◊‘Multi-Domain Recommendation, Click-Through Rate Prediction, Parameter-Efficient Fine-Tuning, Low-Rank Adaptation; -  Information systems  ->  Recommender systems.-  Computing methodologies  ->  Transfer learning.
&
pdf_docinfo_custom_pdfversion1.5
-
pdf_docinfo_created2024-08-05T08:53:19Z
ä
pdf_docinfo_keywordsrpMulti-Domain Recommendation, Click-Through Rate Prediction, Parameter-Efficient Fine-Tuning, Low-Rank Adaptation
≥
xmp_creatortoolüúLaTeX with acmart 2024/05/27 v2.08 Typesetting articles for the Association for Computing Machinery and hyperref 2024-01-20 v7.01h Hypertext links for LaTeX
.
$access_permission_modify_annotationstrue
 
pdf_annotationsubtypesLink


pdf_hasxmptrue
+
	dc_formatapplication/pdf; version=1.5

pdf_hascollectionfalse
{
pdf_docinfo_subjectdb-  Information systems  ->  Recommender systems.-  Computing methodologies  ->  Transfer learning.


pdfversion1.5

xmptpg_npages10
~
"pdf_docinfo_custom_ptex_fullbannerXVThis is pdfTeX, Version 3.141592653-2.6-1.40.26 (TeX Live 2024) kpathsea version 6.4.0
^
dc_titleRPMultiLoRA: Multi-Directional Low-Rank Adaptation for Multi-Domain Recommendation
)
dcterms_created2024-08-05T08:53:19Z

pdf_ocrpagecount0
+
!access_permission_extract_contenttrue
,
resourcenameacm_3627673_v4.3679549.pdf
.
$access_permission_can_print_faithfultrue
k
ptex_fullbannerXVThis is pdfTeX, Version 3.141592653-2.6-1.40.26 (TeX Live 2024) kpathsea version 6.4.0
º
pdf_docinfo_creator_toolüúLaTeX with acmart 2024/05/27 v2.08 Typesetting articles for the Association for Computing Machinery and hyperref 2024-01-20 v7.01h Hypertext links for LaTeX
(
access_permission_fill_in_formtrue
5
+access_permission_extract_for_accessibilitytrue
%
pdf_containsnonembeddedfonttrue

pdf_annotationtypesnull
&
access_permission_can_modifytrue
`
x_tika_parsed_byLJorg.apache.tika.parser.DefaultParser; org.apache.tika.parser.pdf.PDFParser


pdf_hasxfafalse

pdf_num3dannotations0
D
)pdf_overallpercentageunmappedunicodechars2.0689798111561686E-4
!
content_typeapplication/pdf
-
#access_permission_assemble_documenttrue
$
pdf_docinfo_creatorZijian Song
g
pdf_docinfo_titleRPMultiLoRA: Multi-Directional Low-Rank Adaptation for Multi-Domain Recommendation
Ö
pdf_produceruspdfTeX, Version 3.141592653-2.6-1.40.26 (TeX Live 2024) kpathsea version 6.4.0; modified using iText 4.2.0 by 1T3XT


dc_creatorZijian Song
%
pdf_totalunmappedunicodechars10

dc_languageen

pdf_encryptedfalse
"
pdf_containsdamagedfontfalse
*
dcterms_modified2025-05-23T22:45:48Z

pdf_pdfversion1.5

pdf_docinfo_trappedFalse
B
pdf_unmappedunicodecharsperpage0; 0; 0; 0; 10; 0; 0; 0; 0; 0
%
access_permission_can_printtrue
ç
pdf_docinfo_produceruspdfTeX, Version 3.141592653-2.6-1.40.26 (TeX Live 2024) kpathsea version 6.4.0; modified using iText 4.2.0 by 1T3XT

pdf_hasmarkedcontentfalse
P
pdf_charsperpage<:4330; 5952; 4826; 3564; 3947; 4697; 4595; 3976; 5363; 7083j˝Í

$0dc5ab88-9530-4c65-b258-7a4d363d7a3fbodystandard_500_50*chunks_chunker_standard_500_502˛	
?9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_0Ã
ÚMultiLoRA: Multi - Directional Low - Rank Adaptation for Multi - Domain Recommendation Zijian Song School of CS, Peking University Beijing, China 2201111590 @ stu. pku. edu. cn Wenhan Zhang School of CS, Peking University Beijing, China pku _ zwh @ pku. edu. cn Lifang Deng Lazada Group Beijing, China wanmei. dlf @ alibaba - inc. com Jiandong Zhang Lazada Group Beijing, China chensong. zjd @ alibaba - inc. com Kaigui Bian School of CS, Peking University Beijing, China bkg @ pku. edu. cn Bin Cui?9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_0  (–:standard_500_50" 
average_word_length	œf’Áj+@"$
potential_heading_score	öôôôôô…?"
sentence_count	      (@"$
alphanumeric_percentage	_òLåË?"x
punctuation_countsb*`

@	      @

:	      ?

,	       @

-	      @

.	      &@

_	      ?"!
uppercase_percentage	Ã]K»=ª?""
whitespace_percentage	}Æ∂bŸ≈?"
list_item_indicator  "

word_count	     ÄZ@"$
average_sentence_length	{É/L¶™!@"
vocabulary_density	6<ΩRñ›?"
digit_percentage	æ0ô*ïî?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk "
character_count	      @"
relative_position	        2ˇ	
?9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_1À
University Beijing, China bkg @ pku. edu. cn Bin Cui School of CS, Peking University Beijing, China bin. cui @ pku. edu. cn Abstract To address the business needs of industrial recommendation sys - tems, an increasing number of Multi - Domain Recommendation (MDR) methods are designed to improve recommendation perfor - mance on multiple domains simultaneously. Most MDR methods follow a multi - task learning paradigm, suffering from poor deploy - ability and negative transfer. Due to the great?9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_1 °(Ä:standard_500_50" 
average_word_length	ëz6´æ@"$
potential_heading_score	öôôôôô…?"
sentence_count	       @"$
alphanumeric_percentage	x$(~åÈ?"x
punctuation_countsb*`

@	       @

(	      ?

)	      ?

,	      @

-	      @

.	      @"!
uppercase_percentage	 “o_Œ©?""
whitespace_percentage	¿[ AÒcƒ?"
list_item_indicator  "

word_count	     ÄW@"$
average_sentence_length	     Ä'@"
vocabulary_density	Ú∞PköwÊ?"
digit_percentage	        "
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	      @"
relative_position	¨≠ÿ_vO~?2‚	
?9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_2Œ
Û- ability and negative transfer. Due to the great success of large pre - trained models, the pre - train & fine - tune paradigm is attract - ing increasing attention. The latest methods introduce parameter - efficient fine - tuning techniques like prompt - tuning, showcasing high efficiency and effectiveness. However, these methods neglect the fundamental differences between recommendation and NLP tasks. The inadequate capacity of recommendation models restricts the effectiveness of prompts and?9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_2 –(∂
:standard_500_50" 
average_word_length	Ï¿9#Jª@"$
potential_heading_score	öôôôôô…?"
sentence_count	      @"$
alphanumeric_percentage	µ¶y«):Í?"X
punctuation_countsB*@

&	      ?

,	      @

-	       @

.	      @"!
uppercase_percentage	yÈ&1¨å?""
whitespace_percentage	$óˇê~˚¬?"
list_item_indicator "

word_count	     ÄT@"$
average_sentence_length	ffffff0@"
vocabulary_density	ﬂOçónÂ?"
digit_percentage	        "
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	     0@"
relative_position	%uöé?2Û	
?9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_3œ
Ùmodels restricts the effectiveness of prompts and adapters. Worse still, traditional natural domain division may group non - identically distributed sam - ples into the same domain, violating the assumption of independent and identically distributed (i. i. d.) data. In this paper, we propose MultiLoRA, aMulti - directional Low Rank Adaptation paradigm for multi - domain recommendation. First we pre - train a universal model using all data samples. Then we conduct multiple domain divisions on the?9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_3 Ü
(Ó:standard_500_50" 
average_word_length	æ0ô*ÿ@"$
potential_heading_score	öôôôôô…?"
sentence_count	      @"$
alphanumeric_percentage	ñCãlÁ˚È?"h
punctuation_countsR*P

(	      ?

)	      ?

,	      @

-	      @

.	      @"!
uppercase_percentage	˙~jºtìò?""
whitespace_percentage	€˘~jºt√?"
list_item_indicator  "

word_count	     ÄV@"$
average_sentence_length	üÕ™œ’∂)@"
vocabulary_density	ffffffÊ?"
digit_percentage	        "
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	     @@"
relative_position	˛e˜‰a°ñ?2Ç

?9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_4Œ
Û. Then we conduct multiple domain divisions on the sample space. Under each division, we fine - tune the pre - trained model to obtain a set of domain - specific LoRAs. Fi - nally, we learn a LoRA fusion module to integrate domain - specific preference patterns across multiple divisions. Experimental results on real - world datasets demonstrate notable advantages of Multi - LoRA: (1) achieving SOTA performance, (2) showcasing remarkable compatibility, and (3) proving highly efficient, featuring?9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_4 Ω(£:standard_500_50" 
average_word_length	|a2U0Í@"$
potential_heading_score	öôôôôô…?"
sentence_count	      @"$
alphanumeric_percentage	gDioÖÈ?"x
punctuation_countsb*`

(	      @

)	      @

:	      ?

,	      @

-	      @

.	      @"!
uppercase_percentage	]m≈˛≤{¢?""
whitespace_percentage	ƒ±.n£ƒ?"
list_item_indicator  "

word_count	     ÄW@"$
average_sentence_length	ÕÃÃÃÃÃ2@"
vocabulary_density	µ˚ÀÓ…Â?"
digit_percentage	˙~jºtìx?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	     0@"
relative_position	%uöû?2Ó	
?9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_5 
Ô, and (3) proving highly efficient, featuring only 2 % trainable parameters compared to the backbone. Zijian Song, Wenhan Zhang, Kaigui Bian, and Bin Cui are affiliated with School of CS, AI Innovation Center, National Engineering Laboratory for Big Data Analysis and Applications, Peking University. Lifang Deng, Jiandong Zhang are affiliated with Lazada Group. Kaigui Bian is also affiliated with State Key Laboratory of Multimedia Information Processing, Peking University. Permission to make?9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_5 ˜(‰:standard_500_50" 
average_word_length	t$óˇê~@"$
potential_heading_score	öôôôôô…?"
sentence_count	      @"$
alphanumeric_percentage	¨≠ÿ_vOÍ?"h
punctuation_countsR*P

%	      ?

(	      ?

)	      ?

,	      $@

.	      @"!
uppercase_percentage	Q⁄|a2µ?""
whitespace_percentage		äcÓZ¬?"
list_item_indicator  "

word_count	     ¿U@"$
average_sentence_length	ffffff1@"
vocabulary_density	n£ºÊ?"
digit_percentage	¸©Ò“Mbp?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	     ~@"
relative_position	HP¸s◊¢?2‚	
?9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_6Œ
ÛProcessing, Peking University. Permission to make digital or hard copies of all or part of this work for personal or classroom use is granted without fee provided that copies are not made or distributed for profit or commercial advantage and that copies bear this notice and the full citation on the first page. Copyrights for components of this work owned by others than the author (s) must be honored. Abstracting with credit is permitted. To copy otherwise, or republish, to post on servers or to?9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_6 ¥(•:standard_500_50" 
average_word_length	q¨ã€®@"$
potential_heading_score	öôôôôô…?"
sentence_count	      @"$
alphanumeric_percentage	∑— ﬁ	Í?"X
punctuation_countsB*@

(	      ?

)	      ?

,	      @

.	      @"!
uppercase_percentage	yÈ&1¨å?""
whitespace_percentage	¥Yıπ⁄ä≈?"
list_item_indicator  "

word_count	     ÄW@"$
average_sentence_length	ÕÃÃÃÃÃ2@"
vocabulary_density	Ú∞PköwÊ?"
digit_percentage	        "
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	     0@"
relative_position	‹◊ÅsFî¶?2¡

?9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_7⁄
ˇotherwise, or republish, to post on servers or to redistribute to lists, requires prior specific permission and / or a fee. Request permissions from permissions @ acm. org. CIKM ‚Äô 24, October 21 ‚Äì 25, 2024, Boise, ID, USA ¬© 2024 Copyright held by the owner / author (s). Publication rights licensed to ACM. ACM ISBN 979 - 8 - 4007 - 0436 - 9 / 24 / 10 https: // doi. org / 10. 1145 / 3627673. 3679549 CCS Concepts ‚Ä¢ Information systems ‚Üí Recommender systems; ‚Ä¢ Comput - ing methodologies ‚Üí Transfer?9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_7 ı(≈:standard_500_50" 
average_word_length	$(~åπk@"$
potential_heading_score	öôôôôô…?"
sentence_count	      "@"$
alphanumeric_percentage	OØîeàcÁ?"™
punctuation_countsì*ê

@	      ?

(	      ?

)	      ?

:	      ?

;	      ?

,	       @

-	      @

.	       @

/	       @"!
uppercase_percentage	.ˇ!˝ˆu∞?""
whitespace_percentage	Ω„…Â«?"
list_item_indicator  "

word_count	     Ä\@"$
average_sentence_length	Ö|–≥YU)@"
vocabulary_density	"˝ˆu‡úÂ?"
digit_percentage	-CÎ‚6∫?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	      @"
relative_position	ëÌ|?5^™?2à

?9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_8‘
˘systems; ‚Ä¢ Comput - ing methodologies ‚Üí Transfer learning. Keywords Multi - Domain Recommendation, Click - Through Rate Prediction, Parameter - Efficient Fine - Tuning, Low - Rank Adaptation ACM Reference Format: Zijian Song, Wenhan Zhang, Lifang Deng, Jiandong Zhang, Kaigui Bian, and Bin Cui. 2024. MultiLoRA: Multi - Directional Low - Rank Adaptation for Multi - Domain Recommendation. In Proceedings of the 33 rd ACM Interna - tional Conference on Information and Knowledge Management (CIKM ‚Äô 24?9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_8 ó(ı:standard_500_50" 
average_word_length	L¶
F%ı@"$
potential_heading_score	öôôôôô…?"
sentence_count	      @"$
alphanumeric_percentage	åJÍ4È?"x
punctuation_countsb*`

(	      ?

:	       @

;	      ?

,	       @

-	      $@

.	      @"!
uppercase_percentage	⁄¨˙\m≈æ?""
whitespace_percentage	Î‚6¿√?"
list_item_indicator  "

word_count	     ÄW@"$
average_sentence_length	ÕÃÃÃÃÃ2@"
vocabulary_density	µ˚ÀÓ…Â?"
digit_percentage	¸©Ò“Mbê?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	     0@"
relative_position	%uöÆ?2…

?9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_9	“
˜on Information and Knowledge Management (CIKM ‚Äô 24), October 21 ‚Äì 25, 2024, Boise, ID, USA. ACM, New York, NY, USA, 10 pages. https: // doi. org / 10. 1145 / 3627673. 3679549 1 Introduction base model ? ? stylized model ? ? 1 stylized model ? ? 2 multi - style model ? ? {1, 2} LoRA Œî ? ? 1 (animal) LoRA Œî ? ? 2 (impressionism) Text - to - Image Prompt: village, portrait, cat girl (a) Multiple LoRAs for Image Generation (b) Multiple LoRAs for Recommendation (Ours) universal model ? ? model for?9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_9 ≈(î":standard_500_50" 
average_word_length	ÃÓ…√B≠@"$
potential_heading_score	öôôôôô…?"
sentence_count	      @"$
alphanumeric_percentage	-CÎ‚6Ê?"∫
punctuation_counts£*†

(	      @

)	      @

:	       @

{	      ?

,	      (@

-	      @

}	      ?

.	      @

/	      @

?	      ,@"!
uppercase_percentage	_)À«∫∏?""
whitespace_percentage	_)À«∫»?"
list_item_indicator  "

word_count	     @`@"$
average_sentence_length	B>ËŸ¨™5@"
vocabulary_density	46<Ω‡?"
digit_percentage	jºtì¥?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	     @"
relative_position	m≈˛≤{Ú∞?2Æ

@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_10
÷
˙Recommendation (Ours) universal model ? ? model for task 1 model for task 2 model for composite task LoRA Œî ? ? 2 (clothing items) LoRA Œî ? ? 1 (female users) Figure 1: Comparison of using multiple LoRAs for image generation and recommendation. For recommendation, We design LoRA fusion module to calculate the combination weights instead of using manually assigned ‚Äú 1 ‚Äù. Click - Through Rate (CTR) prediction is an important problem in recommendation with widespread applications [2, 13, 25, 30, 31@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_10 „!(À%:standard_500_50" 
average_word_length	˚ÀÓ…É@"$
potential_heading_score	öôôôôô…?"
sentence_count	      @"$
alphanumeric_percentage	†/›$È?"ö
punctuation_countsÉ*Ä

(	      @

)	      @

:	      ?

[	      ?

,	      @

-	      ?

.	       @

?	      @"!
uppercase_percentage	9¥»væü™?""
whitespace_percentage	shëÌ|?≈?"
list_item_indicator  "

word_count	     @Y@"$
average_sentence_length	!ÙlV’@@"
vocabulary_density	Fîˆ_ò‰?"
digit_percentage	∏ÖÎQ∏û?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	     @@"
relative_position	7âA`Â–≤?2∂

@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_11Œ
Úwith widespread applications [2, 13, 25, 30, 31]. To meet the needs of modern recommendation platforms with mul - tiple domains, Multi - Domain Recommendation (MDR) has gained popularity in recent years to capture domain commonalities and 2148 https: // orcid. org / 0009 - 0005 - 7725 - 2497 https: // orcid. org / 0009 - 0007 - 3015 - 8596 https: // orcid. org / 0009 - 0003 - 6940 - 8303 https: // orcid. org / 0000 - 0003 - 3404 - 1559 https: // orcid. org / 0000 - 0003 - 0136 - 6082 https: //@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_11 ù%(”(:standard_500_50" 
average_word_length	·zÆGa
@"$
potential_heading_score	        "
sentence_count	      @"$
alphanumeric_percentage	%uöÊ?"™
punctuation_countsì*ê

(	      ?

)	      ?

:	      @

[	      ?

,	      @

]	      ?

-	      1@

.	      @

/	      1@"!
uppercase_percentage	ˇ!˝ˆu‡å?""
whitespace_percentage	5Ô8EGr…?"
list_item_indicator  "

word_count	     @^@"$
average_sentence_length	öwú¢#I1@"
vocabulary_density	”ﬁ‡ì©‡?"
digit_percentage	Ω„…Â«?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	      @"
relative_position	?∆‹µ¥?2€

@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_12”
˜https: // orcid. org / 0000 - 0003 - 0136 - 6082 https: // orcid. org / 0000 - 0003 - 1681 - 4677 https: // doi. org / 10. 1145 / 3627673. 3679549 https: // doi. org / 10. 1145 / 3627673. 3679549 http: // crossmark. crossref. org / dialog /? doi = 10. 1145 % 2 F 3627673. 3679549 & domain = pdf & date _ stamp = 2024 - 10 - 21 CIKM ‚Äô 24, October 21 ‚Äì 25, 2024, Boise, ID, USA Zijian Song et al. diversities concurrently. However, most existing MDR methods are based on the multi - task learning (MTL@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_12 ¶((Õ+:standard_500_50" 
average_word_length	˚\m≈˛≤@"$
potential_heading_score	öôôôôô…?"
sentence_count	      .@"$
alphanumeric_percentage	D˙ÌÎ¿9Â?" 
punctuation_counts≥*∞

%	      ?

&	       @

(	      ?

:	      @

,	      @

-	      "@

=	      @

.	      ,@

/	      2@

?	      ?

_	      ?"!
uppercase_percentage	<ΩRñ!é•?""
whitespace_percentage		äcÓ ?"
list_item_indicator  "

word_count	     †`@"$
average_sentence_length	Î‚6¿ª!@"
vocabulary_density	‡ú•Ω¡ﬂ?"
digit_percentage	Ú∞PköwÃ?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	     0@"
relative_position	‹◊ÅsFî∂?2è

@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_13…
Ìmethods are based on the multi - task learning (MTL) paradigm, where a uni - fied model is trained to serve all domains [35]. These methods are usually tailored for specific business scenarios, resulting in poor compatibility and limited deployability [29]. For example, the star topology based on fully connected networks in STAR [27] may hinder its integration with additional modules like factorization machines. Additionally, MTL - based models receive supervision sig - nals from numerous@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_13 ù+(É/:standard_500_50" 
average_word_length	…Â?§_@"$
potential_heading_score	öôôôôô…?"
sentence_count	      @"$
alphanumeric_percentage	Ω„…ÂÈ?"à
punctuation_countsr*p

(	      ?

)	      ?

[	      @

,	      @

-	      @

]	      @

.	      @"!
uppercase_percentage	F%uöõ?""
whitespace_percentage	d]‹Fx√?"
list_item_indicator  "

word_count	     ¿V@"$
average_sentence_length	     ¿6@"
vocabulary_density	∫⁄ä˝e˜Ë?"
digit_percentage	HP¸à?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	     –~@"
relative_position	∑bŸ=y∏?2ß

@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_14œ
Ûmodels receive supervision sig - nals from numerous domains, which inevitably leads to conflicts and negative transfer [37]. Worse still, most of them heavily rely on overlapping users or items [35], which is often unavailable in real - world applications. On the other hand, the pre - train & fine - tune paradigm is at - tracting increasing attention, inspired by the great success of large pre - trained models in natural language processing (NLP) and com - puter vision (CV) areas. Specifically,@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_14 “.(π2:standard_500_50" 
average_word_length	ÆG·zÆ@"$
potential_heading_score	        "
sentence_count	      @"$
alphanumeric_percentage	köwú¢#È?"ö
punctuation_countsÉ*Ä

&	      ?

(	       @

)	       @

[	       @

,	      @

-	      @

]	       @

.	      @"!
uppercase_percentage	¸©Ò“Mbê?""
whitespace_percentage	dÃ]K»≈?"
list_item_indicator  "

word_count	      Y@"$
average_sentence_length	      9@"
vocabulary_density	ÆG·zÆÁ?"
digit_percentage	¸©Ò“MbÄ?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	     0@"
relative_position	Å&¬ÜßW∫?2	
@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_15À
Ô) and com - puter vision (CV) areas. Specifically, a universal model is pre - trained using data from all domains, then fine - tuned on the target domain. This paradigm is compatible with almost any modules or structures, and the model receives signals only from the target domain while fine - tuning, mitigating conflicts and overlapping reliance. How - ever, full fine - tuning constructs an entire domain - specific model for each domain, leading to high computation and storage costs. Fine -@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_15 â2(Í5:standard_500_50" 
average_word_length		˘†g≥*@"$
potential_heading_score	        "
sentence_count	      @"$
alphanumeric_percentage	fàc]‹FÈ?"h
punctuation_countsR*P

(	      ?

)	       @

,	      @

-	       @

.	      @"!
uppercase_percentage	Ä∑@Ç‚«à?""
whitespace_percentage	Å≈è1w≈?"
list_item_indicator  "

word_count	      X@"$
average_sentence_length	3333333@"
vocabulary_density	K»=õUÂ?"
digit_percentage	        "
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	     ~@"
relative_position	[±øÏû<º?2ì

@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_16Õ
Òto high computation and storage costs. Fine - tuning on a small task may also cause catastrophic forget - ting, making the model forget common knowledge learned during pre - training [5, 21]. In contrast, Parameter - Efficient Fine - Tuning (PEFT) methods are more efficient and effective, fine - tuning only a small proportion of parameters. The latest MDR methods introduce prompt - tuning [14, 17] or adapters [10] to adapt the pre - trained model to the target domain. Specifically, PLATE [29]@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_16 ø5(†9:standard_500_50" 
average_word_length	õUü´≠ÿ@"$
potential_heading_score	        "
sentence_count	      @"$
alphanumeric_percentage	–≥Yıπ⁄Ë?"à
punctuation_countsr*p

(	      ?

)	      ?

[	      @

,	      @

-	       @

]	      @

.	      @"!
uppercase_percentage	æ0ô*ï§?""
whitespace_percentage	«K7âA`≈?"
list_item_indicator  "

word_count	      Z@"$
average_sentence_length	ÕÃÃÃÃÃ4@"
vocabulary_density	¨Zd;Â?"
digit_percentage	˛e˜‰a°ñ?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	     @"
relative_position	%uöæ?2î

@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_17Œ
Úto the target domain. Specifically, PLATE [29] adds prompts before the input to help themodel better understand and accomplish domain - specific recommendation, while HAMUR [16] generates a trainable layer (i. e., an adapter) to process hidden states. They sub - tly prevent catastrophic forgetting and achieve better performance than full fine - tuning. However, these methods overlook the fundamental differences between recommendation and NLP tasks. Recommendation mod - els heavily rely on ID -@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_17 Û8(‹<:standard_500_50" 
average_word_length	ﬁ	ä£@"$
potential_heading_score	        "
sentence_count	      @"$
alphanumeric_percentage	€ä˝e˜‰È?"à
punctuation_countsr*p

(	      ?

)	      ?

[	       @

,	      @

]	       @

-	      @

.	      @"!
uppercase_percentage	jMÛé£?""
whitespace_percentage	æ¡&S√?"
list_item_indicator  "

word_count	     ¿V@"$
average_sentence_length	Ö|–≥YU.@"
vocabulary_density	'†â∞·ÈÁ?"
digit_percentage	¸©Ò“MbÄ?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	      @"
relative_position	      ¿?2ñ

@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_18–
Ùtasks. Recommendation mod - els heavily rely on ID - based embeddings, which seriously hinders the development of general - purpose large - scale recommendation models [33]. Prompt - tuning only modifies the input, and adapters add just a single layer of domain - specific parameters, making them inadequate for learning new tasks when the pre - trained model ‚Äô s capabilities are insufficient. In contrast, the Low - Rank Adaptation (LoRA) module [11], which updates all parameters, offers greater@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_18 ´<(ã@:standard_500_50" 
average_word_length	1¨Z§@"$
potential_heading_score	öôôôôô…?"
sentence_count	      @"$
alphanumeric_percentage	ã˝e˜‰aÈ?"à
punctuation_countsr*p

(	      ?

)	      ?

[	       @

,	      @

-	       @

]	       @

.	      @"!
uppercase_percentage	˛e˜‰a°ñ?""
whitespace_percentage	£í:Mƒ?"
list_item_indicator  "

word_count	     ¿W@"$
average_sentence_length	     ¿7@"
vocabulary_density	∆m4Ä∑@Ë?"
digit_percentage	¸©Ò“MbÄ?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	      @"
relative_position	m≈˛≤{Ú¿?2ï

@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_19œ
Û[11], which updates all parameters, offers greater expressiveness in such cases. This is why LoRA is more commonly used in image generation than prompt - tuning. For example, as shown in Figure 1 a, the diffusion model cannot achieve satisfactory output (anthropomorphic animals) through prompt adjustments without the help of LoRA, which is similar in the MDR context. Furthermore, there is another neglect in previous works that can be addressed by LoRA. The partitioning of domains is customarily@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_19 ⁄?(…C:standard_500_50" 
average_word_length	+áY@"$
potential_heading_score	öôôôôô…?"
sentence_count	      @"$
alphanumeric_percentage	a√”+eÍ?"à
punctuation_countsr*p

(	      ?

)	      ?

[	      ?

,	      @

]	      ?

-	      ?

.	      @"!
uppercase_percentage	ΩRñ!éu°?""
whitespace_percentage	Î‚6¿√?"
list_item_indicator  "

word_count	      W@"$
average_sentence_length	ffffff2@"
vocabulary_density	      Ë?"
digit_percentage	˙~jºtìx?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	     0@"
relative_position	R'†â∞·¡?2ß

@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_20œ
ÛLoRA. The partitioning of domains is customarily based on a natural feature [15], such as the item category [20], or the recommendation scenario [27]. We refer to this partitioning as a Natural Domain Division, which may render samples with dif - ferent distributions in the same domain, violating the independent and identically distributed (i. i. d.) data assumption. For example, in Figure 2, if we use User Gender as the criterion, samples ? ? 1 and ? ? 2 would be assigned to different domains.@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_20 öC(ÖG:standard_500_50" 
average_word_length	∫I+@"$
potential_heading_score	        "
sentence_count	      @"$
alphanumeric_percentage	√”+e‚Ë?"ö
punctuation_countsÉ*Ä

(	      ?

)	      ?

[	      @

,	      @

]	      @

-	      ?

.	      @

?	      @"!
uppercase_percentage	˙~jºtìò?""
whitespace_percentage	¥Yıπ⁄ä≈?"
list_item_indicator  "

word_count	     ¿Z@"$
average_sentence_length	æ¡&S’1@"
vocabulary_density	1ô*ï‘Â?"
digit_percentage	;ﬂOçóní?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	     0@"
relative_position	¿Ïû<,‘¬?2Û	
@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_21Ó
í? 1 and ? ? 2 would be assigned to different domains. This intuitively makes Sample ? ? ? ? user clicked item in the Front Page gender: age: ‚Ä¶‚Ä¶ female young ‚Ä¶‚Ä¶ User Profile name: category: ‚Ä¶‚Ä¶ dress clothes ‚Ä¶‚Ä¶ Item Profile Sample ? ? ? ? user clicked item in the Front Page gender: age: ‚Ä¶‚Ä¶ male old ‚Ä¶‚Ä¶ User Profile name: category: ‚Ä¶‚Ä¶ jeans clothes ‚Ä¶‚Ä¶ Item Profile Sample Space Division 1 criterion: user gender F M Division 2 item category Clothes Food Eletronics ? ? ? ? ? ? ? ? Figure 2: Depending@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_21 ‘F(∂J:standard_500_50" 
average_word_length		äcn@"$
potential_heading_score	öôôôôô…?"
sentence_count	       @"$
alphanumeric_percentage	U0*©–Ê?"H
punctuation_counts2*0

:	      $@

.	      ?

?	      3@"!
uppercase_percentage	}–≥Yıπ™?""
whitespace_percentage	Âa°÷4Ô»?"
list_item_indicator  "

word_count	     @[@"$
average_sentence_length	     @K@"
vocabulary_density	:#J{É/‹?"
digit_percentage	{ÆG·zÑ?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	      @"
relative_position	•N@a√√?2Ç

@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_22Õ
ÒFood Eletronics ? ? ? ? ? ? ? ? Figure 2: Depending on the criterion of domain division, non - identically distributed samples may be assigned to the same domain. sense, as male and female users indeed exhibit distinct preferences. However, if we use Item Category, they would coexist in the same domain, which violates the i. i. d. data assumption and compromises the performance. To alleviate this issue, we can use two criteria simultaneously, dividing the sample space into 2 √ó 3 = 6 domains.@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_22 äJ(M:standard_500_50" 
average_word_length	£º@"$
potential_heading_score	        "
sentence_count	      @"$
alphanumeric_percentage	º?∆Ë?"x
punctuation_countsb*`

:	      ?

,	      @

-	      ?

=	      ?

.	      @

?	       @"!
uppercase_percentage	?∆‹µÑ|ê?""
whitespace_percentage	‡-ê†¯1∆?"
list_item_indicator  "

word_count	     ÄY@"$
average_sentence_length	jﬁqäé$-@"
vocabulary_density	g’Áj+ˆÂ?"
digit_percentage	Ç‚«òªñÄ?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	      @"
relative_position	?∆‹µƒ?2Ü

@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_23—
ıdividing the sample space into 2 √ó 3 = 6 domains. However, this leads to a dramatic increase in domain amount, and exacerbates the already existing data sparsity issue. Fortunately, prior studies show that integrating multiple LoRAs can help diffusion models generate images with multiple styles [24, 36], as shown in Figure 1 a. This is a capability that prompts and adapters do not possess, enabling us to learn composite recommen - dation tasks. Specifically, we introduce several Auxiliary Domain@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_23 ¿M(±Q:standard_500_50" 
average_word_length	≥q¨ã@"$
potential_heading_score	öôôôôô…?"
sentence_count	      @"$
alphanumeric_percentage	ÏQ∏ÖÎÈ?"x
punctuation_countsb*`

[	      ?

,	      @

=	      ?

]	      ?

-	      ?

.	      @"!
uppercase_percentage	{ÆG·zî?""
whitespace_percentage	”MbX9ƒ?"
list_item_indicator  "

word_count	     @W@"$
average_sentence_length	öôôôôô2@"
vocabulary_density	ÉQIùÄ&Í?"
digit_percentage	¸©Ò“Mbê?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	     @@"
relative_position	˜u‡ú•≈?2Ú	
@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_24Õ
Ò, we introduce several Auxiliary Domain Divisions based on manually chosen criteria (for simplicity, we introduce only one in this paper). We then learn LoRAs in different directions respectively, and combine them to indirectly achieve a finer - grained domain division, as illustrated in Figure 1 b. To address the challenges mentioned above, this paper proposes MultiLoRA, aMulti - directional Low Rank Adaptation paradigm for multi - domain recommendation. MultiLoRA is a pre - train and fine -@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_24 ãQ(ÒT:standard_500_50" 
average_word_length	z6´>@"$
potential_heading_score	        "
sentence_count	      @"$
alphanumeric_percentage	àc]‹FÍ?"h
punctuation_countsR*P

(	      ?

)	      ?

,	      @

-	      @

.	      @"!
uppercase_percentage	Ÿ=yX®•?""
whitespace_percentage	O@a√”√?"
list_item_indicator  "

word_count	      V@"$
average_sentence_length	      6@"
vocabulary_density	      Ë?"
digit_percentage	¸©Ò“Mb`?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	     @"
relative_position	d;ﬂOçó∆?2…	
@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_25ƒ
Ërecommendation. MultiLoRA is a pre - train and fine - tune paradigm compatible with most existing CTR methods, making it easy to deploy. It has three stages. First, we pre - train a unified recommendation model using all data to capture universal preference patterns. Second, we learn a set of domain - specific Lo - RAs under each domain division. Finally, we train a LoRA fusion module to combine multi - directional LoRAs, obtaining preference patterns on a finer - grained domain. The@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_25 ¿T(öX:standard_500_50" 
average_word_length	IùÄ&¬F@"$
potential_heading_score	öôôôôô…?"
sentence_count	      @"$
alphanumeric_percentage	Sñ!éuqÈ?"H
punctuation_counts2*0

,	      @

-	      @

.	      @"!
uppercase_percentage	jºtì¶?""
whitespace_percentage	/›$Å≈?"
list_item_indicator  "

word_count	     ÄW@"$
average_sentence_length	ñ!éuq€*@"
vocabulary_density	5Ô8EGrÂ?"
digit_percentage	        "
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	     Ä~@"
relative_position	IùÄ&¬Ü«?2—	
@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_26Ã
preference patterns on a finer - grained domain. The contribution of this study is summarized as follows. ‚Ä¢ We propose MultiLoRA, a plug - and - play training paradigm com - patible with most CTR prediction models, transforming them into powerful multi - domain recommendation models. ‚Ä¢ To the best of our knowledge, we are the first to introduce LoRA into recommendation systems. We design a novel LoRA module tailored for domain adaptation in MDR. It is computationally efficient, requiring@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_26 ÈW(À[:standard_500_50" 
average_word_length	 oÅ≈è@"$
potential_heading_score	öôôôôô…?"
sentence_count	      @"$
alphanumeric_percentage	äé‰Ú“È?"H
punctuation_counts2*0

,	      @

-	      @

.	      @"!
uppercase_percentage	?∆‹•?""
whitespace_percentage	≠iﬁqäéƒ?"
list_item_indicator  "

word_count	     @V@"$
average_sentence_length	{É/L¶™-@"
vocabulary_density	öû^Á?"
digit_percentage	        "
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	     ¿~@"
relative_position	∑bŸ=y»?2Â	
@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_27–
Ùin MDR. It is computationally efficient, requiring learning only 2 % of the parameters compared to the pre - trained model. This module addresses catastrophic forgetting, leading to enhanced recommendation performance. ‚Ä¢ To the best of our knowledge, we are the first to study the data distribution inconsistency issue in MDR. We devise a LoRA fu - sion module to combine domain - specific LoRAs trained under different domain divisions, obtaining preference patterns from various perspectives. ‚Ä¢@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_27 ö[(É_:standard_500_50" 
average_word_length	õÊßËà@"$
potential_heading_score	        "
sentence_count	      @"$
alphanumeric_percentage	T„•õƒ Í?"X
punctuation_countsB*@

%	      ?

,	      @

-	      @

.	      @"!
uppercase_percentage	aTR'†â†?""
whitespace_percentage	@§ﬂæú√?"
list_item_indicator  "

word_count	     ÄU@"$
average_sentence_length	{É/L¶™,@"
vocabulary_density	Sñ!éuqÁ?"
digit_percentage	¸©Ò“Mb`?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	      @"
relative_position	úƒ ∞rh…?2ã

@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_28÷
˙preference patterns from various perspectives. ‚Ä¢ Through extensive experiments conducted on three real - world datasets, we demonstrate that MultiLoRA outperforms state - of - the - art methods in both efficiency and effectiveness. 2149 MultiLoRA: Multi - Directional Low - Rank Adaptation for Multi - Domain Recommendation CIKM ‚Äô 24, October 21 ‚Äì 25, 2024, Boise, ID, USA 2 Preliminary 2. 1 Low - Rank Adaptation Low - Rank Adaptation (LoRA) is a technique that originally ap - peared in the natural@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_28 ‘^(±b:standard_500_50" 
average_word_length	öôôôôô@"$
potential_heading_score	öôôôôô…?"
sentence_count	      @"$
alphanumeric_percentage	Ù˝‘xÈ&È?"x
punctuation_countsb*`

(	      ?

)	      ?

:	      ?

,	      @

-	      $@

.	      @"!
uppercase_percentage	€˘~jºt≥?""
whitespace_percentage	À°E∂Û˝ƒ?"
list_item_indicator  "

word_count	     ¿W@"$
average_sentence_length	     ¿7@"
vocabulary_density	6Õ;N—ëÊ?"
digit_percentage	úƒ ∞rh°?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	     @@"
relative_position		äcÓZ ?2À

@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_29”
˜that originally ap - peared in the natural language processing field, used to adapt large language models to downstream tasks. Hu et al. [11] claim that the change of model weights during the fine - tuning has a low intrinsic rank. Thus, it is possible to use low - rank matrix decomposition to approximate this change. Specifically, for a pre - trained weight ma - trix ? ? 0 ‚àà R ? ? √ó ? ?, its change during fine - tuning can be represented in a low - rank form: ? ? 0 + Œî ? ? = ? ? 0 + ? ? ? ?, (@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_29 âb(ﬁe:standard_500_50" 
average_word_length	‡æú3"
@"$
potential_heading_score	        "
sentence_count	      @"$
alphanumeric_percentage	n4Ä∑@ÇÊ?"∫
punctuation_counts£*†

(	      ?

:	      ?

[	      ?

+	       @

,	      @

-	      @

]	      ?

=	      ?

.	      @

?	      0@"!
uppercase_percentage	{ÆG·zÑ?""
whitespace_percentage	Sñ!éuqÀ?"
list_item_indicator  "

word_count	      ^@"$
average_sentence_length	      8@"
vocabulary_density	µ7¯¬d™‚?"
digit_percentage	{ÆG·zÑ?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	     0@"
relative_position	ÓÎ¿9#JÀ?2¡

@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_30Ÿ
˝in a low - rank form: ? ? 0 + Œî ? ? = ? ? 0 + ? ? ? ?, (1) where ? ? ‚àà R ? ? √ó ? ? is the downsampling matrix, and ? ? ‚àà R ? ? √ó ? ? is the upsampling matrix, and ? ? ‚â™ min (? ?, ? ?). Linear algebra teaches us that the rank of ? ? ? ? is at most ? ?. While fine - tuning, we learn matrices ? ? and ? ? to approximate Œî ? ?. Later, LoRA was widely adopted in the field of image generation. By training on only a few images, LoRA can control the output style of diffusion models or help them generate@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_30 ≥e(Åi:standard_500_50" 
average_word_length	fàc]‹F@"$
potential_heading_score	öôôôôô…?"
sentence_count	      @"$
alphanumeric_percentage	∆‹µÑ|–„?"™
punctuation_countsì*ê

(	       @

)	       @

:	      ?

+	       @

,	      @

-	       @

=	      ?

.	      @

?	      D@"!
uppercase_percentage	º?∆ú?""
whitespace_percentage	+áŸŒœ?"
list_item_indicator  "

word_count	     †a@"$
average_sentence_length	333333<@"
vocabulary_density	√d™`TRﬂ?"
digit_percentage	˙~jºtìx?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	     0@"
relative_position	[±øÏû<Ã?2ˇ	
@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_31 
Óstyle of diffusion models or help them generate images beyond their original capabilities. For instance, as shown in Figure 1, the base model cannot generate an anthropomorphic animal on its own, regardless of the text - to - image prompt used. However, with the help of a LoRA module trained on a few images, the model gains the ability to draw something it has never seen before. Our reasons for choosing LoRA are twofold: (1) While employing only low - rank matrices, LoRA is involved in the@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_31 ”h(∫l:standard_500_50" 
average_word_length	ŒQ⁄|@"$
potential_heading_score	öôôôôô…?"
sentence_count	      @"$
alphanumeric_percentage	€˘~jºtÈ?"x
punctuation_countsb*`

(	      ?

)	      ?

:	      ?

,	      @

-	      @

.	      @"!
uppercase_percentage	B>ËŸ¨˙ú?""
whitespace_percentage	õÊßËH∆?"
list_item_indicator  "

word_count	     ¿X@"$
average_sentence_length	     ¿8@"
vocabulary_density	É/L¶
FÁ?"
digit_percentage	¸©Ò“Mbp?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	     ‡~@"
relative_position	@a√”+Õ?2§

@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_32 Ã
only low - rank matrices, LoRA is involved in the updates of a large number of parameters. In contrast, adapters and prompt - tuning only affect a small proportion of parameters, and their effectiveness heavily relies on the capabilities of the pre - trained model; (2) In image generation, multiple LoRAs can be combined to generate images that carry multiple styles, providing rich customizability [24, 36]. Hence, we can conduct multiple domain divisions, and two domain - specific LoRAs under@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_32 ål(Ûo:standard_500_50" 
average_word_length	+áŸé@"$
potential_heading_score	öôôôôô…?"
sentence_count	      @"$
alphanumeric_percentage	ÃÓ…√B≠È?"ö
punctuation_countsÉ*Ä

(	      ?

)	      ?

;	      ?

[	      ?

,	       @

-	      @

]	      ?

.	       @"!
uppercase_percentage	Ä∑@Ç‚«ò?""
whitespace_percentage	¿[ AÒcƒ?"
list_item_indicator  "

word_count	     ¿W@"$
average_sentence_length	B>ËŸ¨™?@"
vocabulary_density	ÚAœf’ÁÊ?"
digit_percentage	MÑOØÑ?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	      @"
relative_position	Æÿ_vOŒ?2„	
@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_33!Œ
Údivisions, and two domain - specific LoRAs under different domain divisions can be easily combined to achieve finer - grained domain division. 2. 2 Multi - Domain CTR Prediction A traditional CTR prediction model is trained on a single domain, with various features such as user profiles, item attributes, context information, and historical interactions as input ? ?. These raw fea - tures are then mapped into low - dimensional embedding ? ?, fed into the subsequent prediction model to calculate@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_33 ∆o(¨s:standard_500_50" 
average_word_length	k+ˆó›ì@"$
potential_heading_score	öôôôôô…?"
sentence_count	      @"$
alphanumeric_percentage	›µÑ|–≥È?"X
punctuation_countsB*@

,	      @

-	      @

.	      @

?	      @"!
uppercase_percentage	º?∆ú?""
whitespace_percentage	≠iﬁqäéƒ?"
list_item_indicator  "

word_count	     ÄV@"$
average_sentence_length	     Ä6@"
vocabulary_density	oÖ…T¡Ê?"
digit_percentage	¸©Ò“Mbp?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	      @"
relative_position	ì:MÑœ?2Õ

@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_34"’
˘into the subsequent prediction model to calculate the predicted CTR ? ?. The ground truth label ? ? is then used to calculate the value of the loss function. The multi - domain CTR model takes an additional input, the domain indicator ? ?. The objective is to find a function F that can predict CTR ? ? for every domain: min ? ? 1 ? ? ? ? ‚àë Ô∏Å ? ? = 1 1 | D ? ? | | D ? ? | ‚àë Ô∏Å ? ? = 1 L ? ? ? ? ? ? (F (? ? ? ? ? ?, ? ?; ? ?), ? ? ? ? ? ?) (2) where ? ? denotes the parameters of the model, ? ? is@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_34 ¸r(¬v:standard_500_50" 
average_word_length	     Ä@"$
potential_heading_score	öôôôôô…?"
sentence_count	      @"$
alphanumeric_percentage	≠˙\m≈˛‚?"∫
punctuation_counts£*†

(	      @

)	      @

:	      ?

;	      ?

,	      @

|	      @

-	      ?

=	       @

.	      @

?	      H@"!
uppercase_percentage	ﬂ‡ì©Ç°?""
whitespace_percentage	{ÆG·z–?"
list_item_indicator  "

word_count	      b@"$
average_sentence_length	      B@"
vocabulary_density	àÖZ”º„ÿ?"
digit_percentage	MÑOØÑ?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	     @"
relative_position	      –?2è

@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_35#…
Ì? ? denotes the parameters of the model, ? ? is the number of domains, D ? ? is the sample space of the ? ? - th domain. 2. 3 Typical Architecture of CTR Backbones A typical CTR prediction backbone consists of three components: embedding layer, feature interaction layer, and output layer [29, 34]. ‚Ä¶ user feature item feature context feature combination feature Input Embedding Layer Feature Interaction Logistic Regression ‡∑ú ? ? Figure 3: Typical Click - Through Rate prediction backbone@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_35 ñv(Úy:standard_500_50" 
average_word_length	¬&S#@"$
potential_heading_score	öôôôôô…?"
sentence_count	      @"$
alphanumeric_percentage		äcÓË?"à
punctuation_countsr*p

:	       @

[	      ?

,	      @

-	       @

]	      ?

.	      @

?	      $@"!
uppercase_percentage	™Ò“Mb®?""
whitespace_percentage	Å≈è1w≈?"
list_item_indicator  "

word_count	     ¿W@"$
average_sentence_length	     ¿7@"
vocabulary_density	ß∆K7â„?"
digit_percentage	ì©ÇQIç?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	     ê~@"
relative_position	∑bŸ=y–?2î

@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_36$Œ
Ú3: Typical Click - Through Rate prediction backbone architecture. We only fine - tune the feature interaction layer to capture domain - specific preference patterns. 2. 3. 1 Embedding Layer. The raw features in the dataset can be cat - egorized into two types: sparse features, which include categorical information represented by one / multi - hot vectors; and dense fea - tures, which contain numerical information represented by scalars. Assuming the dataset contains ? ? sparse features ? ? ? ?@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_36 ¬y(°}:standard_500_50" 
average_word_length	:#J{ÉÔ@"$
potential_heading_score	        "
sentence_count	      @"$
alphanumeric_percentage	7¿[ AÈ?"à
punctuation_countsr*p

:	       @

;	      ?

,	       @

-	      @

.	      @

/	      ?

?	      @"!
uppercase_percentage	˚:pŒàí?""
whitespace_percentage	ﬁìáÖZ”ƒ?"
list_item_indicator  "

word_count	     @W@"$
average_sentence_length	5Ô8EGí*@"
vocabulary_density	Øîeàc]Ê?"
digit_percentage	¸©Ò“MbÄ?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	      @"
relative_position	©–Dÿ–?2‚

@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_37%⁄
˝the dataset contains ? ? sparse features ? ? ? ? and ? ? dense features ? ? ? ?, the input is represented as: ? ? = {? ? 1, ¬∑ ¬∑ ¬∑, ? ? ? ?; ? ? 1, ¬∑ ¬∑ ¬∑, ? ? ? ?}. (3) Sparse features are often mapped into a low - dimensional embed - ding by a look - up table: ? ? ? ? = ? ? ? ? ? ? ? ?, where ? ? ? ? ‚àà R ? ? ? ? √ó ? ? is the mapping matrix of the ? ? - th feature field, and ? ? ? ? represents the number of categories in the ? ? - th sparse feature, and ? ? is the dimensionality of embeddings. As@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_37 ˆ|(∑Ä:standard_500_50" 
average_word_length	ãlÁ˚©q@"$
potential_heading_score	öôôôôô…?"
sentence_count	      @"$
alphanumeric_percentage	Ó|?5^∫·?" 
punctuation_counts≥*∞

(	      ?

)	      ?

:	       @

{	      ?

;	      ?

,	       @

=	       @

}	      ?

-	      @

.	       @

?	      M@"!
uppercase_percentage	˙~jºtìx?""
whitespace_percentage	†/›$—?"
list_item_indicator  "

word_count	     ‡b@"$
average_sentence_length	ﬂ‡ì©*I@"
vocabulary_density	îáÖZ”º◊?"
digit_percentage	˙~jºtìx?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	     @@"
relative_position	`vOj—?2›

@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_38&’
˜, and ? ? is the dimensionality of embeddings. As for multi - hot sparse features, we conduct mean - pooling on embeddings of all non - zero feature values. For dense features, we apply normalization to ensure the consistency of the data distribution. The output of the embedding layer is the concate - nation of all feature fields ‚Äô embeddings: ? ? = [? ? 1, ¬∑ ¬∑ ¬∑, ? ? ? ? + ? ?]. (4) 2. 3. 2 Feature Interaction. This part captures the impact of interac - tions between various feature fields on@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_38 àÄ(ÁÉ:standard_500_50" 
average_word_length	ˆ(\è¬u@"$
potential_heading_score	öôôôôô…?"
sentence_count	       @"$
alphanumeric_percentage	˚ÀÓ…√BÁ?" 
punctuation_counts≥*∞

(	      ?

)	      ?

:	      ?

[	      ?

+	      ?

,	      @

-	      @

=	      ?

]	      ?

.	      @

?	      (@"!
uppercase_percentage	˙~jºtìà?""
whitespace_percentage	=õUü´≠»?"
list_item_indicator  "

word_count	     @\@"$
average_sentence_length	     @,@"
vocabulary_density	+ï‘	h‚?"
digit_percentage	{ÆG·zÑ?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	      @"
relative_position	R'†â∞·—?2Ä

@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_39'À
Ìinterac - tions between various feature fields on the click - through rate. Its structure often reflects the fundamental differences among various CTR methods. Depending on the choice of the backbone network, the feature interaction layer can capture interactions between fea - ture fields that are explicit or implicit, low - dimensional or high - dimensional. For instance, Wide & Deep [3] is a widely used model that simultaneously captures linear feature combination and im - plicit high -@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_39 ∏É(ôá:standard_500_50" 
average_word_length	1ô*ï@"$
potential_heading_score	        "
sentence_count	      @"$
alphanumeric_percentage	Ω„…ÂÈ?"x
punctuation_countsb*`

&	      ?

[	      ?

,	      @

-	      @

]	      ?

.	      @"!
uppercase_percentage	Ç‚«òªñê?""
whitespace_percentage	‰…Â?ƒ?"
list_item_indicator  "

word_count	     ¿U@"$
average_sentence_length	     ¿5@"
vocabulary_density	@a√”+Á?"
digit_percentage	¸©Ò“Mb`?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	     –~@"
relative_position		äcÓZ“?2Ñ

@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_40(œ
Òlinear feature combination and im - plicit high - dimensional feature interactions; DeepFM [6] captures both explicit second - order feature interactions and implicit high - dimensional interactions; DCN [28] captures both explicit and im - plicit high - dimensional interactions. Our fine - tuning is conducted on this layer to capture domain preference patterns. It is notewor - thy that some backbones contain normalization layers, which are unsatisfactory when dealing with multi - domain data@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_40 ÎÜ(Õä:standard_500_50" 
average_word_length	ŒQ⁄€@"$
potential_heading_score	öôôôôô…?"
sentence_count	      @"$
alphanumeric_percentage	àc]‹FÍ?"x
punctuation_countsb*`

;	       @

[	       @

,	      ?

-	      "@

]	       @

.	       @"!
uppercase_percentage	?∆‹µÑ|ê?""
whitespace_percentage	ˇ≤{Ú∞P√?"
list_item_indicator  "

word_count	     @U@"$
average_sentence_length	æ¡&SU<@"
vocabulary_density	0ª'µ‰?"
digit_percentage	˙~jºtìx?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	     @"
relative_position	˚:pŒà““?2Ÿ

@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_41)—
Ûunsatisfactory when dealing with multi - domain data with differ - ent distributions. Hence, during the fine - tuning stage, we instead employ the domain normalization layer like STAR [27]. Finally, we denote the output of the feature interaction layer as ? ? (? ?), where ? ? is the depth of the feature interaction network. 2. 3. 3 Output Layer. This layer takes ? ? (? ?) as input and perform logistic regression to predict CTR: ? ? = ? ? (? ? ? ? ? ? (? ?) + ? ? ? ?), (5) where ? ? ? ?, ? ? ? ?@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_41 úä(Òç:standard_500_50" 
average_word_length	+áŸN@"$
potential_heading_score	        "
sentence_count	      @"$
alphanumeric_percentage	D˙ÌÎ¿9Â?" 
punctuation_counts≥*∞

(	      @

)	      @

:	      ?

[	      ?

+	      ?

,	      @

-	      @

]	      ?

=	      ?

.	      @

?	      A@"!
uppercase_percentage	˙~jºtìò?""
whitespace_percentage	[B>ËŸ¨ ?"
list_item_indicator  "

word_count	     @`@"$
average_sentence_length	5Ô8EGí2@"
vocabulary_density	Û“o_ﬁ?"
digit_percentage	˙~jºtìà?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	     0@"
relative_position	≤ùÔß∆K”?2—

@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_42*Ÿ
˚? = ? ? (? ? ? ? ? ? (? ?) + ? ? ? ?), (5) where ? ? ? ?, ? ? ? ? are trainable parameters, ? ? is sigmoid activation. 2150 CIKM ‚Äô 24, October 21 ‚Äì 25, 2024, Boise, ID, USA Zijian Song et al. scaling & offset LoRA Backbone Embedding Layer Backbone Embedding Layer ? ? ‚àº ? ? (0, ? ? 2) ? ? ? ? = 0 Backbone LoRA LoRA Fusion Embedding Layer Stage 1: Pretrain updated frozen Stage 2: Multi - Directional Low - Rank Adaptation Stage 3: LoRA Fusion ‚àà ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? (or ? ? ? ? ? ? ? ? ?@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_42 ¿ç(ˇê:standard_500_50" 
average_word_length	¢¥7¯¬‰@"$
potential_heading_score	        "
sentence_count	      @"$
alphanumeric_percentage	£#π¸áÙ·?"∫
punctuation_counts£*†

&	      ?

(	      @

)	      @

:	      @

+	      ?

,	      "@

=	       @

-	       @

.	       @

?	      N@"!
uppercase_percentage	,e‚X∑?""
whitespace_percentage	)\è¬ı(–?"
list_item_indicator  "

word_count	     ¿b@"$
average_sentence_length	      I@"
vocabulary_density	R∏ÖÎQÿ?"
digit_percentage	<ΩRñ!é•?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	     0@"
relative_position	•N@a√”?2õ

@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_43+’
˜3: LoRA Fusion ‚àà ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? (or ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ?) ‚àà ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ‚à© ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? ? Figure 4: Overall architecture of MultiLoRA paradigm. In the pre - train stage, we train the backbone with data from all domains. In the multi - directional low - rank adaptation stage, we fine - tune the model to obtain domain - specific LoRAs under both natural and auxiliary domain divisions. In the fusion stage, we train a@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_43 œê(ˆì:standard_500_50" 
average_word_length	h"lxz•@"$
potential_heading_score	öôôôôô…?"
sentence_count	      @"$
alphanumeric_percentage	HP¸s·?"à
punctuation_countsr*p

(	      ?

)	      ?

:	       @

,	      @

-	      @

.	      @

?	      R@"!
uppercase_percentage	?∆‹µÑ|†?""
whitespace_percentage	ﬂ‡ì©Ç—?"
list_item_indicator  "

word_count	     `b@"$
average_sentence_length	     `B@"
vocabulary_density	ﬂOçón◊?"
digit_percentage	¸©Ò“Mbp?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	     @"
relative_position	[±øÏû<‘?2‘

@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_44,‹
˛domain divisions. In the fusion stage, we train a LoRA fusion module to integrate multi - directional parameter updates, and obtain the model for the composite task. At last, we employ Binary Cross Entropy (BCE) as the loss function to train the backbone, with the optimization objective expressed as follows: min ? ? L = ‚àí 1 | T | | T | ‚àë Ô∏Å ? ? = 1 ? ? ? ? log (? ? ? ?) + (1 ‚àí ? ? ? ?) log (1 ‚àí ? ? ? ?), (6) where ? ? ? ? is the ground truth label, and ? ? ? ? is the predicted CTR of the ? ? - th@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_44 ∆ì(öó:standard_500_50" 
average_word_length	Øîeàc]@"$
potential_heading_score	öôôôôô…?"
sentence_count	      @"$
alphanumeric_percentage	{ÆG·z‰?"∫
punctuation_counts£*†

(	      @

)	      @

:	      ?

+	      ?

,	      @

|	      @

-	       @

=	       @

.	       @

?	      >@"!
uppercase_percentage	úƒ ∞rh°?""
whitespace_percentage	¡ °E∂ÛÕ?"
list_item_indicator  "

word_count	      a@"$
average_sentence_length	!ÙlV’F@"
vocabulary_density	vOjMﬂ?"
digit_percentage	{ÆG·zÑ?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	     @@"
relative_position	NbX9¥‘?2ˆ	
@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_45-—
Ûlabel, and ? ? ? ? is the predicted CTR of the ? ? - th sample, respectively, and T is the training sample space. 3 Method 3. 1 Overview To address the limitation of existing multi - domain recommendation methods, we propose MultiLoRA paradigm, as shown in Figure 4. MultiLoRA is a plug - and - play training paradigm that can be applied tomost backbone networks that follow the framework in Section 2. 3. It consists of following three stages. ‚Ä¢ Pretrain: We pre - train the backbone network with@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_45 Íñ( ö:standard_500_50" 
average_word_length	È&1¨ú@"$
potential_heading_score	öôôôôô…?"
sentence_count	      @"$
alphanumeric_percentage	Ö…T¡®Ë?"h
punctuation_countsR*P

:	      ?

,	      @

-	      @

.	      @

?	      @"!
uppercase_percentage	æ0ô*ï§?""
whitespace_percentage	ÁßËH.«?"
list_item_indicator  "

word_count	     ¿Y@"$
average_sentence_length	À«∫∏m-@"
vocabulary_density	‡-ê†¯1‰?"
digit_percentage	Ä∑@Ç‚«à?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	     @"
relative_position	≈è1w-’?2É

@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_46.Œ
‚Ä¢ Pretrain: We pre - train the backbone network with all samples in the dataset, capturing common preference patterns shared across domains. ‚Ä¢ Multi - Directional Low - Rank Adaptation: We freeze the em - bedding layer and the output layer, and fine - tune the feature interaction layer. Specifically, we employ parameter - efficient fine - tuning (PEFT) technique to low - rank adapt the pre - trained model to the target domain. Since naturally divided domains may contain non - identically@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_46 ôö(Òù:standard_500_50" 
average_word_length	ï‘	h¢@"$
potential_heading_score	öôôôôô…?"
sentence_count	      @"$
alphanumeric_percentage	Í46<È?"x
punctuation_countsb*`

(	      ?

)	      ?

:	       @

,	      @

-	      $@

.	      @"!
uppercase_percentage	…væü/ù?""
whitespace_percentage	-!ÙlV≈?"
list_item_indicator "

word_count	     @W@"$
average_sentence_length	     @7@"
vocabulary_density	/n£ºÊ?"
digit_percentage	        "
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	     ¿~@"
relative_position	˜u‡ú•’?2Ê	
@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_47/—
Ûdivided domains may contain non - identically distributed samples, we introduce an additional auxiliary domain division and train another set of LoRAs. The selection of the auxiliary domain division is further discussed in Section 4. 5. ‚Ä¢ LoRA Fusion: Inspired by the stackability of LoRA observed in the image generation field, we aim to simultaneously utilize two sets of LoRAs for joint prediction. For this purpose, we train a LoRA fusion module. After the three stages of training, we can use@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_47 «ù(¥°:standard_500_50" 
average_word_length	¯¬d™`T@"$
potential_heading_score	öôôôôô…?"
sentence_count	      @"$
alphanumeric_percentage	2U0*©Í?"X
punctuation_countsB*@

:	      ?

,	      @

-	      ?

.	      @"!
uppercase_percentage	Ÿ=yX®•?""
whitespace_percentage	œ˜S„•õƒ?"
list_item_indicator  "

word_count	     ¿V@"$
average_sentence_length	Ö|–≥YU.@"
vocabulary_density	Ÿ=yX®5Á?"
digit_percentage	¸©Ò“Mbp?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	     @"
relative_position	Æÿ_vO÷?2‘	
@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_480œ
Ò. After the three stages of training, we can use both sets of LoRAs and the LoRA fusion module for joint prediction, or we can use only one set of LoRAs for prediction. We refer to the latter as SingleLoRA. 3. 2 Multi - Directional Low - Rank Adaptation To retain the common knowledge learned during pre - training as much as possible, we freeze the embedding layer and the output layers during fine - tuning. We fine - tune only the feature interaction layer because it learns to identify crucial@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_48 Ö°(È§:standard_500_50" 
average_word_length	?∆ú@"$
potential_heading_score	öôôôôô…?"
sentence_count	      @"$
alphanumeric_percentage	öû^È?"H
punctuation_counts2*0

,	      @

-	      @

.	      @"!
uppercase_percentage	ÙlV}Æ¶?""
whitespace_percentage	ÁßËH.«?"
list_item_indicator  "

word_count	     ÄX@"$
average_sentence_length	æ¡&SU0@"
vocabulary_density	&S£í‰?"
digit_percentage	¸©Ò“Mbp?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	     @"
relative_position	†â∞·Èï÷?2˜	
@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_491“
Ùlayer because it learns to identify crucial feature interactions, which reflect the preference patterns in that domain. Previous studies indicate that during continuous learning via fine - tuning, a model may forget knowledge acquired in previous tasks, a phenomenon known as catastrophic forgetting [5, 21]. For MDR, this means the model could forget previously acquired domain - shared patterns, thereby impairing its performance in the target domain. To avoid catastrophic forgetting, we introduce@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_49 ø§(Æ®:standard_500_50" 
average_word_length	˘1ÊÆ%$@"$
potential_heading_score	öôôôôô…?"
sentence_count	      @"$
alphanumeric_percentage	Â–"€˘~Í?"h
punctuation_countsR*P

[	      ?

,	      @

-	       @

]	      ?

.	      @"!
uppercase_percentage	˙~jºtìà?""
whitespace_percentage	;ﬂOçón¬?"
list_item_indicator  "

word_count	     @U@"$
average_sentence_length	     @5@"
vocabulary_density	z6´>WÁ?"
digit_percentage	˙~jºtìx?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	     @@"
relative_position	WÏ/ª'◊?2´

@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_502”
ı. To avoid catastrophic forgetting, we introduce Low - Rank Adap - tation (LoRA). Hu et al. [11] claim that the change in weights during fine - tuning has a low intrinsic rank, making it possible to use low - rank matrix decomposition to approximate this change. Building upon their work, we enhanced the form of the low - rank matrix de - composition by adding scaling and offset terms, further boosting the expressiveness of the LoRA module. Specifically, for a pre - trained weight matrix ? ? 0 ‚àà@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_50 ˇß(„´:standard_500_50" 
average_word_length	*©–Dÿ@"$
potential_heading_score	        "
sentence_count	      @"$
alphanumeric_percentage	çónÉ¿Ë?"ö
punctuation_countsÉ*Ä

(	      ?

)	      ?

[	      ?

,	      @

-	      @

]	      ?

.	      @

?	       @"!
uppercase_percentage	}–≥Yıπö?""
whitespace_percentage	ÑûÕ™œ’∆?"
list_item_indicator  "

word_count	     ¿Y@"$
average_sentence_length	B>ËŸ¨*1@"
vocabulary_density	ëÌ|?5^Ê?"
digit_percentage	˙~jºtìx?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	     0@"
relative_position	IùÄ&¬Ü◊?2∆

@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_513ﬁ
ÄSpecifically, for a pre - trained weight matrix ? ? 0 ‚àà R ? ? √ó ? ?, we assume that its update during fine - tuning can be represented in a simple low - rank form: ? ? 0 + Œî ? ? = ? ? 0 + (? ? ‚äó ? ? ? ?), (7) where ? ? ‚àà R ? ? √ó ? ?, ? ? ‚àà R ? ? √ó ? ?, ? ? ‚àà R ? ?, and ? ? ‚â™ min (? ?, ? ?). ‚äó repre - sents the Hadamard product between ? ? ? ? and broadcasted coeffi - cient vector ? ?, such that the ? ? - th row of ? ? ? ? gets multiplied with ? ? - th element of ? ?. Similarly, for a pre -@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_51 ≤´(ËÆ:standard_500_50" 
average_word_length	Ô8EGr˘@"$
potential_heading_score	        "
sentence_count	      @"$
alphanumeric_percentage	HP¸s◊‡?"™
punctuation_countsì*ê

(	      @

)	      @

:	      ?

+	       @

,	      "@

-	       @

=	      ?

.	       @

?	      L@"!
uppercase_percentage	Ç‚«òªñê?""
whitespace_percentage	¶
F%u“?"
list_item_indicator  "

word_count	     ¿c@"$
average_sentence_length	!ÙlVUJ@"
vocabulary_density	[”º„Ÿ?"
digit_percentage	Ç‚«òªñÄ?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	     ‡~@"
relative_position	      ÿ?2ƒ

@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_524‹
˛with ? ? - th element of ? ?. Similarly, for a pre - trained bias ? ? 0 ‚àà R ? ?, we learn its update ? ?. For the forward passing ? ? = ? ? 0 ? ? + ? ? 0 in the pre - trained model, our modified version is: ? ? ‚Ä≤ = (? ? 0 + Œî ? ?) ? ? + (? ? 0 + ? ?) = (? ? 0 ? ? + ? ? 0) + (? ? ‚äó ? ? ? ?) ? ? + ? ?. (8) 2151 MultiLoRA: Multi - Directional Low - Rank Adaptation for Multi - Domain Recommendation CIKM ‚Äô 24, October 21 ‚Äì 25, 2024, Boise, ID, USA During fine - tuning, ? ? 0, ? ? 0 are frozen, while@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_52 ∫Æ(ı±:standard_500_50" 
average_word_length	7âA`Â–@"$
potential_heading_score	öôôôôô…?"
sentence_count	      @"$
alphanumeric_percentage	≠˙\m≈˛‡?"™
punctuation_countsì*ê

(	      @

)	      @

:	       @

+	      @

,	      &@

-	      @

=	      @

.	      @

?	      I@"!
uppercase_percentage	öwú¢#π¨?""
whitespace_percentage	q=
◊£p—?"
list_item_indicator  "

word_count	     `d@"$
average_sentence_length	     `D@"
vocabulary_density	'†â∞·ÈŸ?"
digit_percentage	‡-ê†®?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	     0@"
relative_position	∑bŸ=yÿ?2ñ

@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_535–
ÚUSA During fine - tuning, ? ? 0, ? ? 0 are frozen, while ? ?, ? ?, ? ?, ? ? are trainable parameters of the LoRA module. We use random Gaussian initial - ization for ? ?, ? ?, and zero for ? ?, ? ?. In this way, the update value (? ? ‚äó ? ? ? ?) ? ? + ? ? is zero at the beginning of fine - tuning. It is noteworthy that, due to the distribution shifts across do - mains, traditional normalization is insufficient, and we maintain domain - specific batch normalization layers for each domain (like@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_53 ≈±(õµ:standard_500_50" 
average_word_length	'¬ÜßWJ	@"$
potential_heading_score	öôôôôô…?"
sentence_count	      @"$
alphanumeric_percentage	ÃÓ…√B≠Â?"à
punctuation_countsr*p

(	       @

)	      ?

+	      ?

,	      *@

-	      @

.	      @

?	      >@"!
uppercase_percentage	AÇ‚«òªñ?""
whitespace_percentage	HP¸s◊ ?"
list_item_indicator  "

word_count	      _@"$
average_sentence_length	      ?@"
vocabulary_density	ú3¢¥7¯ﬁ?"
digit_percentage	¸©Ò“Mbp?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	      @"
relative_position	©–Dÿÿ?2Â

@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_546›
ˇbatch normalization layers for each domain (like STAR [27]). Assuming the sample comes from domain ? ?, we have ? ? (? ?) = DomNorm (? ? (? ?) 0 + ? ? (? ?) ? ?; ? ?, ? ?), DomNorm (‚Ñé; ? ?, ? ?) = ? ? (? ?) ? ? ‚äó ‚Ñé ‚àí ? ? ? ? ‚àö Ô∏É ? ? 2 ? ? + ? ? + ? ? (? ?) ? ?, (9) where ? ? (? ?) 0, ? ? (? ?) ? ? are the ? ? - th hidden layer outputs of the pre - trained model and the LoRA, and ? ? (? ?) ? ?, ? ? (? ?) ? ? are learnable parameters. Since natural domain division may assign non - identically dis@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_54 Ï¥(∑∏:standard_500_50" 
average_word_length	:#J{ÉØ @"$
potential_heading_score	öôôôôô…?"
sentence_count	      @"$
alphanumeric_percentage	^∫I+ﬂ?" 
punctuation_counts≥*∞

(	      *@

)	      *@

[	      ?

+	      @

;	       @

,	       @

]	      ?

=	       @

-	      @

.	       @

?	     ÄQ@"!
uppercase_percentage	}–≥Yıπö?""
whitespace_percentage	…væü/—?"
list_item_indicator  "

word_count	     ‡e@"$
average_sentence_length	ﬂ‡ì©*M@"
vocabulary_density	Ÿ=yX®5’?"
digit_percentage	˙~jºtìà?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	     0@"
relative_position	`vOjŸ?2ˆ	
@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_557—
Ûdomain division may assign non - identically dis - tributed samples to the same domain, and naive finer - grained do - main division exacerbates data sparsity, we manually choose a criterion and conduct an auxiliary domain division on the sample space. Under natural and auxiliary domain divisions, we train two sets of LoRAs pointing in different directions. 3. 3 LoRA Fusion LoRA, along with diffusion models [9, 22], find extensive applica - tions in the image generation field 1. One of the most@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_55 ä∏(Ùª:standard_500_50" 
average_word_length	˜_òLU@"$
potential_heading_score	öôôôôô…?"
sentence_count	      @"$
alphanumeric_percentage	6<ΩRñÈ?"h
punctuation_countsR*P

[	      ?

,	      @

-	      @

]	      ?

.	      @"!
uppercase_percentage	˙~jºtìò?""
whitespace_percentage	ì©ÇQI≈?"
list_item_indicator  "

word_count	      X@"$
average_sentence_length	3333333@"
vocabulary_density	µ7¯¬d™Ê?"
digit_percentage	˙~jºtìà?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	     0@"
relative_position	R'†â∞·Ÿ?2Û	
@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_568Œ
in the image generation field 1. One of the most interesting applications of LoRA is that multiple LoRAs can be weightedly integrated to generate images that carry multiple styles, greatly improving customizability [24, 36]. Inspired by this, we aim to combine the domain - specific LoRAs obtained under multiple domain divisions to collectively contribute to more accurate recommendation. For image generation, the com - bination weights are usually manually determined [23]. We instead design a@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_56 ≈ª(±ø:standard_500_50" 
average_word_length	È∑Øg@"$
potential_heading_score	öôôôôô…?"
sentence_count	      @"$
alphanumeric_percentage	46<ΩRÍ?"h
punctuation_countsR*P

[	       @

,	      @

]	       @

-	       @

.	      @"!
uppercase_percentage	¿Ïû<,‘ö?""
whitespace_percentage	HP¸√?"
list_item_indicator  "

word_count	     ¿U@"$
average_sentence_length	ffffff1@"
vocabulary_density	“ ﬁ	äÁ?"
digit_percentage	ˇ!˝ˆu‡å?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	      @"
relative_position		äcÓZ⁄?2Ñ

@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_579œ
Òmanually determined [23]. We instead design a LoRA fusion module to calculate the weights. We suppose a sample ? ? belongs to domain ? ? under the natural domain division and domain ? ? under the auxiliary domain division. Let the LoRA modules corresponding to domain ? ? and ? ? be ? ? ? ? ? ? ? ? ? ? and ? ? ? ? ? ? ? ? ? ?, containing domain - specific preference patterns from two different perspectives. We design a novel attention module to dynamically generate weights and blend these LoRA@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_57 Öø(›¬:standard_500_50" 
average_word_length	õUü´≠ÿ@"$
potential_heading_score	öôôôôô…?"
sentence_count	      @"$
alphanumeric_percentage	ÂÚ“o_Á?"x
punctuation_countsb*`

[	      ?

,	      ?

]	      ?

-	      ?

.	      @

?	      >@"!
uppercase_percentage	¿Ïû<,‘ö?""
whitespace_percentage	_)À«∫»?"
list_item_indicator  "

word_count	      Z@"$
average_sentence_length	ÕÃÃÃÃÃ4@"
vocabulary_density	]˛C˙ÌÎ‹?"
digit_percentage	¸©Ò“Mbp?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	     @"
relative_position	˚:pŒà“⁄?2‘

@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_58:‹
˛dynamically generate weights and blend these LoRA modules. As shown in Figure 5, we learn a LoRA fusion module at each layer of the backbone. The pre - trained model ‚Äô s output serves as the query vector, and the two LoRAs ‚Äô outputs serve as the key and value vectors. The output of the ? ? - th layer ‚Äô s LoRA fusion is: ? ? (? ?) ? ? ? ? ? ? ? ? = softmax (? ? (? ?) ? ? ? ? (? ?) ? ?) ? ? (? ?), ? ? (? ?) = ? ? (? ?) ? ? ? ? (? ?) 0, ? ? (? ?) = ? ? (? ?) ? ? [‚Ñé (? ?) ? ?, ‚Ñé (? ?) ? ?], ? ? (? ?@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_58 ≠¬(Å∆:standard_500_50" 
average_word_length	pŒà“ﬁ‡ @"$
potential_heading_score	        "
sentence_count	      @"$
alphanumeric_percentage	®∆K7âA‡?"∫
punctuation_counts£*†

(	      *@

)	      (@

:	      ?

[	      ?

,	      @

-	       @

=	      @

]	      ?

.	      @

?	     ÄP@"!
uppercase_percentage	¸©Ò“Mb†?""
whitespace_percentage	H·zÆG—?"
list_item_indicator  "

word_count	     †e@"$
average_sentence_length	     †E@"
vocabulary_density	J+á’?"
digit_percentage	¸©Ò“Mbp?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	     @@"
relative_position	≤ùÔß∆K€?2Ö
@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_59;›
ˇ= ? ? (? ?) ? ? [‚Ñé (? ?) ? ?, ‚Ñé (? ?) ? ?], ? ? (? ?) = [‚Ñé (? ?) ? ?, ‚Ñé (? ?) ? ?], (10) where ? ? ? ?, ? ? ? ? ‚àà R ? ? √ó ? ? are trainable parameters; ? ? 0, ? ? ? ?, ? ? ? ? are outputs of the pre - trained model, ? ? ? ? ? ? ? ? ? ?, and ? ? ? ? ? ? ? ? ? ?, respectively. It is noteworthy that, to maintain the parameter - efficiency of our 1 https: // civitai. com / Pretrained value softmax LoRA Fusion Add & Domain Norm LoRA LoRA query key Figure 5: Architecture of the LoRA fusion module. The@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_59 —≈(ñ…:standard_500_50" 
average_word_length	†/›$Ü@"$
potential_heading_score	öôôôôô…?"
sentence_count	      @"$
alphanumeric_percentage	R∏ÖÎQ‡?"Í
punctuation_counts”*–

&	      ?

(	      @

)	      @

,	      &@

-	       @

.	      @

/	      @

:	       @

[	       @

;	      ?

=	       @

]	       @

?	      Q@"!
uppercase_percentage	∫I+á¶?""
whitespace_percentage	L7âA`Â–?"
list_item_indicator  "

word_count	      e@"$
average_sentence_length	      E@"
vocabulary_density	Ã]K»=◊?"
digit_percentage	{ÆG·zÑ?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	     @@"
relative_position	•N@a√€?2˜	
@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_60<“
Ù5: Architecture of the LoRA fusion module. The out - puts of multiple LoRAs are aggregated through attention mechanism. For parameter - efficiency, we perform down - sampling on ? ? and ? ?, while identity transformation on ? ?. method, ? ? ? ?, ? ? ? ? are down - samplings that ? ? ‚â™ ? ?, and we apply identity transformation on the value vector. At last, we sum the results of the pre - trained model and the LoRA fusion module, passing it through a domain batch normalization layer used only by@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_60 È»(«Ã:standard_500_50" 
average_word_length	'1¨⁄@"$
potential_heading_score	öôôôôô…?"
sentence_count	      @"$
alphanumeric_percentage	MÑOØîÁ?"h
punctuation_countsR*P

:	      ?

,	      @

-	      @

.	      @

?	      2@"!
uppercase_percentage	}–≥Yıπö?""
whitespace_percentage	ï‘	h"l»?"
list_item_indicator  "

word_count	      [@"$
average_sentence_length	öôôôôô5@"
vocabulary_density	…væü/·?"
digit_percentage	¸©Ò“Mb`?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	      @"
relative_position	[±øÏû<‹?2–

@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_61=ÿ
˙a domain batch normalization layer used only by samples ‚àà ? ? ‚à© ? ?: ? ? (? ?) = DomNorm (? ? (? ?) 0 + ? ? (? ?) ? ? ? ? ? ? ? ?; ? ? ‚à© ? ?, ? ?). (11) By introducing the LoRA fusion module, we are able to integrate multi - directional domain - specific patterns, indirectly performing finer - grained domain division while avoiding proliferation of do - mains. This provides the prediction model with more information and alleviates the issue of non - identically distributed samples. 4 Experiments@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_61 ôÃ(Ûœ:standard_500_50" 
average_word_length	xú¢#π|@"$
potential_heading_score	öôôôôô…?"
sentence_count	      @"$
alphanumeric_percentage	jºtìÊ?"∫
punctuation_counts£*†

(	      @

)	      @

:	      ?

+	      ?

;	      ?

,	      @

=	      ?

-	      @

.	      @

?	      >@"!
uppercase_percentage	¸©Ò“Mbê?""
whitespace_percentage	J+á…?"
list_item_indicator  "

word_count	     @]@"$
average_sentence_length	     @=@"
vocabulary_density	µ¶y«·?"
digit_percentage	¸©Ò“MbÄ?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	     @@"
relative_position	NbX9¥‹?2¸	
@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_62>◊
˘non - identically distributed samples. 4 Experiments In this section, we conduct experiments on public real - world datasets to demonstrate the effectiveness of our proposed MultiLoRA and answer the following questions. ‚Ä¢ RQ 1: How does MultiLoRA perform compared with other state - of - the - art baselines, especially PEFT - based methods? ‚Ä¢ RQ 2: How do the modules of MultiLoRA affect its performance? ‚Ä¢ RQ 3: Is MultiLoRA paradigm compatible with different recom - mendation backbones? Does the@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_62 ¬œ(•”:standard_500_50" 
average_word_length	ÅïCã,@"$
potential_heading_score	öôôôôô…?"
sentence_count	      @"$
alphanumeric_percentage	gDioÖÈ?"h
punctuation_countsR*P

:	      @

,	       @

-	      @

.	       @

?	      @"!
uppercase_percentage	q¨ã€h∞?""
whitespace_percentage	º?∆ƒ?"
list_item_indicator  "

word_count	      W@"$
average_sentence_length	B>ËŸ¨™>@"
vocabulary_density	œ˜S„•õÊ?"
digit_percentage	¸©Ò“MbÄ?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	     0@"
relative_position	≈è1w-›?2ï

@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_63?œ
Òdifferent recom - mendation backbones? Does the model performance decline when integrated with MultiLoRA? ‚Ä¢ RQ 4: How to select a best auxiliary domain division? ‚Ä¢ RQ 5: Does the MultiLoRA paradigm possess high computation and storage efficiency? 4. 1 Experimental Settings 4. 1. 1 Datasets. Our experiments are conducted on three real - world datasets, namely MovieLens [7], Amazon [20], and Ali - CCP [19]. Amazon 5 - core is already segmented based on item category. Ali - CCP is divided by@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_63 ¯“(◊÷:standard_500_50" 
average_word_length	ÃHø}ù@"$
potential_heading_score	öôôôôô…?"
sentence_count	      @"$
alphanumeric_percentage	ïeàc]‹Ë?"à
punctuation_countsr*p

:	       @

[	      @

,	      @

-	      @

]	      @

.	      @

?	      @"!
uppercase_percentage	CÎ‚6∞?""
whitespace_percentage	ì©ÇQI≈?"
list_item_indicator  "

word_count	      Z@"$
average_sentence_length	üÕ™œ’∂-@"
vocabulary_density	¨Zd;Â?"
digit_percentage	F%uöõ?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	     –~@"
relative_position	˜u‡ú•›?2Ú	
@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_64@Õ
Ôbased on item category. Ali - CCP is divided by recommendation scenarios. Since MovieLens has 2152 CIKM ‚Äô 24, October 21 ‚Äì 25, 2024, Boise, ID, USA Zijian Song et al. Table 1: Statistics of datasets. Dataset MovieLens Amazon 5 - core Ali - CCP Train Ali - CCP Test Domain # 1 # 2 # 3 Clothing Beauty Health # 1 # 2 # 3 # 1 # 2 # 3 # Users 1325 2096 2619 39387 22363 38609 80704 1986 136406 47400 1156 73924 # Items 3429 3508 3595 23033 12101 18534 297046 109259 297733 291213 103080 295281 #@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_64 ™÷(Å⁄:standard_500_50" 
average_word_length	ÆG·z.@"$
potential_heading_score	        "
sentence_count	      @"$
alphanumeric_percentage	Ÿ=yX®Á?"h
punctuation_countsR*P

#	      (@

:	      ?

,	      @

-	      @

.	      @"!
uppercase_percentage	ŸŒ˜S„µ?""
whitespace_percentage	P¸s◊ ?"
list_item_indicator  "

word_count	     ¿[@"$
average_sentence_length	3333336@"
vocabulary_density	?∆‹µÑ|Ê?"
digit_percentage	⁄¨˙\m≈“?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	     ∞~@"
relative_position	Æÿ_vOﬁ?2â

@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_65A‘
ˆ18534 297046 109259 297733 291213 103080 295281 # Interaction 210747 395556 393906 278677 198502 346355 15885371 318873 26095661 16351580 321024 26344010 no explicit domain division, we follow the setting of HAMUR [16] to divide it into three domains based on user age. The statistics of sampled datasets are given in Table 1. ‚Ä¢ MovieLens 2 is collected from the well - known online movie recommendation platform, MovieLens, encompassing 7 user fea - tures and 2 item features. We randomly divided it@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_65 —Ÿ(¿›:standard_500_50" 
average_word_length	„6¿[‡@"$
potential_heading_score	öôôôôô…?"
sentence_count	      @"$
alphanumeric_percentage	È&1¨Í?"x
punctuation_countsb*`

#	      ?

[	      ?

,	      @

]	      ?

-	       @

.	      @"!
uppercase_percentage	9¥»væüö?""
whitespace_percentage	{ÆG·zƒ?"
list_item_indicator  "

word_count	     @V@"$
average_sentence_length	     @6@"
vocabulary_density	]‹FxÏ?"
digit_percentage	®∆K7âA–?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	     @@"
relative_position	†â∞·Èïﬁ?2È	
@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_66B‘
ˆtures and 2 item features. We randomly divided it into training, validation, and test sets with a ratio of 8: 1: 1. ‚Ä¢ Amazon 5 - core 3 is a dense subset from the Amazon 2014 dataset, ensuring each user and item have a minimum of 5 associated records. We choose three related natural domains. The time range of validation set is between March 1, 2014, and April 30, 2014, while the records before 1 st March 2014 and after 30 th April 2014 are counted as training and test data. Only user ID, item ID@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_66 ê›(¸‡:standard_500_50" 
average_word_length	|a2U0@"$
potential_heading_score	öôôôôô…?"
sentence_count	      @"$
alphanumeric_percentage	¢E∂Û˝‘Ë?"X
punctuation_countsB*@

:	       @

,	       @

-	      ?

.	      @"!
uppercase_percentage	yÈ&1¨ú?""
whitespace_percentage	R∏ÖÎQ»?"
list_item_indicator  "

word_count	     ¿[@"$
average_sentence_length	     Ä2@"
vocabulary_density	ˇ≤{Ú∞P„?"
digit_percentage	L7âA`Â∞?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	     @@"
relative_position	WÏ/ª'ﬂ?2Å

@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_67C‹
˛as training and test data. Only user ID, item ID, domain indicator, and ratings are used. Records with rating higher than 3 are considered as positive samples. ‚Ä¢ Ali - CCP 4 is gathered from real - world traffic logs of the recom - mendation system in Taobao, comprising 13 user features, 5 item features, 4 combination features, 1 context feature, and 2 label features (click and purchase). We employ ‚Äú click ‚Äù as the target label. The context feature ‚Äú 301 ‚Äù, indicating the recommendation scenario@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_67 Õ‡(∂‰:standard_500_50" 
average_word_length	k+ˆó›@"$
potential_heading_score	öôôôôô…?"
sentence_count	      @"$
alphanumeric_percentage	ˆ(\è¬ıË?"h
punctuation_countsR*P

(	      ?

)	      ?

,	      "@

-	      @

.	      @"!
uppercase_percentage	9¥»væüö?""
whitespace_percentage	jºtì∆?"
list_item_indicator  "

word_count	     ¿Y@"$
average_sentence_length	B>ËŸ¨*1@"
vocabulary_density	„6¿[ Â?"
digit_percentage	∫I+áñ?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	     @@"
relative_position	IùÄ&¬Üﬂ?2◊	
@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_68D“
Ù‚Äú 301 ‚Äù, indicating the recommendation scenario, naturally divides the dataset into three domains. Ad - ditionally, we randomly split the original test dataset in half to create the validation and test sets. The principle of auxiliary domain division is to exhibit maximum domain divergence. In the case of MovieLens and Ali - CCP, we utilize user gender as the criterion for auxiliary domain division. For Amazon 5 - core, we choose user activeness, namely whether they have posted more than ten@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_68 ä‰(ÚÁ:standard_500_50" 
average_word_length		û^)@"$
potential_heading_score	öôôôôô…?"
sentence_count	      @"$
alphanumeric_percentage	+áŸŒÈ?"H
punctuation_counts2*0

,	      @

-	      @

.	      @"!
uppercase_percentage	AÇ‚«òªñ?""
whitespace_percentage	È∑ØÁƒ?"
list_item_indicator  "

word_count	      W@"$
average_sentence_length	ffffff2@"
vocabulary_density	œ˜S„•õÊ?"
digit_percentage	Ç‚«òªñÄ?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	      @"
relative_position	      ‡?2È	
@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_69E‘
ˆ, namely whether they have posted more than ten reviews. Further discussion about auxiliary domain division is given in Section 4. 5. 4. 1. 2 Baseline Methods. To showcase the superiority of our pro - posed MultiLoRA, we compare it with following baseline methods: ‚Ä¢ Single is trained only on the target domain. ‚Ä¢ Mix is trained on data from all domains, with all parameters shared across these domains. ‚Ä¢ Fine - tune is initially trained on data from all domains and sub - sequently fully fine -@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_69 ƒÁ(´Î:standard_500_50" 
average_word_length	ı€◊ÅsÜ@"$
potential_heading_score	        "
sentence_count	      "@"$
alphanumeric_percentage	öû^)È?"X
punctuation_countsB*@

:	      ?

,	      @

-	      @

.	       @"!
uppercase_percentage	Ä∑@Ç‚«ò?""
whitespace_percentage	àÙ€◊Ås∆?"
list_item_indicator  "

word_count	     ¿X@"$
average_sentence_length	      &@"
vocabulary_density	≥Ísµ˚Â?"
digit_percentage	MÑOØÑ?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	      @"
relative_position	[±øÏû<‡?2ö

@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_70F‘
ˆfrom all domains and sub - sequently fully fine - tuned on the target domain. ‚Ä¢ Shared Bottom [1] is a multi - task model with shared bottom layers. In our implementation, the embedding layer is shared. ‚Ä¢ MMoE [18] is a multi - task model built upon the Shared Bottom architecture. It features a set of bottom networks known as ex - perts and trains a gating network to dynamically select experts for each domain. 2 https: // grouplens. org / datasets / movielens / 3 http: // jmcauley. ucsd. edu /@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_70 ˝Í(◊Ó:standard_500_50" 
average_word_length	â“ﬁ‡@"$
potential_heading_score	        "
sentence_count	      "@"$
alphanumeric_percentage	)\è¬ı(Ë?"à
punctuation_countsr*p

:	       @

[	       @

,	      ?

-	      @

]	       @

.	       @

/	       @"!
uppercase_percentage	˚:pŒàí?""
whitespace_percentage	…Â?§«?"
list_item_indicator  "

word_count	      [@"$
average_sentence_length	      (@"
vocabulary_density	åπk	˘†Â?"
digit_percentage	{ÆG·zÑ?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	      @"
relative_position	’	h"lx‡?2ã

@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_71G÷
¯org / datasets / movielens / 3 http: // jmcauley. ucsd. edu / data / amazon / 4 https: // tianchi. aliyun. com / dataset / 408 ‚Ä¢ STAR [27] is a multi - domain model employing a fully - connected network with a star topology. It consists of shared centralized parameters to capture general patterns and domain - specific pa - rameters to capture domain - specific patterns. ‚Ä¢ HAMUR [16] is a PEFT - based multi - domain sota method. It designs a pluggable module that can be seamlessly integrated into@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_71 ¶Ó(ÙÒ:standard_500_50" 
average_word_length	–DÿÙ @"$
potential_heading_score	öôôôôô…?"
sentence_count	       @"$
alphanumeric_percentage	V-≤ùÔÁ?"x
punctuation_countsb*`

:	       @

[	       @

]	       @

-	      @

.	      @

/	      (@"!
uppercase_percentage	∏ÖÎQ∏û?""
whitespace_percentage	Zd;ﬂOç«?"
list_item_indicator  "

word_count	     ÄZ@"$
average_sentence_length	     Ä*@"
vocabulary_density	∫I+á‰?"
digit_percentage	;ﬂOçóní?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	     @@"
relative_position	0ª'µ‡?2˜	
@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_72H“
Ùmodule that can be seamlessly integrated into various existing multi - domain backbone models. It learns a domain - shared hyper - network to dynamically generate the adapter parameters for each domain. ‚Ä¢ PLATE [29] is another PEFT - based multi - domain SOTA method. It conducts prompt tuning with two prompt modules, namely domain prompt and user prompt, to capture domain distinctions and conduct more accurate personalized recommendation. 4. 1. 3 Evaluation Metrics. We employ two commonly used@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_72 »Ò(≠ı:standard_500_50" 
average_word_length		˘†g≥™@"$
potential_heading_score	öôôôôô…?"
sentence_count	       @"$
alphanumeric_percentage	€ä˝e˜‰È?"h
punctuation_countsR*P

[	      ?

,	       @

-	      @

]	      ?

.	      @"!
uppercase_percentage	]m≈˛≤{¢?""
whitespace_percentage	]‹Fxƒ?"
list_item_indicator  "

word_count	     ÄV@"$
average_sentence_length	     Ä&@"
vocabulary_density	Å≈è1wÁ?"
digit_percentage	{ÆG·zÑ?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	      @"
relative_position	©–Dÿ‡?2π

@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_73I—
Û. 3 Evaluation Metrics. We employ two commonly used evalu - ation metrics, namely Area Under the ROC (AUC) and LogLoss, to assess CTR prediction model performance in our experiments. In general, a higher AUC value or a lower LogLoss at 0. 001 level indicates significant better recommendation performance [6, 29]. 4. 1. 4 Implementation Details. All hyper - parameters were tuned on the validation sets. Learning rate is chosen from {1 e - 3, 5 e - 4, 1 e - 4}. Weight decay is chosen from {1 e - 4,@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_73 ¸Ù(€¯:standard_500_50" 
average_word_length	ã˝e˜‰a@"$
potential_heading_score	        "
sentence_count	      &@"$
alphanumeric_percentage	=
◊£p=Ë?"™
punctuation_countsì*ê

(	      ?

)	      ?

[	      ?

{	       @

,	      @

-	      @

]	      ?

}	      ?

.	      $@"!
uppercase_percentage	˚\m≈˛≤´?""
whitespace_percentage	‘+e‚X«?"
list_item_indicator  "

word_count	     ¿\@"$
average_sentence_length	bX9¥Ë$@"
vocabulary_density	;pŒà“ﬁ‰?"
digit_percentage	˝áÙ€◊Å£?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	     0@"
relative_position	≈è1w-·?2©

@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_74J—
Û3, 5 e - 4, 1 e - 4}. Weight decay is chosen from {1 e - 4, 1 e - 5, 0}. Batch size is chosen from {512, 2048, 4096}. We use Adam optimizer with default settings, early stopping when AUC on validation set no longer increases for 5 epochs. The network structure hyper - parameters of all kinds of backbones are consistent, as outlined in Table 2. Table 2: The network structure hyper - parameters. Dataset MovieLens Amazon 5 - core Ali - CCP Embedding Size 16 16 16 Hidden Layer [256, 128] [1024, 512@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_74 ™¯(Ü¸:standard_500_50" 
average_word_length	∞Áå(m
@"$
potential_heading_score	öôôôôô…?"
sentence_count	      @"$
alphanumeric_percentage	Ó|?5^∫Á?"ö
punctuation_countsÉ*Ä

:	      ?

{	       @

[	       @

,	      $@

-	       @

}	      @

]	      ?

.	      @"!
uppercase_percentage	|Ú∞Pköß?""
whitespace_percentage	‡-ê†»?"
list_item_indicator  "

word_count	     Ä^@"$
average_sentence_length	À«∫∏m1@"
vocabulary_density	•Ω¡&„?"
digit_percentage	‹◊ÅsFî∂?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	     0@"
relative_position	~8gDi·?2Ñ

@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_75Kœ
ÒSize 16 16 16 Hidden Layer [256, 128] [1024, 512, 256, 64] [1024, 512, 512, 256, 256, 64, 64] LoRA ? ? [8, 8] [16, 16, 8, 8] [32, 32, 32, 16, 16, 8, 8] LoRA fusion ? ? [8, 8] [16, 16, 8, 8] [32, 32, 32, 16, 16, 8, 8] In the overall performance comparison, for simplicity, we choose MLP as the backbone network for Single, Mix, Fine - tune, HAMUR, PLATE, SingleLoRA, and MultiLoRA. The compatibility experi - ment of MultiLoRA with more backbone networks are given in Section 4. 4. 4. 2 Performance@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_75 Ÿ˚(§ˇ:standard_500_50" 
average_word_length	tµ˚Àn@"$
potential_heading_score	öôôôôô…?"
sentence_count	      @"$
alphanumeric_percentage	≈ ∞rhëÂ?"x
punctuation_countsb*`

[	      "@

,	      C@

]	      "@

-	       @

.	      @

?	      @"!
uppercase_percentage	ÖÎQ∏µ?""
whitespace_percentage	_)À«∫»?"
list_item_indicator  "

word_count	     †c@"$
average_sentence_length	ffffff?@"
vocabulary_density	¿Ïû<,‘÷?"
digit_percentage	óêz6´∆?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	     @"
relative_position	ŸŒ˜S„•·?2á

@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_76L“
Ùnetworks are given in Section 4. 4. 4. 2 Performance Comparison (RQ 1) To showcase the effectiveness of our proposed paradigm, we com - pare MultiLoRA, SingleLoRA and baseline methods on three real - world datasets, where SingleLoRA is the ablation version of Multi - LoRAwithout auxiliary domain division or LoRA fusion. We choose MLP as the backbone for simplicity. The overall performance is given in Table 3. We summarize the following observations: 2153 MultiLoRA: Multi - Directional Low - Rank@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_76 Û˛(€Ç:standard_500_50" 
average_word_length	»=õUﬂ@"$
potential_heading_score	öôôôôô…?"
sentence_count	      @"$
alphanumeric_percentage	Ó|?5^∫È?"x
punctuation_countsb*`

(	      ?

)	      ?

:	       @

,	      @

-	      @

.	      @"!
uppercase_percentage	{ÆG·z¥?""
whitespace_percentage	{ÆG·zƒ?"
list_item_indicator  "

word_count	     ÄW@"$
average_sentence_length	ñ!éuq€*@"
vocabulary_density	∞rhëÌ|Á?"
digit_percentage	{ÆG·zî?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	     @@"
relative_position	R'†â∞··?2¨

@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_77M‘
ˆ: 2153 MultiLoRA: Multi - Directional Low - Rank Adaptation for Multi - Domain Recommendation CIKM ‚Äô 24, October 21 ‚Äì 25, 2024, Boise, ID, USA Table 3: Overall performance of our proposed method and baselines on three real - world datasets. Boldface denotes the best result and underline indicates the best result among baselines. ‚òÖ represents significance level ? ? - value < 0. 05 of comparing MultiLoRA over the best baselines. Model / AUC MovieLens Amazon 5 - core Ali - CCP # 1 # 2 # 3 Total@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_77 ∞Ç(ÜÜ:standard_500_50" 
average_word_length	π¸áÙ€◊@"$
potential_heading_score	öôôôôô…?"
sentence_count	      @"$
alphanumeric_percentage	46<ΩRË?"ö
punctuation_countsÉ*Ä

#	      @

:	      @

,	      @

<	      ?

-	      @

.	      @

?	       @

/	      ?"!
uppercase_percentage	ê†¯1ÊÆµ?""
whitespace_percentage	¨Zd;«?"
list_item_indicator  "

word_count	     ÄY@"$
average_sentence_length	ffffff4@"
vocabulary_density	Ç‚«òªñÊ?"
digit_percentage	AÇ‚«òª¶?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	      @"
relative_position	Æÿ_vO‚?2”	
@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_78NŒ
AUC MovieLens Amazon 5 - core Ali - CCP # 1 # 2 # 3 Total Clothing Beauty Health Total # 1 # 2 # 3 Total Single 0. 7980 0. 7963 0. 7965 0. 7969 0. 6022 0. 5682 0. 5964 0. 5901 0. 5843 0. 5363 0. 5842 0. 5694 Mix 0. 8187 0. 8117 0. 8015 0. 8105 0. 6158 0. 6197 0. 6325 0. 6243 0. 6176 0. 5908 0. 6136 0. 6153 Fine - tune 0. 8147 0. 8135 0. 7979 0. 8077 0. 6195 0. 5946 0. 6244 0. 6150 0. 6208 0. 5901 0. 6194 0. 6178 Shared Bottom 0. 8077 0. 8182 0. 8025 0. 8102 0. 6059 0. 5891 0. 6078 0. 6025 0.@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_78 ’Ö(åâ:standard_500_50" 
average_word_length	s◊ÚAœ@"$
potential_heading_score	        "
sentence_count	     ÄF@"$
alphanumeric_percentage	h"lxz•‰?"H
punctuation_counts2*0

#	      @

-	      @

.	     ÄF@"!
uppercase_percentage	Ÿ=yX®•?""
whitespace_percentage	∞rhëÌ|œ?"
list_item_indicator  "

word_count	      e@"$
average_sentence_length	 AÒcÃ›@"
vocabulary_density	0L¶
F%Ÿ?"
digit_percentage	$(~åπk›?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	      @"
relative_position	'1¨Z‚?2Ø	
@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_79O 
Ï. 8182 0. 8025 0. 8102 0. 6059 0. 5891 0. 6078 0. 6025 0. 6202 0. 5870 0. 6174 0. 6170 MMoE 0. 8088 0. 8120 0. 8045 0. 8097 0. 6080 0. 5867 0. 6213 0. 6089 0. 6255 0. 5822 0. 6203 0. 6173 STAR 0. 8065 0. 8064 0. 8021 0. 8055 0. 6117 0. 5853 0. 6234 0. 6108 0. 6253 0. 5887 0. 6208 0. 6198 HAMUR 0. 8130 0. 8159 0. 8067 0. 8121 0. 6120 0. 5861 0. 6311 0. 6148 0. 6210 0. 6062 0. 6216 0. 6210 PLATE 0. 8134 0. 8178 0. 8063 0. 8124 0. 6182 0. 6223 0. 6426 0. 6296 0. 6229 0. 6055 0. 6234 0. 6220@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_79 €à(ãå:standard_500_50" 
average_word_length	ÈH.ˇ!} @"$
potential_heading_score	öôôôôô…?"
sentence_count	      N@"$
alphanumeric_percentage	_òLåJ‰?"(
punctuation_counts*

.	     ÄM@"!
uppercase_percentage	e‚X∑°?""
whitespace_percentage	(µ¶yœ?"
list_item_indicator  "

word_count	     Äf@"$
average_sentence_length	      @"
vocabulary_density	ffffff÷?"
digit_percentage	ﬁ	ä„?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	     ¿~@"
relative_position	Ç‚«òªñ‚?2˙	
@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_80PÂ
á0. 6223 0. 6426 0. 6296 0. 6229 0. 6055 0. 6234 0. 6220 SingleLoRA 0. 8212 0. 8189 0. 8061 0. 8160 0. 6134 0. 6134 0. 6290 0. 6198 0. 6225 0. 6065 0. 6224 0. 6212 MultiLoRA 0. 8223 ‚òÖ 0. 8192 ‚òÖ 0. 8097 ‚òÖ 0. 8170 ‚òÖ 0. 6297 ‚òÖ 0. 6408 ‚òÖ 0. 6542 ‚òÖ 0. 6429 ‚òÖ 0. 6324 ‚òÖ 0. 6065 0. 6245 ‚òÖ 0. 6231 ‚òÖ Model / LogLoss MovieLens Amazon 5 - core Ali - CCP # 1 # 2 # 3 Total Clothing Beauty Health Total # 1 # 2 # 3 Total Single 0. 5387 0. 5408 0. 5326 0. 6377 0. 5442 0. 5946 0. 4581 0. 5303 0. 1711 0. 2599 0.@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_80 ‹ã(åè:standard_500_50" 
average_word_length	-CÎ‚∂@"$
potential_heading_score	        "
sentence_count	      E@"$
alphanumeric_percentage	Ö|–≥Yı„?"X
punctuation_countsB*@

#	      @

-	       @

.	      E@

/	      ?"!
uppercase_percentage	˛C˙ÌÎ¿©?""
whitespace_percentage	jºtì–?"
list_item_indicator "

word_count	      e@"$
average_sentence_length	      @"
vocabulary_density	      ÿ?"
digit_percentage	 2ƒ±.n€?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	     @"
relative_position	˚:pŒà“‚?2»	
@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_81Q”
ı. 6377 0. 5442 0. 5946 0. 4581 0. 5303 0. 1711 0. 2599 0. 1630 0. 1928 Mix 0. 5188 0. 5215 0. 5215 0. 5207 0. 5202 ‚òÖ 0. 4832 0. 4383 0. 4772 0. 1662 0. 1806 0. 1601 0. 1626 Fine - tune 0. 5198 0. 5179 0. 5296 0. 5229 0. 5320 0. 5132 0. 4403 0. 4912 0. 1660 0. 1837 0. 1597 0. 1629 Shared Bottom 0. 5294 0. 5139 0. 5237 0. 5210 0. 5563 0. 5310 0. 4615 0. 5114 0. 1677 0. 1833 0. 1595 0. 1628 MMoE 0. 5244 0. 5148 0. 5209 0. 5207 0. 5498 0. 5351 0. 4583 0. 5105 0. 1671 0. 1856 0. 1592 0. 1632 STAR 0.@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_81 €é(ëí:standard_500_50" 
average_word_length	Æÿ_vOû @"$
potential_heading_score	        "
sentence_count	      M@"$
alphanumeric_percentage	N—ë\˛C‰?"8
punctuation_counts"* 

-	      ?

.	      M@"!
uppercase_percentage	∫I+áñ?""
whitespace_percentage	Zd;ﬂOçœ?"
list_item_indicator  "

word_count	     †f@"$
average_sentence_length	Å≈è1˜@"
vocabulary_density	K»=õU◊?"
digit_percentage	ı€◊ÅsF‚?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	     0@"
relative_position	WÏ/ª'„?2º	
@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_82R◊
˘0. 4583 0. 5105 0. 1671 0. 1856 0. 1592 0. 1632 STAR 0. 5257 0. 5196 0. 5218 0. 5224 0. 5523 0. 5367 0. 4567 0. 5114 0. 1673 0. 1837 0. 1589 0. 1628 HAMUR 0. 5281 0. 5188 0. 5199 0. 5212 0. 5507 0. 5227 0. 4481 0. 5019 0. 1653 0. 1779 0. 1653 0. 1617 PLATE 0. 5201 0. 5155 0. 5223 0. 5198 0. 5338 0. 4833 0. 4391 0. 4806 0. 1661 0. 1786 0. 1579 0. 1615 SingleLoRA 0. 5246 0. 5167 0. 5210 0. 5201 0. 5475 0. 5105 0. 4444 0. 4948 0. 1665 0. 1781 0. 1568 ‚òÖ 0. 1601 MultiLoRA 0. 5109 ‚òÖ 0. 5114 ‚òÖ 0. 5187@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_82 ·ë(óï:standard_500_50" 
average_word_length	¢¥7¯¬‰ @"$
potential_heading_score	öôôôôô…?"
sentence_count	      M@"$
alphanumeric_percentage	¢¥7¯¬d‰?"(
punctuation_counts*

.	     ÄL@"!
uppercase_percentage	‹◊ÅsFî¶?""
whitespace_percentage	
◊£p=
œ?"
list_item_indicator "

word_count	     `f@"$
average_sentence_length	TR'†â∞@"
vocabulary_density	‰ÉûÕ™œ’?"
digit_percentage	ı€◊ÅsF‚?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	     0@"
relative_position	–DÿÙJ„?2Ü

@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_83S·
É0. 1568 ‚òÖ 0. 1601 MultiLoRA 0. 5109 ‚òÖ 0. 5114 ‚òÖ 0. 5187 ‚òÖ 0. 5147 ‚òÖ 0. 5357 0. 4817 ‚òÖ 0. 4336 ‚òÖ 0. 4771 0. 1631 ‚òÖ 0. 1754 ‚òÖ 0. 1575 0. 1587 ‚òÖ ‚Ä¢ Fine - tune shows significant performance decline in most cases compared to Mix, showing obvious catastrophic forgetting. This is particularly evident in the Ali - CCP dataset: Fine - tune signif - icantly outperforms Mix in domains # 1 and # 3, but its perfor - mance regresses on the much smaller domain # 2, indicating a potential overfitting and@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_83 Èî(≤ò:standard_500_50" 
average_word_length	xú¢#π|
@"$
potential_heading_score	öôôôôô…?"
sentence_count	      0@"$
alphanumeric_percentage	ñ!éuqÁ?"h
punctuation_countsR*P

#	      @

:	      ?

,	      @

-	      @

.	      .@"!
uppercase_percentage	F%uöõ?""
whitespace_percentage	›µÑ|–≥…?"
list_item_indicator "

word_count	     ¿]@"$
average_sentence_length	     ¿@"
vocabulary_density	õÊßËH‚?"
digit_percentage	–DÿÙ¬?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	     –~@"
relative_position	+ˆó›ìá„?2ˆ	
@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_84T—
Ûdomain # 2, indicating a potential overfitting and forgetting of the common knowledge acquired during pre - training. ‚Ä¢ There are two baselines that employ PEFT techniques: PLATE based on prompt tuning and HAMUR based on adapter. Both methods exhibit inferior performance on the MovieLens dataset compared to the larger - scale Amazon and Ali - CCP datasets. This discrepancy arises because HAMUR ‚Äô s dynamically generated adapter only engages with one layer of the model, limiting the knowledge@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_84 Çò(Áõ:standard_500_50" 
average_word_length	…Â?§ü@"$
potential_heading_score	öôôôôô…?"
sentence_count	      @"$
alphanumeric_percentage	X 2ƒ±.Í?"h
punctuation_countsR*P

#	      ?

:	      ?

,	       @

-	      @

.	      @"!
uppercase_percentage	‚X∑— Æ?""
whitespace_percentage	±øÏû<,ƒ?"
list_item_indicator  "

word_count	     @U@"$
average_sentence_length	     @5@"
vocabulary_density	b°÷4Ô8È?"
digit_percentage	¸©Ò“Mb`?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	     ~@"
relative_position	•N@a√„?2Ÿ	
@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_85U‘
ˆone layer of the model, limiting the knowledge expression of the hyper - network. Meanwhile, PLATE only fine - tunes the prefix of the input and the linear interaction layer, resulting in limited expressive capacity. Both methods heav - ily rely on the pre - trained model ‚Äô s knowledge. In contrast, LoRA can be involved in the update of all parameters, making it less dependent on the original model. ‚Ä¢ Our proposedMultiLoRA outperforms all baselines across al - most all domains. This is because@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_85 ∫õ(°ü:standard_500_50" 
average_word_length	ÙlV}n@"$
potential_heading_score	öôôôôô…?"
sentence_count	      @"$
alphanumeric_percentage	ﬂ‡ì©ÇÈ?"H
punctuation_counts2*0

,	      @

-	      @

.	      @"!
uppercase_percentage	ΩRñ!éu°?""
whitespace_percentage	’Áj+ˆó≈?"
list_item_indicator  "

word_count	     ¿W@"$
average_sentence_length	{É/L¶™/@"
vocabulary_density	jMÛéÂ?"
digit_percentage	        "
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	      @"
relative_position	      ‰?2Ù	
@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_86Vœ
Òacross al - most all domains. This is because we not only use LoRA for fine - tuning, but also introduce auxiliary domain division. By combining the predictions of two sets of LoRAs, we indirectly yet effectively achieve finer - grained domain division, mitigating the adverse effects of non - identically distributed samples. 4. 3 Ablation Study (RQ 2) Table 3 have already included several ablation experiments. By comparingMix, Fine - tune and SingleLoRA, we demonstrate that full fine - tuning@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_86 ˆû(Ÿ¢:standard_500_50" 
average_word_length	:#J{ÉÔ@"$
potential_heading_score	öôôôôô…?"
sentence_count	      @"$
alphanumeric_percentage	TR'†â∞È?"h
punctuation_countsR*P

(	      ?

)	      ?

,	      @

-	      @

.	      @"!
uppercase_percentage	æ0ô*ï§?""
whitespace_percentage	œ˜S„•õƒ?"
list_item_indicator  "

word_count	     @W@"$
average_sentence_length	      /@"
vocabulary_density	v‡ú•ΩÁ?"
digit_percentage	¸©Ò“MbÄ?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	     @"
relative_position	[±øÏû<‰?2”	
@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_87WŒ
SingleLoRA, we demonstrate that full fine - tuning leads to catastrophic forgetting in some domains, and employing LoRA alleviates this issue. The fact thatMultiLoRA significantly outperforms SingleLoRA in most cases indicates that usingmultiple domain divisionsmitigates data distribution inconsis - tencies. Here, we conduct additional experiments. Let MultiLoRA - avg represent the variant of MultiLoRA where two LoRAs are averaged, andMultiLoRA - add represent the variant where two LoRAs are@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_87 ™¢(ì¶:standard_500_50" 
average_word_length	IùÄ&¬Ü@"$
potential_heading_score	öôôôôô…?"
sentence_count	      @"$
alphanumeric_percentage	È∑ØÁÍ?"H
punctuation_counts2*0

,	      @

-	      @

.	      @"!
uppercase_percentage	†â∞·Èï≤?""
whitespace_percentage	x$(~å¡?"
list_item_indicator  "

word_count	      S@"$
average_sentence_length	      3@"
vocabulary_density	k+ˆó›ìÁ?"
digit_percentage	        "
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	      @"
relative_position	’	h"lx‰?2©

@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_88X—
Û- add represent the variant where two LoRAs are simply added. We compare their performance withMul - tiLoRA to illustrate the effectiveness of the LoRA fusion module. The results are shown in Table 4. 4. 4 Compatibility with Backbone Models (RQ 3) The MultiLoRA paradigm we propose is a training framework that, theoretically, can be combined with most CTR backbones to derive corresponding multi - domain models. We select three widely used methods, namely Wide & Deep [3], DCN [28], and DeepFM [6]@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_88 Ê•(–©:standard_500_50" 
average_word_length	˚ÀÓ…É@"$
potential_heading_score	        "
sentence_count	      @"$
alphanumeric_percentage	ioÖ…TÈ?"ö
punctuation_countsÉ*Ä

&	      ?

(	      ?

)	      ?

[	      @

,	      @

-	      @

]	      @

.	      @"!
uppercase_percentage	¸s◊Ú±?""
whitespace_percentage	dÃ]K»≈?"
list_item_indicator "

word_count	     @Y@"$
average_sentence_length	æ¡&S’0@"
vocabulary_density	ÑOØîeË?"
digit_percentage	¸©Ò“Mbê?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	     0@"
relative_position	0ª'µ‰?2ú

@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_89Y÷
¯, namely Wide & Deep [3], DCN [28], and DeepFM [6]. We integrate MultiLoRA with them and observe the impact on model performance. For each backbone, we compare three methods: Fine - tune, SingleLoRA, and MultiLoRA. The experimental results are shown in Table 5. We notice that, with our proposed MultiLoRA, the performance of all CTR back - bones is significantly improved compared to full fine - tuning. This 2154 CIKM ‚Äô 24, October 21 ‚Äì 25, 2024, Boise, ID, USA Zijian Song et al. Table 4: Ablation@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_89 °©(ã≠:standard_500_50" 
average_word_length	$óˇê~˚@"$
potential_heading_score	öôôôôô…?"
sentence_count	      @"$
alphanumeric_percentage	R∏ÖÎQË?"à
punctuation_countsr*p

&	      ?

:	       @

[	      @

,	      *@

]	      @

-	      @

.	      @"!
uppercase_percentage	J+áπ?""
whitespace_percentage	É¿ °E∆?"
list_item_indicator  "

word_count	     Ä\@"$
average_sentence_length	öwú¢#I0@"
vocabulary_density	#€˘~jºÊ?"
digit_percentage	{ÆG·z§?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	     @@"
relative_position	©–Dÿ‰?2î

@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_90Zﬂ
Å, ID, USA Zijian Song et al. Table 4: Ablation study of the LoRA fusion module. Model / AUC MovieLens Amazon 5 - core Ali - CCP # 1 # 2 # 3 Total Clothing Beauty Health Total # 1 # 2 # 3 Total MultiLoRA - add 0. 7972 0. 7992 0. 7890 0. 7958 0. 5987 0. 5678 0. 5924 0. 5870 0. 5844 0. 5467 0. 5795 0. 5713 MultiLoRA - avg 0. 8156 0. 8134 0. 8019 0. 8105 0. 6113 0. 6068 0. 6271 0. 6150 0. 6235 0. 6012 0. 6178 0. 6134 MultiLoRA 0. 8223 ‚òÖ 0. 8192 ‚òÖ 0. 8097 ‚òÖ 0. 8170 ‚òÖ 0. 6297 ‚òÖ 0. 6408 ‚òÖ 0. 6542 ‚òÖ 0.@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_90 ﬁ¨(ö∞:standard_500_50" 
average_word_length	köwú¢#@"$
potential_heading_score	        "
sentence_count	      A@"$
alphanumeric_percentage	ÙlV}Æ∂‰?"x
punctuation_countsb*`

#	      @

:	      ?

,	       @

-	      @

.	      A@

/	      ?"!
uppercase_percentage	Ï/ª'µ?""
whitespace_percentage	
◊£p=
œ?"
list_item_indicator  "

word_count	     ¿c@"$
average_sentence_length	f˜‰a°ñ@"
vocabulary_density	|a2U0*›?"
digit_percentage	(~åπk	’?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	     0@"
relative_position	≈è1w-Â?2Ö

@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_91[
í0. 8192 ‚òÖ 0. 8097 ‚òÖ 0. 8170 ‚òÖ 0. 6297 ‚òÖ 0. 6408 ‚òÖ 0. 6542 ‚òÖ 0. 6429 ‚òÖ 0. 6324 ‚òÖ 0. 6065 ‚òÖ 0. 6245 ‚òÖ 0. 6231 ‚òÖ Model / LogLoss MovieLens Amazon 5 - core Ali - CCP # 1 # 2 # 3 Total Clothing Beauty Health Total # 1 # 2 # 3 Total MultiLoRA - add 0. 5408 0. 5477 0. 5308 0. 5697 0. 5470 0. 5947 0. 4596 0. 5339 0. 1709 0. 2606 0. 1620 0. 1938 MultiLoRA - avg 0. 5265 0. 5217 0. 5230 0. 5238 0. 5466 0. 5104 0. 4470 0. 5007 0. 1688 0. 1810 0. 1593 0. 1677 MultiLoRA 0. 5109 ‚òÖ 0. 5114 ‚òÖ 0. 5206 ‚òÖ 0. 5153 ‚òÖ@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_91 ÈØ(ñ≥:standard_500_50" 
average_word_length	-CÎ‚∂@"$
potential_heading_score	        "
sentence_count	      D@"$
alphanumeric_percentage	ŸŒ˜S„•„?"X
punctuation_countsB*@

#	      @

-	      @

.	     ÄC@

/	      ?"!
uppercase_percentage	yÈ&1¨¨?""
whitespace_percentage	¸©Ò“Mb–?"
list_item_indicator "

word_count	      e@"$
average_sentence_length	ÕÃÃÃÃÃ@"
vocabulary_density	      ÿ?"
digit_percentage	B`Â–"€Ÿ?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	     @@"
relative_position	~8gDiÂ?2∞

@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_92\Í
å0. 1677 MultiLoRA 0. 5109 ‚òÖ 0. 5114 ‚òÖ 0. 5206 ‚òÖ 0. 5153 ‚òÖ 0. 5357 ‚òÖ 0. 4817 ‚òÖ 0. 4336 ‚òÖ 0. 4771 ‚òÖ 0. 1631 ‚òÖ 0. 1754 ‚òÖ 0. 1575 ‚òÖ 0. 1587 ‚òÖ Table 5: The results (AUC) of compatibility experiments on different recommendation backbones. Backbone Paradigm MovieLens Amazon 5 - core Ali - CCP # 1 # 2 # 3 Total Clothing Beauty Health Total # 1 # 2 # 3 Total Wide & Deep Fine - tune 0. 8197 0. 8181 0. 7972 0. 8107 0. 6199 0. 5971 0. 6268 0. 6163 0. 6238 0. 5761 0. 6246 0. 6165 SingleLoRA 0. 8245 0. 8227 0@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_92 Á≤(•∂:standard_500_50" 
average_word_length	ÉQIùÄ&@"$
potential_heading_score	öôôôôô…?"
sentence_count	      =@"$
alphanumeric_percentage	Zd;ﬂOÂ?"à
punctuation_countsr*p

#	      @

&	      ?

(	      ?

)	      ?

:	      ?

-	      @

.	      <@"!
uppercase_percentage	X9¥»væØ?""
whitespace_percentage	…væü/Õ?"
list_item_indicator "

word_count	     @b@"$
average_sentence_length	ŸŒ˜S#@"
vocabulary_density	‰ÉûÕ™œ›?"
digit_percentage	;ﬂOçón“?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	     @@"
relative_position	ŸŒ˜S„•Â?2‡	
@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_93]Î
ç0. 5761 0. 6246 0. 6165 SingleLoRA 0. 8245 0. 8227 0. 8057 0. 8182 0. 6149 0. 6160 0. 6268 0. 6204 0. 6248 0. 6010 0. 6212 0. 6194 MultiLoRA 0. 8267 ‚òÖ 0. 8240 ‚òÖ 0. 8092 ‚òÖ 0. 8200 ‚òÖ 0. 6305 ‚òÖ 0. 6401 ‚òÖ 0. 6497 ‚òÖ 0. 6373 ‚òÖ 0. 6356 ‚òÖ 0. 6026 ‚òÖ 0. 6265 ‚òÖ 0. 6241 ‚òÖ DCN Fine - tune 0. 8189 0. 8147 0. 7985 0. 8095 0. 6209 0. 5981 0. 6267 0. 6173 0. 6228 0. 5947 0. 6213 0. 6203 SingleLoRA 0. 8247 0. 8188 0. 8069 0. 8169 0. 6146 0. 6147 0. 6293 0. 6211 0. 6234 0. 6075 0. 6227 0. 6222 MultiLoRA 0. 8233 ‚òÖ@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_93 ˜µ(¶π:standard_500_50" 
average_word_length	ﬁqäé‰Ú @"$
potential_heading_score	        "
sentence_count	     ÄJ@"$
alphanumeric_percentage	∆‹µÑ|–„?"8
punctuation_counts"* 

-	      ?

.	      J@"!
uppercase_percentage	ú¢#π¸á§?""
whitespace_percentage	+áŸŒœ?"
list_item_indicator "

word_count	      f@"$
average_sentence_length	÷≈m4Ä∑
@"
vocabulary_density	Áå(Ì÷?"
digit_percentage	yÈ&1¨‡?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	     0@"
relative_position	R'†â∞·Â?2	
@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_94^˚
ù6211 0. 6234 0. 6075 0. 6227 0. 6222 MultiLoRA 0. 8233 ‚òÖ 0. 8201 ‚òÖ 0. 8090 ‚òÖ 0. 8182 ‚òÖ 0. 6293 ‚òÖ 0. 6402 ‚òÖ 0. 6548 ‚òÖ 0. 6399 ‚òÖ 0. 6337 ‚òÖ 0. 6085 ‚òÖ 0. 6223 0. 6236 ‚òÖ DeepFM Fine - tune 0. 8258 0. 8201 0. 8008 0. 8146 0. 6223 0. 5864 0. 6255 0. 6127 0. 6223 0. 5878 0. 6134 0. 6151 SingleLoRA 0. 8307 0. 8245 ‚òÖ 0. 8067 0. 8214 0. 6176 0. 6104 0. 6280 0. 6199 0. 6242 0. 6021 0. 6238 0. 6196 MultiLoRA 0. 8333 ‚òÖ 0. 8245 ‚òÖ 0. 8110 ‚òÖ 0. 8229 ‚òÖ 0. 6277 ‚òÖ 0. 6302 ‚òÖ 0. 6382 ‚òÖ 0. 6302 ‚òÖ 0. 6378 ‚òÖ 0. 6022 0.@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_94 ı∏(ûº:standard_500_50" 
average_word_length	ò›ìáÖZ @"$
potential_heading_score	        "
sentence_count	     ÄI@"$
alphanumeric_percentage	Œà“ﬁ‡„?"8
punctuation_counts"* 

-	      ?

.	     ÄI@"!
uppercase_percentage	8gDio†?""
whitespace_percentage	%ÅïCã–?"
list_item_indicator  "

word_count	     †f@"$
average_sentence_length	1¨Zd@"
vocabulary_density	HP¸s”?"
digit_percentage	'1¨Z‡?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	     0@"
relative_position	Æÿ_vOÊ?2∏

@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_95_‡
Ç0. 6277 ‚òÖ 0. 6302 ‚òÖ 0. 6382 ‚òÖ 0. 6302 ‚òÖ 0. 6378 ‚òÖ 0. 6022 0. 6316 ‚òÖ 0. 6257 ‚òÖ Table 6: The performance change (in terms of AUC) of Multi - LoRA when selecting different auxiliary domain divisions. Overall, greater divergence in preference patterns among auxiliary domains, given the natural domain division, leads to better model performance. Criterion # domain Ali - CCP # 1 # 2 # 3 Total User Gender 3 val 0. 6336 0. 6069 0. 6243 0. 6235 test 0. 6324 0. 6065 0. 6245 0. 6231 None (SingleLoRA) N / A@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_95 Óª(¬ø:standard_500_50" 
average_word_length	ˆ(\è¬u	@"$
potential_heading_score	öôôôôô…?"
sentence_count	      3@"$
alphanumeric_percentage	¥»væüÁ?"ö
punctuation_countsÉ*Ä

#	      @

(	       @

)	       @

:	      ?

,	      @

-	       @

.	      2@

/	      ?"!
uppercase_percentage	öôôôôô©?""
whitespace_percentage	Ú“MbX…?"
list_item_indicator "

word_count	     Ä_@"$
average_sentence_length	IùÄ&¬Ü@"
vocabulary_density	õÊßËH‚?"
digit_percentage	√ı(\è¬≈?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	     @@"
relative_position	'1¨ZÊ?2∞

@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_96`ã
≠0. 6324 0. 6065 0. 6245 0. 6231 None (SingleLoRA) N / A val ‚àí 0. 0091 ‚àí 0. 0011 ‚àí 0. 0029 ‚àí 0. 0017 test ‚àí 0. 0099 0 ‚àí 0. 0021 ‚àí 0. 0019 User Occupation 3 val + 0. 0007 ‚àí 0. 0015 ‚àí 0. 0011 ‚àí 0. 0001 test + 0. 0013 ‚àí 0. 0009 ‚àí 0. 0005 ‚àí 0. 0004 User Age 4 val ‚àí 0. 0045 ‚àí 0. 0027 ‚àí 0. 0013 ‚àí 0. 0029 test ‚àí 0. 0036 ‚àí 0. 0023 + 0. 0008 ‚àí 0. 0017 User Geography 5 val ‚àí 0. 0054 ‚àí 0. 0045 ‚àí 0. 0033 ‚àí 0. 0041 test ‚àí 0. 0067 ‚àí 0. 0033 ‚àí 0. 0028 ‚àí 0. 0035 demonstrates MultiLoRA ‚Äô s outstanding ability to@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_96 íø(æ¬:standard_500_50" 
average_word_length	ßy«):í@"$
potential_heading_score	öôôôôô…?"
sentence_count	      B@"$
alphanumeric_percentage	"lxz•,„?"h
punctuation_countsR*P

(	      ?

)	      ?

+	      @

.	     ÄA@

/	      ?"!
uppercase_percentage	ΩRñ!éu°?""
whitespace_percentage	yÈ&1¨–?"
list_item_indicator "

word_count	      e@"$
average_sentence_length		˘†g≥™@"
vocabulary_density	ioÖ…T’?"
digit_percentage	–DÿÙ÷?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	     0@"
relative_position	Ç‚«òªñÊ?2˜	
@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_97a“
Ùdemonstrates MultiLoRA ‚Äô s outstanding ability to adapt to the target domain, preserving common knowledge acquired in pre - training and preventing catastrophic forgetting. Additionally, MultiLoRA exhibits compatibility with various backbones, making it easier to apply and deploy in various application scenarios. 4. 5 Choice of Auxiliary Domain Division (RQ 4) One crucial step for MultiLoRA is introducing auxiliary domain division. In this subsection, we examined how different auxiliary domain@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_97 ê¬(˚≈:standard_500_50" 
average_word_length	33333s@"$
potential_heading_score	öôôôôô…?"
sentence_count	      @"$
alphanumeric_percentage		û^)ÀÍ?"h
punctuation_countsR*P

(	      ?

)	      ?

,	      @

-	      ?

.	      @"!
uppercase_percentage	^K»=õ•?""
whitespace_percentage	v‡ú•Ω¡?"
list_item_indicator  "

word_count	      T@"$
average_sentence_length	      0@"
vocabulary_density	333333È?"
digit_percentage	˙~jºtìx?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	      @"
relative_position	˚:pŒà“Ê?2‘	
@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_98bœ
Ò, we examined how different auxiliary domain division criteria affect model performance on the Ali - CCP dataset. The Detailed results are presented in Table 6. We conduct evaluation on both the validation and test sets. It is noteworthy that, the results on these two sets are highly consistent. This consistency allows us to confidently select the best auxiliary domain division based on offline tests, which is very beneficial for industrial applications. We also notice that the same auxiliary@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_98 –≈(æ…:standard_500_50" 
average_word_length	Ã]K»}@"$
potential_heading_score	öôôôôô…?"
sentence_count	      @"$
alphanumeric_percentage	ÑOØîeÍ?"H
punctuation_counts2*0

,	      @

-	      ?

.	      @"!
uppercase_percentage	˛e˜‰a°ñ?""
whitespace_percentage	˜_òLƒ?"
list_item_indicator  "

word_count	     ÄU@"$
average_sentence_length	{É/L¶™,@"
vocabulary_density	Sñ!éuqÁ?"
digit_percentage	¸©Ò“Mb`?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	     @"
relative_position	WÏ/ª'Á?2Á	
@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_99c“
Ù. We also notice that the same auxiliary domain division has dis - tinct effects for different natural domains. For example, when we use User Occupation as the auxiliary division criterion, the perfor - mance improves on domain # 1, while decreasing for domain # 2 and # 3. This is possibly due to their different sensitivities to this auxiliary division criterion. As for the overall performance across the entire sample space, we have observed that an auxiliary domain division that exhibits larger@9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_99 ó…(ÖÕ:standard_500_50" 
average_word_length	k+ˆó›ì@"$
potential_heading_score	öôôôôô…?"
sentence_count	      @"$
alphanumeric_percentage	ÏQ∏ÖÎÈ?"X
punctuation_countsB*@

#	      @

,	      @

-	       @

.	      @"!
uppercase_percentage	˙~jºtìà?""
whitespace_percentage	À°E∂Û˝ƒ?"
list_item_indicator  "

word_count	     ÄV@"$
average_sentence_length	      2@"
vocabulary_density	K»=õUÂ?"
digit_percentage	˙~jºtìx?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	     @@"
relative_position	–DÿÙJÁ?2÷	
A9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_100d–
Òan auxiliary domain division that exhibits larger domain divergence given the natural division is better. For instance, while users from different geographical regions show minor preference differences, significant differences exist between employed and unemployed users, given the natural domain division. Thus, the User Occupation criterion is better than User Geography in performance. This is because selecting such a criterion better alleviates the non - identically distributed data issue inA9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_100 ’Ã(√–:standard_500_50" 
average_word_length	¿Ïû<,î@"$
potential_heading_score	öôôôôô…?"
sentence_count	      @"$
alphanumeric_percentage	ñ!éuqÎ?"H
punctuation_counts2*0

,	      @

-	      ?

.	      @"!
uppercase_percentage	ˇ!˝ˆu‡å?""
whitespace_percentage	ﬂ‡ì©Ç¡?"
list_item_indicator  "

word_count	      S@"$
average_sentence_length	      3@"
vocabulary_density	p_ŒQÊ?"
digit_percentage	        "
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	     @"
relative_position	+ˆó›ìáÁ?2ã

A9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_101e’
ˆthe non - identically distributed data issue in naturally divided domains. 2155 MultiLoRA: Multi - Directional Low - Rank Adaptation for Multi - Domain Recommendation CIKM ‚Äô 24, October 21 ‚Äì 25, 2024, Boise, ID, USA 4. 6 Efficiency Analysis (RQ 5) MultiLoRA demonstrates outstanding parameter efficiency. For in - stance, when using MLP as the backbone, training a LoRA or the LoRA fusion module requires learning significantly fewer param - eters compared to full fine - tuning. The details can beA9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_101 ó–(˜”:standard_500_50" 
average_word_length	éuq`@"$
potential_heading_score	öôôôôô…?"
sentence_count	      @"$
alphanumeric_percentage	·ì©ÇQÈ?"x
punctuation_countsb*`

(	      ?

)	      ?

:	      ?

,	      @

-	      @

.	      @"!
uppercase_percentage	MÑOØîµ?""
whitespace_percentage	ﬁìáÖZ”ƒ?"
list_item_indicator  "

word_count	      X@"$
average_sentence_length	3333333@"
vocabulary_density	èSt$óˇË?"
digit_percentage	ΩRñ!éu°?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	      @"
relative_position	•N@a√Á?2´

A9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_102f“
Ûcompared to full fine - tuning. The details can be found in Table 7, where the numbers in parentheses show the percentage of trainable parameters relative to the whole backbone and the feature interaction layer. Table 7: Statistics of trainable parameters. Module # Trainable Parameter MovieLens Amazon 5 - core Ali - CCP Fully Fine - tune 275 k 2. 9 M 26. 4 M Feature Interaction 63 k 710 k 1. 4 M LoRA 6 k (2. 19 %, 9. 56 %) 54 k (1. 84 %, 7. 58 %) 152 k (0. 57 %, 10. 62 %) LoRA Fusion 6 k (2. 15A9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_102 »”(ë◊:standard_500_50" 
average_word_length	+áŸN@"$
potential_heading_score	öôôôôô…?"
sentence_count	      ,@"$
alphanumeric_percentage	æ¡&SÁ?"ö
punctuation_countsÉ*Ä

#	      ?

%	      @

(	      @

)	      @

:	      ?

,	      @

-	      @

.	      *@"!
uppercase_percentage	öwú¢#π¨?""
whitespace_percentage	[B>ËŸ¨ ?"
list_item_indicator  "

word_count	     @`@"$
average_sentence_length	5Ô8EGí"@"
vocabulary_density	0ª'µ‚?"
digit_percentage	ÃHø}∏?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	     0@"
relative_position	      Ë?2à

A9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_103g“
Û. 84 %, 7. 58 %) 152 k (0. 57 %, 10. 62 %) LoRA Fusion 6 k (2. 15 %, 9. 37 %) 46 k (1. 57 %, 6. 48 %) 154 k (0. 58 %, 10. 78 %) We observe that the majority of parameters reside in the embed - ding layer. However, even when compared to the feature interaction layer, our approach only learns and stores one - tenth of the param - eters. Furthermore, by introducing auxiliary domain division and learning two sets of LoRAs and the LoRA fusion modules, we in - directly obtain domain - specific modelsA9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_103 ‡÷(™⁄:standard_500_50" 
average_word_length	»òªñê@"$
potential_heading_score	öôôôôô…?"
sentence_count	      *@"$
alphanumeric_percentage	&S£íÊ?"x
punctuation_countsb*`

%	      $@

(	      @

)	      @

,	      "@

-	      @

.	      (@"!
uppercase_percentage	}–≥Yıπö?""
whitespace_percentage	µ¶y«) ?"
list_item_indicator  "

word_count	     Ä`@"$
average_sentence_length	Ê?§ﬂæN$@"
vocabulary_density	V-≤·?"
digit_percentage	ú¢#π¸á¥?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	     0@"
relative_position	[±øÏû<Ë?2ˆ	
A9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_104h–
Ò, we in - directly obtain domain - specific models for ? ? ? ? domains, where ? ? and ? ? are the numbers of domains under the two domain divisions. This not only surpasses methods like STAR and fully fine - tuning that require 100 % more trainable parameters for each domain, but also outperforms typical PEFT methods. 5 Related Work 5. 1 Multi - Domain Recommendation Multi - domain recommendation is a type of cross - domain recom - mendation problem where the number of domains is greater thanA9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_104 ¸Ÿ(ÿ›:standard_500_50" 
average_word_length	Áå(Ìæ@"$
potential_heading_score	öôôôôô…?"
sentence_count	      @"$
alphanumeric_percentage	öwú¢#πË?"h
punctuation_countsR*P

%	      ?

,	      @

-	      @

.	      @

?	       @"!
uppercase_percentage	?W[±øÏû?""
whitespace_percentage	è‰Ú“o«?"
list_item_indicator  "

word_count	     @X@"$
average_sentence_length	     @8@"
vocabulary_density	bX9¥»‰?"
digit_percentage	Ä∑@Ç‚«à?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	     @"
relative_position	’	h"lxË?2â

A9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_105i”
Ùwhere the number of domains is greater than two. The MDR problem discussed in this paper is also known as multi - target cross - domain recommendation, which aims to improve recommendation performance on multiple domains simultaneously. Li et al. [15] summarized three different types of domains: sys - tem domain, data domain, and temporal domain. Specifically, for different system domains, there are different types of items or gen - res. For the data domain, they referred to user preferences forA9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_105 Æ›(õ·:standard_500_50" 
average_word_length	Âa°÷4Ø@"$
potential_heading_score	öôôôôô…?"
sentence_count	      @"$
alphanumeric_percentage	Ó|?5^∫È?"x
punctuation_countsb*`

:	      ?

[	      ?

,	      @

-	      @

]	      ?

.	      @"!
uppercase_percentage	yÈ&1¨å?""
whitespace_percentage	{ÆG·zƒ?"
list_item_indicator  "

word_count	     ¿W@"$
average_sentence_length	{É/L¶™/@"
vocabulary_density	€ä˝e˜‰Â?"
digit_percentage	¸©Ò“Mbp?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	     @@"
relative_position	0ª'µË?2˜	
A9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_106j—
Údata domain, they referred to user preferences for items stored in various forms of data, such as explicit ratings and implicit binary feedback. For the temporal domain, interaction records are divided into multiple periods based on timestamps, with each pe - riod constituting a domain. This domain division theory has been widely cited in subsequent researches [35]. There are various existing MDR methods proposed in recent years. For instance, MMoE [18] utilizes a set of bottom networks calledA9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_106 Í‡(⁄‰:standard_500_50" 
average_word_length	å€h oÅ@"$
potential_heading_score	öôôôôô…?"
sentence_count	      @"$
alphanumeric_percentage	e™`TR'Í?"h
punctuation_countsR*P

[	       @

,	      @

-	      ?

]	       @

.	      @"!
uppercase_percentage	æ0ô*ïî?""
whitespace_percentage	µ˚ÀÓ…√?"
list_item_indicator  "

word_count	     ¿V@"$
average_sentence_length	3333332@"
vocabulary_density	∫⁄ä˝e˜Ë?"
digit_percentage	¸©Ò“MbÄ?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	      @"
relative_position	©–DÿË?2Ò	
A9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_107kÀ
ÏMMoE [18] utilizes a set of bottom networks called experts, alongside a gating network to dynamically select ex - perts for each domain. STAR [27] adopts a fully - connected network with a star topology, while SAR - Net [26] employs two attention layers to capture user cross - domain interests. However, these ap - proaches adopt a multi - task training paradigm, often featuring complex structures, hindering integration with traditional back - bones and impeding deployment in real - worldA9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_107 ©‰(áË:standard_500_50" 
average_word_length	’xÈ&1à@"$
potential_heading_score	öôôôôô…?"
sentence_count	      @"$
alphanumeric_percentage	 2ƒ±.nÈ?"h
punctuation_countsR*P

[	      @

,	      @

]	      @

-	       @

.	       @"!
uppercase_percentage	HP¸ò?""
whitespace_percentage	U0*©–ƒ?"
list_item_indicator  "

word_count	     ÄW@"$
average_sentence_length	æ¡&SU?@"
vocabulary_density	1ô*ï‘Á?"
digit_percentage	HP¸à?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	     ¿~@"
relative_position	≈è1w-È?2ó

A9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_108l–
Òback - bones and impeding deployment in real - world industrial settings. 5. 2 Parameter - Efficient Fine - Tuning The concept of Parameter - Efficient Fine - Tuning (PEFT) was ini - tially proposed in natural language processing area [10]. With the significant increase in the scale of pre - trained language models in recent years, full fine - tuning has become cost - prohibitive. PEFT methods attract growing attention as they only require fine - tuning a small portion of parameters. ExistingA9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_108 ◊Á(≤Î:standard_500_50" 
average_word_length	Y∑— û@"$
potential_heading_score	öôôôôô…?"
sentence_count	      @"$
alphanumeric_percentage	vOjMÈ?"à
punctuation_countsr*p

(	      ?

)	      ?

[	      ?

,	      ?

-	      &@

]	      ?

.	      @"!
uppercase_percentage	jMÛé£?""
whitespace_percentage	«K7âA`≈?"
list_item_indicator  "

word_count	     ÄW@"$
average_sentence_length	Ö|–≥YU/@"
vocabulary_density	Ú∞PköwÊ?"
digit_percentage	¸©Ò“MbÄ?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	     @"
relative_position	~8gDiÈ?2º

A9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_109m”
Ù- tuning a small portion of parameters. Existing PEFT methods can be pri - marily categorized into three paradigms: adapter, prompt - tuning, and low - rank adaptation (LoRA) [8]. Adapter - based methods insert small neural modules called adapters into the pre - trained network, and only these adapters are trained during fine - tuning [10, 32]. Prompt tuning [14] and prefix tuning [17], inspired by the success of prompting methods, adds additional ? ? tunable prefix tokens to the input or hiddenA9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_109 ÑÎ(ÍÓ:standard_500_50" 
average_word_length	ô*ï‘	@"$
potential_heading_score	öôôôôô…?"
sentence_count	      @"$
alphanumeric_percentage	¢E∂Û˝‘Ë?"™
punctuation_countsì*ê

(	      ?

)	      ?

:	      ?

[	      @

,	      @

-	      @

]	      @

.	      @

?	       @"!
uppercase_percentage	{ÆG·zî?""
whitespace_percentage	shëÌ|?≈?"
list_item_indicator "

word_count	      Z@"$
average_sentence_length	      :@"
vocabulary_density	]˛C˙ÌÎ‰?"
digit_percentage	;ﬂOçóní?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	     @@"
relative_position	ŸŒ˜S„•È?2à

A9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_110n“
Û? ? tunable prefix tokens to the input or hidden layers, and only these soft prompts are trained. In the case of LoRA - based methods, Hu et al. [11] argue that the learned parameters in fine - tuning reside in a low intrinsic dimen - sion. Therefore, they learn low - rank matrices to appropriately up - date parameters [4, 12]. Some works apply PEFT techniques to recommendation sys - tems, but most aim to leverage large pre - trained models to obtain higher - quality feature vectors, exhibitingA9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_110 ºÓ(†Ú:standard_500_50" 
average_word_length	ô*ï‘â@"$
potential_heading_score	öôôôôô…?"
sentence_count	      @"$
alphanumeric_percentage	çónÉ¿Ë?"x
punctuation_countsb*`

[	       @

,	      @

-	       @

]	       @

.	      @

?	       @"!
uppercase_percentage	∫I+áñ?""
whitespace_percentage	ÑûÕ™œ’∆?"
list_item_indicator  "

word_count	      Z@"$
average_sentence_length	ÕÃÃÃÃÃ4@"
vocabulary_density	mV}Æ∂bÁ?"
digit_percentage	{ÆG·zÑ?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	     0@"
relative_position	R'†â∞·È?2Ó	
A9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_111o»
Èobtain higher - quality feature vectors, exhibiting fundamental differences from our approach. Recently, HAMUR [16] learns a domain - shared hyper - network to dynamically generate the adapter parameters for each domain. However, it has to learn a backbone network for each domain, resulting in a high computational and storage cost. PLATE [29] employs prompt - tuning with two prompt mod - ules, namely domain prompt and user prompt, to capture domain distinctions and offer more accurateA9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_111 Ò(œı:standard_500_50" 
average_word_length	%uö[@"$
potential_heading_score	öôôôôô…?"
sentence_count	      @"$
alphanumeric_percentage	}Æ∂bŸÈ?"h
punctuation_countsR*P

[	       @

,	      @

-	      @

]	       @

.	      @"!
uppercase_percentage	J+áô?""
whitespace_percentage	˘1ÊÆ%‰√?"
list_item_indicator  "

word_count	     ÄV@"$
average_sentence_length	     Ä6@"
vocabulary_density	TR'†â∞Â?"
digit_percentage		û^)ÀÄ?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	     ê~@"
relative_position	Æÿ_vOÍ?2ﬁ	
A9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_112p»
Èdomain distinctions and offer more accurate personalized recommenda - tions. However, the prompt tuning technique heavily relies on the generalization capability of the pre - trained model. 6 Conclusions In this paper, we identify the shortcomings of existingmulti - domain recommendation methods: MTL - based methods suffer from poor deployability and negative transfer, while PEFT - based methods overlook the fundamental differences between recommendation and NLP tasks, restricting theA9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_112 •ı(Ñ˘:standard_500_50" 
average_word_length	úƒ ∞r(@"$
potential_heading_score	öôôôôô…?"
sentence_count	      @"$
alphanumeric_percentage	˚ÀÓ…√Í?"X
punctuation_countsB*@

:	      ?

,	      @

-	      @

.	       @"!
uppercase_percentage	Ã]K»=õ?""
whitespace_percentage	 “o_Œ¡?"
list_item_indicator  "

word_count	      S@"$
average_sentence_length	æ¡&SU9@"
vocabulary_density	∏ØÁå(Á?"
digit_percentage	¸©Ò“Mb`?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	     ê~@"
relative_position	'1¨ZÍ?2¯	
A9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_113q“
Ûrecommendation and NLP tasks, restricting the effectiveness of prompts and adapters. Additionally, we argue that the traditional natural domain division is insufficient, as it violates the independent and identically dis - tributed (i. i. d.) data assumption, leading to suboptimal performance. In response, we propose MultiLoRA, a multi - directional low - rank adaptation paradigm for multi - domain recommendation. We intro - duce LoRA, which is better suited for MDR tasks, offering efficiency (A9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_113 ÿ¯(¿¸:standard_500_50" 
average_word_length		äcÆ@"$
potential_heading_score	        "
sentence_count	      @"$
alphanumeric_percentage	π¸áÙ€◊È?"h
punctuation_countsR*P

(	       @

)	      ?

,	       @

-	      @

.	      @"!
uppercase_percentage	8gDio†?""
whitespace_percentage	$óˇê~˚¬?"
list_item_indicator  "

word_count	     ¿V@"$
average_sentence_length	Ö|–≥YU.@"
vocabulary_density	>yX®5ÕÂ?"
digit_percentage	        "
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	     0@"
relative_position	Ç‚«òªñÍ?2Å

A9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_114rÀ
Ïbetter suited for MDR tasks, offering efficiency (training only 2 % of the parameters) and effectiveness (avoiding cat - astrophic forgetting). By leveraging the composable nature of LoRA, we combine preference patterns learned under different domain divisions by combining weight updates in different directions, indi - rectly achieving finer - grained domain division. Through extensive experiments, we demonstrate the superior performance of Multi - LoRA, surpassing state - of - the - artA9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_114 è¸(Óˇ:standard_500_50" 
average_word_length	      @"$
potential_heading_score	öôôôôô…?"
sentence_count	      @"$
alphanumeric_percentage	ÆG·zÍ?"x
punctuation_countsb*`

%	      ?

(	       @

)	       @

,	      @

-	      @

.	       @"!
uppercase_percentage	HP¸ò?""
whitespace_percentage	}–≥Yıπ¬?"
list_item_indicator  "

word_count	      U@"$
average_sentence_length	      <@"
vocabulary_density	Ã]K»=Á?"
digit_percentage	¸©Ò“Mb`?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	     ¿~@"
relative_position	˚:pŒà“Í?2µ

A9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_115sÃ
Ìof Multi - LoRA, surpassing state - of - the - art baselines on various backbones while showcasing its versatility and compatibility. 7 Acknowledgement This work is partially sponsored by National Key R & D Program of China under Grant 2022 YFB 3104200, NSFC (62032003), and research grant No. SH - 2024 JK 29. 2156 CIKM ‚Äô 24, October 21 ‚Äì 25, 2024, Boise, ID, USA Zijian Song et al. References [1] Rich Caruana. 1993. Multitask learning: A knowledge - based source of inductive bias 1. InA9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_115 ƒˇ(óÉ:standard_500_50" 
average_word_length	6<ΩRñ!@"$
potential_heading_score	öôôôôô…?"
sentence_count	       @"$
alphanumeric_percentage	∑bŸ=yË?"™
punctuation_countsì*ê

&	      ?

(	      ?

)	      ?

:	      ?

[	      ?

,	       @

-	      @

]	      ?

.	      @"!
uppercase_percentage	
◊£p=
∑?""
whitespace_percentage	2ÊÆ%‰É∆?"
list_item_indicator  "

word_count	     ¿Z@"$
average_sentence_length	     ¿*@"
vocabulary_density	˚:pŒà“Ë?"
digit_percentage	ª∏ç∏?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	     ê~@"
relative_position	WÏ/ª'Î?2â

A9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_116t”
Ù: A knowledge - based source of inductive bias 1. In Proceedings of the Tenth International Conference on Machine Learning. 41 ‚Äì 48. [2] Xusong Chen, Dong Liu, Zheng - Jun Zha, Wengang Zhou, Zhiwei Xiong, and Yan Li. 2018. Temporal hierarchical attention at category - and item - level for micro - video click - through prediction. In Proceedings of the 26 th ACM international conference on Multimedia. 1146 ‚Äì 1153. [3] Heng - Tze Cheng, Levent Koc, Jeremiah Harmsen, Tal Shaked, Tushar Chandra,A9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_116 ÁÇ(√Ü:standard_500_50" 
average_word_length	Á˚©Ò“Õ@"$
potential_heading_score	        "
sentence_count	      "@"$
alphanumeric_percentage	2ÊÆ%‰ÉË?"x
punctuation_countsb*`

:	      ?

[	       @

,	      $@

-	      @

]	       @

.	       @"!
uppercase_percentage	ê1w-!¥?""
whitespace_percentage	ê†¯1ÊÆ≈?"
list_item_indicator  "

word_count	     ¿Z@"$
average_sentence_length	,‘öÊ«'@"
vocabulary_density	YÜ8÷≈mÊ?"
digit_percentage	Ÿ=yX®•?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	      @"
relative_position	–DÿÙJÎ?2≠

A9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_117u‘
ıKoc, Jeremiah Harmsen, Tal Shaked, Tushar Chandra, Hrishi Aradhye, Glen Anderson, Greg Corrado, Wei Chai, Mustafa Ispir, et al. 2016. Wide & deep learning for recommender systems. In Proceedings of the 1 st workshop on deep learning for recommender systems. 7 ‚Äì 10. [4] Ali Edalati, Marzieh Tahaei, Ivan Kobyzev, Vahid Partovi Nia, James J Clark, and Mehdi Rezagholizadeh. 2022. Krona: Parameter efficient tuning with kronecker adapter. arXiv preprint arXiv: 2212. 10650 (2022). [5] Robert M French.A9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_117 íÜ(ˇâ:standard_500_50" 
average_word_length	›$Åï√@"$
potential_heading_score	        "
sentence_count	      &@"$
alphanumeric_percentage	√”+e‚Ë?"ö
punctuation_countsÉ*Ä

&	      ?

(	      ?

)	      ?

:	       @

[	       @

,	      ,@

]	       @

.	      &@"!
uppercase_percentage	Ï/ª'µ?""
whitespace_percentage	t$óˇê~√?"
list_item_indicator  "

word_count	     Ä[@"$
average_sentence_length	      $@"
vocabulary_density	ffffffÊ?"
digit_percentage	˚\m≈˛≤´?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	     0@"
relative_position	+ˆó›ìáÎ?2Æ

A9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_118v’
ˆarXiv: 2212. 10650 (2022). [5] Robert M French. 1999. Catastrophic forgetting in connectionist networks. Trends in cognitive sciences 3, 4 (1999), 128 ‚Äì 135. [6] Huifeng Guo, Ruiming Tang, Yunming Ye, Zhenguo Li, and Xiuqiang He. 2017. DeepFM: a factorization - machine based neural network for CTR prediction. arXiv preprint arXiv: 1703. 04247 (2017). [7] F Maxwell Harper and Joseph A Konstan. 2015. The movielens datasets: History and context. Acm transactions on interactive intelligent systems (A9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_118 ”â(æç:standard_500_50" 
average_word_length	z6´>W[@"$
potential_heading_score	        "
sentence_count	      .@"$
alphanumeric_percentage	NbX9¥Ë?"ö
punctuation_countsÉ*Ä

(	      @

)	      @

:	      @

[	      @

,	      @

]	      @

-	      ?

.	      ,@"!
uppercase_percentage	L7âA`Â∞?""
whitespace_percentage	333333√?"
list_item_indicator  "

word_count	      \@"$
average_sentence_length	=,‘öÊ›@"
vocabulary_density	ËŸ¨˙\mÂ?"
digit_percentage	âA`Â–"ª?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	     @@"
relative_position	•N@a√Î?2®

A9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_119wœ
transactions on interactive intelligent systems (tiis) 5, 4 (2015), 1 ‚Äì 19. [8] Junxian He, Chunting Zhou, Xuezhe Ma, Taylor Berg - Kirkpatrick, and Graham Neubig. 2021. Towards a unified view of parameter - efficient transfer learning. arXiv preprint arXiv: 2110. 04366 (2021). [9] Jonathan Ho, Ajay Jain, and Pieter Abbeel. 2020. Denoising diffusion probabilistic models. Advances in neural information processing systems 33 (2020), 6840 ‚Äì 6851. [10] Neil Houlsby, Andrei Giurgiu, StanislawA9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_119 éç(Ôê:standard_500_50" 
average_word_length	ﬁìáÖZ”@"$
potential_heading_score	öôôôôô…?"
sentence_count	      &@"$
alphanumeric_percentage	÷≈m4Ä∑Ë?"ö
punctuation_countsÉ*Ä

(	      @

)	      @

:	      ?

[	      @

,	      &@

]	      @

-	       @

.	      $@"!
uppercase_percentage	ŒQ⁄¨?""
whitespace_percentage	}–≥Yıπ¬?"
list_item_indicator  "

word_count	     @[@"$
average_sentence_length	Sñ!éu—#@"
vocabulary_density	 2ƒ±.nÂ?"
digit_percentage	HP¸∏?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	     ¿~@"
relative_position	      Ï?2¨

A9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_120x”
Ù6851. [10] Neil Houlsby, Andrei Giurgiu, Stanislaw Jastrzebski, Bruna Morrone, Quentin De Laroussilhe, Andrea Gesmundo, Mona Attariyan, and Sylvain Gelly. 2019. Parameter - efficient transfer learning for NLP. In International Conference on Machine Learning. PMLR, 2790 ‚Äì 2799. [11] Edward J Hu, Yelong Shen, Phillip Wallis, Zeyuan Allen - Zhu, Yuanzhi Li, Shean Wang, Lu Wang, and Weizhu Chen. 2021. Lora: Low - rank adaptation of large language models. arXiv preprint arXiv: 2106. 09685 (2021). [A9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_120 æê(•î:standard_500_50" 
average_word_length	›$Åï√@"$
potential_heading_score	        "
sentence_count	      (@"$
alphanumeric_percentage	[B>ËŸ¨Ë?"ö
punctuation_countsÉ*Ä

(	      ?

)	      ?

:	       @

[	      @

,	      .@

]	       @

-	      @

.	      &@"!
uppercase_percentage	}–≥Yıπ∫?""
whitespace_percentage	fàc]‹F√?"
list_item_indicator "

word_count	     Ä[@"$
average_sentence_length	Ö|–≥YU"@"
vocabulary_density	ŒQ⁄Ê?"
digit_percentage	æ¡&S≥?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	      @"
relative_position	[±øÏû<Ï?2´

A9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_121y“
Ûmodels. arXiv preprint arXiv: 2106. 09685 (2021). [12] Nam Hyeon - Woo, Moon Ye - Bin, and Tae - Hyun Oh. 2021. Fedpara: Low - rank hadamard product for communication - efficient federated learning. arXiv preprint arXiv: 2108. 06098 (2021). [13] Mostafa Kamal, Tarek Aziz Bablu, et al. 2022. Machine Learning Models for Pre - dicting Click - through Rates on social media: Factors and Performance Analysis. International Journal of Applied Machine Learning and Computational Intelligence 12, 4 (2022A9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_121 ıì(÷ó:standard_500_50" 
average_word_length	MÑO/@"$
potential_heading_score	öôôôôô…?"
sentence_count	      (@"$
alphanumeric_percentage	„•õƒ ∞Ë?"ö
punctuation_countsÉ*Ä

(	      @

)	       @

:	      @

[	       @

,	      @

]	       @

-	      @

.	      &@"!
uppercase_percentage	L¶
F%u≤?""
whitespace_percentage	ƒ±.n£ƒ?"
list_item_indicator  "

word_count	      [@"$
average_sentence_length	      "@"
vocabulary_density	_ŒQ⁄„?"
digit_percentage	,e‚X∑?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	     0@"
relative_position	’	h"lxÏ?2Æ

A9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_122z’
ˆand Computational Intelligence 12, 4 (2022), 1 ‚Äì 14. [14] Brian Lester, Rami Al - Rfou, and Noah Constant. 2021. The power of scale for parameter - efficient prompt tuning. arXiv preprint arXiv: 2104. 08691 (2021). [15] Bin Li. 2011. Cross - domain collaborative filtering: A brief survey. In 2011 IEEE 23 rd International Conference on Tools with Artificial Intelligence. IEEE, 1085 ‚Äì 1086. [16] Xiaopeng Li, Fan Yan, Xiangyu Zhao, Yichao Wang, Bo Chen, Huifeng Guo, and Ruiming Tang. 2023. HAMUR:A9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_122 ≠ó(ëõ:standard_500_50" 
average_word_length	F%uö@"$
potential_heading_score	        "
sentence_count	      ,@"$
alphanumeric_percentage	jºtìË?"ö
punctuation_countsÉ*Ä

(	       @

)	       @

:	      @

[	      @

,	      &@

]	      @

-	      @

.	      *@"!
uppercase_percentage	ç(Ìæ0π?""
whitespace_percentage	ﬁìáÖZ”ƒ?"
list_item_indicator  "

word_count	     ¿]@"$
average_sentence_length	      !@"
vocabulary_density	0ª'µ‰?"
digit_percentage	lxz•,Cº?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	      @"
relative_position	0ª'µÏ?2≠

A9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_123{‘
ıChen, Huifeng Guo, and Ruiming Tang. 2023. HAMUR: Hyper Adapter for Multi - Domain Recommenda - tion. In Proceedings of the 32 nd ACM International Conference on Information and Knowledge Management. 1268 ‚Äì 1277. [17] Xiang Lisa Li and Percy Liang. 2021. Prefix - tuning: Optimizing continuous prompts for generation. arXiv preprint arXiv: 2101. 00190 (2021). [18] Jiaqi Ma, Zhe Zhao, Xinyang Yi, Jilin Chen, Lichan Hong, and Ed H Chi. 2018. Modeling task relationships in multi - task learning withA9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_123 ·ö(«û:standard_500_50" 
average_word_length	çónÉ¿@"$
potential_heading_score	öôôôôô…?"
sentence_count	      *@"$
alphanumeric_percentage	çónÉ¿Ë?"ö
punctuation_countsÉ*Ä

(	      ?

)	      ?

:	      @

[	       @

,	      @

-	      @

]	       @

.	      (@"!
uppercase_percentage	‡-ê†∏?""
whitespace_percentage	?∆‹µÑƒ?"
list_item_indicator  "

word_count	     @[@"$
average_sentence_length	MåJÍƒ @"
vocabulary_density	Ìû<,‘öÊ?"
digit_percentage	MåJÍ¥?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	     0@"
relative_position	©–DÿÏ?2ù

A9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_124|÷
˜task relationships in multi - task learning with multi - gate mixture - of - experts. In Proceedings of the 24 th ACM SIGKDD international conference on knowledge discovery & data mining. 1930 ‚Äì 1939. [19] Xiao Ma, Liqin Zhao, Guan Huang, Zhi Wang, Zelin Hu, Xiaoqiang Zhu, and Kun Gai. 2018. Entire space multi - task model: An effective approach for estimating post - click conversion rate. In The 41 st International ACM SIGIR Conference on Research & Development in Information Retrieval. 1137 ‚ÄìA9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_124 öû(¸°:standard_500_50" 
average_word_length	:#J{Éo@"$
potential_heading_score	        "
sentence_count	       @"$
alphanumeric_percentage	m≈˛≤{ÚË?"à
punctuation_countsr*p

&	       @

:	      ?

[	      ?

,	      @

-	      @

]	      ?

.	      @"!
uppercase_percentage	åJÍ4∂?""
whitespace_percentage	¥Yıπ⁄ä≈?"
list_item_indicator  "

word_count	     @Y@"$
average_sentence_length	     @)@"
vocabulary_density	5Ô8EGrÁ?"
digit_percentage	‹◊ÅsFî¶?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	     0@"
relative_position	≈è1w-Ì?2ù

A9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_125}÷
˜& Development in Information Retrieval. 1137 ‚Äì 1140. [20] Julian McAuley, Christopher Targett, Qinfeng Shi, and Anton Van Den Hengel. 2015. Image - based recommendations on styles and substitutes. In Proceedings of the 38 th international ACM SIGIR conference on research and development in information retrieval. 43 ‚Äì 52. [21] Michael McCloskey and Neal J Cohen. 1989. Catastrophic interference in con - nectionist networks: The sequential learning problem. In Psychology of learning and motivationA9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_125 –°(∫•:standard_500_50" 
average_word_length	ˆó›ìáÖ@"$
potential_heading_score	öôôôôô…?"
sentence_count	      &@"$
alphanumeric_percentage	π¸áÙ€◊È?"à
punctuation_countsr*p

&	      ?

:	      ?

[	       @

,	      @

]	       @

-	       @

.	      $@"!
uppercase_percentage	¸s◊Ú±?""
whitespace_percentage	}–≥Yıπ¬?"
list_item_indicator  "

word_count	      W@"$
average_sentence_length	µ¶y«)∫ @"
vocabulary_density	X®5Õ;NÁ?"
digit_percentage	[B>ËŸ¨™?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	     0@"
relative_position	~8gDiÌ?2ù

A9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_126~÷
˜problem. In Psychology of learning and motivation. Vol. 24. Elsevier, 109 ‚Äì 165. [22] Robin Rombach, Andreas Blattmann, Dominik Lorenz, Patrick Esser, and Bj√∂rn Ommer. 2022. High - resolution image synthesis with latent diffusion models. In Proceedings of the IEEE / CVF conference on computer vision and pattern recognition. 10684 ‚Äì 10695. [23] S. Ryu. 2024. Low - rank Adaptation for Fast Text - to - Image Diffusion Fine - tuning. https: // github. com / cloneofsimo / lora Accessed: 2024 - 05 -A9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_126 ä•(·®:standard_500_50" 
average_word_length	ÙlV}.@"$
potential_heading_score	        "
sentence_count	      0@"$
alphanumeric_percentage	jºtìË?"à
punctuation_countsr*p

:	       @

[	       @

,	      @

]	       @

-	      @

.	      .@

/	      @"!
uppercase_percentage	ŒQ⁄|±?""
whitespace_percentage	-!ÙlV≈?"
list_item_indicator  "

word_count	     Ä[@"$
average_sentence_length	     Ä@"
vocabulary_density	®5Õ;N—Â?"
digit_percentage	n4Ä∑@Ç≤?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	      @"
relative_position	ŸŒ˜S„•Ì?2∫

A9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_127—
Ú: // github. com / cloneofsimo / lora Accessed: 2024 - 05 - 19. [24] Viraj Shah, Nataniel Ruiz, Forrester Cole, Erika Lu, Svetlana Lazebnik, Yuanzhen Li, and Varun Jampani. 2023. ZipLoRA: Any Subject in Any Style by Effectively Merging LoRAs. arXiv: 2311. 13600 [cs. CV] [25] Pengyang Shao, Le Wu, Lei Chen, Kun Zhang, and Meng Wang. 2022. FairCF: Fairness - aware collaborative filtering. Science China Information Sciences 65, 12 (2022), 222102. [26] Qijie Shen, Wanjie Tao, Jing Zhang, Hong Wen,A9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_127 ±®(í¨:standard_500_50" 
average_word_length	ê1w-!@"$
potential_heading_score	        "
sentence_count	      (@"$
alphanumeric_percentage	ŸŒ˜S„•Á?"™
punctuation_countsì*ê

(	      ?

)	      ?

:	      @

[	      @

,	      0@

-	      @

]	      @

.	      &@

/	      @"!
uppercase_percentage	Zd;ﬂOΩ?""
whitespace_percentage	ﬁìáÖZ”ƒ?"
list_item_indicator  "

word_count	     ¿^@"$
average_sentence_length	     Ä$@"
vocabulary_density	ﬂOçónÂ?"
digit_percentage	MÛéSt$∑?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	      @"
relative_position	R'†â∞·Ì?2ó

A9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_128Äœ
[26] Qijie Shen, Wanjie Tao, Jing Zhang, Hong Wen, Zulong Chen, and Quan Lu. 2021. Sar - net: a scenario - aware ranking network for personalized fair recommendation in hundreds of travel scenarios. In Proceedings of the 30 th ACM International Conference on Information & Knowledge Management. 4094 ‚Äì 4103. [27] Xiang - Rong Sheng, Liqin Zhao, Guorui Zhou, Xinyao Ding, Binding Dai, Qiang Luo, Siran Yang, Jingshan Lv, Chi Zhang, Hongbo Deng, et al. 2021. One model to serve all: Star topologyA9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_128 ·´(≈Ø:standard_500_50" 
average_word_length	oÅ≈è±@"$
potential_heading_score	öôôôôô…?"
sentence_count	       @"$
alphanumeric_percentage	È∑ØÁåË?"à
punctuation_countsr*p

&	      ?

:	       @

[	       @

,	      .@

]	       @

-	      @

.	      @"!
uppercase_percentage	ÚAœf’∑?""
whitespace_percentage	shëÌ|?≈?"
list_item_indicator  "

word_count	     ¿[@"$
average_sentence_length	     ¿+@"
vocabulary_density	∞Áå(ÌÁ?"
digit_percentage	bX9¥»¶?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	     ‡~@"
relative_position	Æÿ_vOÓ?2†

A9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_129Åÿ
˘et al. 2021. One model to serve all: Star topology adaptive recommender for multi - domain ctr prediction. In Proceedings of the 30 th ACM International Conference on Information & Knowledge Management. 4104 ‚Äì 4113. [28] Ruoxi Wang, Bin Fu, Gang Fu, and Mingliang Wang. 2017. Deep & cross network for ad click predictions. In Proceedings of the ADKDD ‚Äô 17. 1 ‚Äì 7. [29] Yuhao Wang, Xiangyu Zhao, Bo Chen, Qidong Liu, Huifeng Guo, Huanshuo Liu, Yichao Wang, Rui Zhang, and Ruiming Tang. 2023. PLATE: AA9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_129 îØ(˝≤:standard_500_50" 
average_word_length	$óˇê~{@"$
potential_heading_score	öôôôôô…?"
sentence_count	      *@"$
alphanumeric_percentage	=
◊£p=Ë?"à
punctuation_countsr*p

&	       @

:	       @

[	       @

,	      &@

-	      ?

]	       @

.	      (@"!
uppercase_percentage	[B>ËŸ¨∫?""
whitespace_percentage	Áå(Ì∆?"
list_item_indicator  "

word_count	      ]@"$
average_sentence_length	‡-ê†ÿ!@"
vocabulary_density	ònÉ¿ Â?"
digit_percentage	⁄¨˙\m≈Æ?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	     0@"
relative_position	'1¨ZÓ?2≠

A9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_130Ç”
ÙWang, Rui Zhang, and Ruiming Tang. 2023. PLATE: A Prompt - Enhanced Paradigm for Multi - Scenario Recommendations. In Proceedings of the 46 th International ACM SIGIR Conference on Research and Development in Information Retrieval. 1498 ‚Äì 1507. [30] Shitao Xiao, Yingxia Shao, Yawen Li, Hongzhi Yin, Yanyan Shen, and Bin Cui. 2022. LECF: recommendation via learnable edge collaborative filtering. Science China Information Sciences 65, 1 (2022), 112101. [31] Shuo Xiao, Dongqing Zhu, Chaogang Tang,A9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_130 Õ≤(∏∂:standard_500_50" 
average_word_length	Ê?§ﬂæN@"$
potential_heading_score	        "
sentence_count	      $@"$
alphanumeric_percentage	´œ’VÏ/È?"ö
punctuation_countsÉ*Ä

(	      ?

)	      ?

:	       @

[	       @

,	      (@

-	       @

]	       @

.	      "@"!
uppercase_percentage	ºtìVæ?""
whitespace_percentage	æ¡&S√?"
list_item_indicator  "

word_count	      Z@"$
average_sentence_length	ÕÃÃÃÃÃ$@"
vocabulary_density	£ºÁ?"
digit_percentage	ßËH.ˇ±?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	      @"
relative_position	Ç‚«òªñÓ?2Æ

A9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_131É‘
ı. [31] Shuo Xiao, Dongqing Zhu, Chaogang Tang, and Zhenzhen Huang. 2023. Com - bining graph contrastive embedding and multi - head cross - attention transfer for cross - domain recommendation. Data Science and Engineering 8, 3 (2023), 247 ‚Äì 262. [32] Taojiannan Yang, Yi Zhu, Yusheng Xie, Aston Zhang, Chen Chen, and Mu Li. 2023. Aim: Adapting image models for efficient video action recognition. arXiv preprint arXiv: 2302. 03024 (2023). [33] Zheng Yuan, Fajie Yuan, Yu Song, Youhua Li, Junchen Fu,A9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_131 ã∂(Úπ:standard_500_50" 
average_word_length	üÕ™œ’V@"$
potential_heading_score	        "
sentence_count	      &@"$
alphanumeric_percentage	È&1¨Ë?"ö
punctuation_countsÉ*Ä

(	       @

)	       @

:	       @

[	      @

,	      .@

]	      @

-	      @

.	      $@"!
uppercase_percentage	˝áÙ€◊Å≥?""
whitespace_percentage	º?∆ƒ?"
list_item_indicator  "

word_count	     Ä]@"$
average_sentence_length	¯¬d™`t%@"
vocabulary_density	IùÄ&¬Ü„?"
digit_percentage	MåJÍ¥?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	     0@"
relative_position	˚:pŒà“Ó?2Ü

A9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_132Ñœ
Yuan, Fajie Yuan, Yu Song, Youhua Li, Junchen Fu, Fei Yang, Yunzhu Pan, and Yongxin Ni. 2023. Where to go next for recommender systems? id - vs. modality - based recommender models revisited. In Proceedings of the 46 th International ACM SIGIR Conference on Research and Development in Information Retrieval. 2639 ‚Äì 2649. [34] Zhiyang Yuan, Wenguang Zheng, Peilin Yang, Qingbo Hao, and Yingyuan Xiao. 2023. Evolving interest with feature co - action network for CTR prediction. Data Science andA9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_132 ¬π(ßΩ:standard_500_50" 
average_word_length	 AÒcÃ@"$
potential_heading_score	öôôôôô…?"
sentence_count	      $@"$
alphanumeric_percentage	ßËH.ˇ!È?"x
punctuation_countsb*`

[	      ?

,	      &@

-	      @

]	      ?

.	      "@

?	      ?"!
uppercase_percentage	√”+e‚∏?""
whitespace_percentage	Ú∞Pköwƒ?"
list_item_indicator  "

word_count	     ¿Y@"$
average_sentence_length	öôôôôô$@"
vocabulary_density	ÈH.ˇ!˝Ê?"
digit_percentage	#€˘~jº§?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	     ‡~@"
relative_position	WÏ/ª'Ô?2±

A9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_133Ö◊
¯network for CTR prediction. Data Science and Engineering 8, 4 (2023), 344 ‚Äì 356. [35] Tianzi Zang, Yanmin Zhu, Haobing Liu, Ruohan Zhang, and Jiadi Yu. 2022. A survey on cross - domain recommendation: taxonomies, methods, and future directions. ACM Transactions on Information Systems 41, 2 (2022), 1 ‚Äì 39. [36] Ming Zhong, Yelong Shen, Shuohang Wang, Yadong Lu, Yizhu Jiao, Siru Ouyang, Donghan Yu, Jiawei Han, and Weizhu Chen. 2024. Multi - LoRA Composition for Image Generation. arXiv: 2402. 16843A9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_133 ¸º(Â¿:standard_500_50" 
average_word_length	Í46<@"$
potential_heading_score	öôôôôô…?"
sentence_count	      &@"$
alphanumeric_percentage	˛‘xÈ&1Ë?"ö
punctuation_countsÉ*Ä

(	       @

)	       @

:	       @

[	       @

,	      2@

]	       @

-	       @

.	      $@"!
uppercase_percentage	J+áπ?""
whitespace_percentage	{ÆG·zƒ?"
list_item_indicator  "

word_count	     ¿]@"$
average_sentence_length	•,CÎ¢%@"
vocabulary_density	ëz6´>Â?"
digit_percentage	jºtì∂?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	     @@"
relative_position	–DÿÙJÔ?2Ω

A9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_134Ü”
ÙComposition for Image Generation. arXiv: 2402. 16843 [cs. CV] [37] Feng Zhu, Yan Wang, Chaochao Chen, Jun Zhou, Longfei Li, and Guanfeng Liu. 2021. Cross - domain recommendation: challenges, progress, and prospects. arXiv preprint arXiv: 2103. 01696 (2021). 2157 https: // github. com / cloneofsimo / lora https: // arxiv. org / abs / 2311. 13600 https: // arxiv. org / abs / 2402. 16843 Abstract 1 Introduction 2 Preliminary 2. 1 Low - Rank Adaptation 2. 2 Multi - Domain CTR Prediction 2. 3 TypicalA9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_134 ¥¿(Çƒ:standard_500_50" 
average_word_length	 ë~˚:p@"$
potential_heading_score	öôôôôô…?"
sentence_count	      1@"$
alphanumeric_percentage	\è¬ı(\Á?"™
punctuation_countsì*ê

(	      ?

)	      ?

:	      @

[	       @

,	      @

]	       @

-	      @

.	      0@

/	      (@"!
uppercase_percentage	úƒ ∞rh±?""
whitespace_percentage	√ı(\è¬≈?"
list_item_indicator  "

word_count	     @^@"$
average_sentence_length	’	h"lx@"
vocabulary_density	ñCãlÁ˚·?"
digit_percentage	V-≤Ω?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	     @@"
relative_position	+ˆó›ìáÔ?2È	
A9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_135á“
Û2. 2 Multi - Domain CTR Prediction 2. 3 Typical Architecture of CTR Backbones 3 Method 3. 1 Overview 3. 2 Multi - Directional Low - Rank Adaptation 3. 3 LoRA Fusion 4 Experiments 4. 1 Experimental Settings 4. 2 Performance Comparison (RQ 1) 4. 3 Ablation Study (RQ 2) 4. 4 Compatibility with Backbone Models (RQ 3) 4. 5 Choice of Auxiliary Domain Division (RQ 4) 4. 6 Efficiency Analysis (RQ 5) 5 Related Work 5. 1 Multi - Domain Recommendation 5. 2 Parameter - Efficient Fine - Tuning 6 ConclusionsA9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_135 ÿ√(¨«:standard_500_50" 
average_word_length	ã˝e˜‰a@"$
potential_heading_score	öôôôôô…?"
sentence_count	      ,@"$
alphanumeric_percentage	Á˚©Ò“MË?"X
punctuation_countsB*@

(	      @

)	      @

-	      @

.	      *@"!
uppercase_percentage	äcÓZBæ?""
whitespace_percentage	‘+e‚X«?"
list_item_indicator "

word_count	     ¿\@"$
average_sentence_length	À«∫∏m @"
vocabulary_density	¸©Ò“Mb‹?"
digit_percentage	¸s◊Ú±?"
is_last_chunk  "
contains_urlplaceholder  "
is_first_chunk  "
character_count	     0@"
relative_position	•N@a√Ô?2®
A9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_136à±
S5. 2 Parameter - Efficient Fine - Tuning 6 Conclusions 7 Acknowledgement ReferencesA9a47e43a-d056-4891-a53c-cb904de90b05_tika-input-doc-084_chunk_136 ¸∆(…«:standard_500_50" 
average_word_length	”º„I@"$
potential_heading_score	öôôôôô…?"
sentence_count	       @"$
alphanumeric_percentage	ú3¢¥7Í?"8
punctuation_counts"* 

-	       @

.	      ?"!
uppercase_percentage	MÑOØîµ?""
whitespace_percentage	n4Ä∑@Ç¬?"
list_item_indicator "

word_count	      ,@"$
average_sentence_length	      @"
vocabulary_density	e‚X∑Ì?"
digit_percentage	=õUü´≠®?"
is_last_chunk "
contains_urlplaceholder  "
is_first_chunk  "
character_count	     ¿T@"
relative_position	      ?